{"ast":null,"code":"import produce from \"immer\";\n\nvar HashMap = function HashMap() {\n  this.map = new Array();\n};\n\nHashMap.prototype = {\n  put: function put(key, value) {\n    this.map[key] = value;\n  },\n  get: function get(key) {\n    return this.map[key];\n  },\n  clear: function clear() {\n    this.map = new Array();\n  },\n  check: function check(key) {\n    if (key in this.map) return this.map[key];else return 0;\n  },\n  push: function push(key, value) {\n    this.map[key].push(value);\n  },\n  length: function length(key) {\n    return this.map[key].length;\n  }\n};\nvar initialState = {\n  exerciseHistoryList: [],\n  exerciseDateList: new HashMap(),\n  exerciseTypeList: new HashMap(),\n  exercise: {\n    type: 1,\n    set: 0,\n    time: 0\n  }\n};\nexport var EXERCISE_HISTORY_FINDALL_REQUEST = \"EXERCISE_HISTORY_FINDALL_REQUEST\";\nexport var EXERCISE_HISTORY_FINDALL_SUCCESS = \"EXERCISE_HISTORY_FINDALL_SUCCESS\";\nexport var EXERCISE_HISTORY_FINDALL_FAILURE = \"EXERCISE_HISTORY_FINDALL_FAILURE\";\nexport var EXERCISE_HISTORY_REGISTER_REQUEST = \"EXERCISE_HISTORY_REGISTER_REQUEST\";\nexport var EXERCISE_HISTORY_REGISTER_SUCCESS = \"EXERCISE_HISTORY_REGISTER_SUCCESS\";\nexport var EXERCISE_HISTORY_REGISTER_FAILURE = \"EXERCISE_HISTORY_REGISTER_FAILURE\";\nvar SET_EXERCISE_TYPE = \"SET_EXERCISE_TYPE\";\nexport var setExerciseType = function setExerciseType(state) {\n  return {\n    type: SET_EXERCISE_TYPE,\n    state: state\n  };\n};\nvar SET_EXERCISE_SET = \"SET_EXERCISE_SET\";\nexport var setExerciseSet = function setExerciseSet(state) {\n  return {\n    type: SET_EXERCISE_SET,\n    state: state\n  };\n};\nvar SET_EXERCISE_TIME = \"SET_EXERCISE_TIME\";\nexport var setExerciseTime = function setExerciseTime(state) {\n  return {\n    type: SET_EXERCISE_TIME,\n    state: state\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case EXERCISE_HISTORY_FINDALL_REQUEST:\n        break;\n\n      case EXERCISE_HISTORY_FINDALL_SUCCESS:\n        draft.exerciseHistoryList = [];\n        alert(action.data.data);\n        action.data.data.forEach(function (exercise) {\n          draft.exerciseHistoryList.push({\n            name: exercise.exerciseName,\n            count: exercise.exerciseCount,\n            date: exercise.exerciseDate.substr(0, 10)\n          });\n        });\n        draft.exerciseDateList.clear();\n        draft.exerciseTypeList.clear();\n\n        for (var i = 0; i < draft.exerciseHistoryList.length; i++) {\n          var cnt = draft.exerciseDateList.check(draft.exerciseHistoryList[i].date);\n          draft.exerciseDateList.put(draft.exerciseHistoryList[i].date, cnt + 1);\n\n          if (cnt == 0) {\n            draft.exerciseTypeList.put(draft.exerciseHistoryList[i].date, [{\n              name: draft.exerciseHistoryList[i].name,\n              count: draft.exerciseHistoryList[i].count\n            }]);\n          } else {\n            draft.exerciseTypeList.push(draft.exerciseHistoryList[i].date, {\n              name: draft.exerciseHistoryList[i].name,\n              count: draft.exerciseHistoryList[i].count\n            });\n          }\n        }\n\n        break;\n\n      case EXERCISE_HISTORY_FINDALL_FAILURE:\n        break;\n\n      case EXERCISE_HISTORY_REGISTER_REQUEST:\n        break;\n\n      case EXERCISE_HISTORY_REGISTER_SUCCESS:\n        break;\n\n      case EXERCISE_HISTORY_REGISTER_FAILURE:\n        break;\n\n      case SET_EXERCISE_TYPE:\n        draft.exercise.type = action.state;\n        break;\n\n      case SET_EXERCISE_SET:\n        draft.exercise.set = action.state;\n        break;\n\n      case SET_EXERCISE_TIME:\n        draft.exercise.time = action.state;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/JUN-D/Desktop/헬스케어/11_2/HELF-master/front/src/store/modules/exerciseHistory.js"],"names":["produce","HashMap","map","Array","prototype","put","key","value","get","clear","check","push","length","initialState","exerciseHistoryList","exerciseDateList","exerciseTypeList","exercise","type","set","time","EXERCISE_HISTORY_FINDALL_REQUEST","EXERCISE_HISTORY_FINDALL_SUCCESS","EXERCISE_HISTORY_FINDALL_FAILURE","EXERCISE_HISTORY_REGISTER_REQUEST","EXERCISE_HISTORY_REGISTER_SUCCESS","EXERCISE_HISTORY_REGISTER_FAILURE","SET_EXERCISE_TYPE","setExerciseType","state","SET_EXERCISE_SET","setExerciseSet","SET_EXERCISE_TIME","setExerciseTime","reducer","action","draft","alert","data","forEach","name","exerciseName","count","exerciseCount","date","exerciseDate","substr","i","cnt"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;;AAEA,IAAIC,OAAO,GAAG,SAAVA,OAAU,GAAW;AACvB,OAAKC,GAAL,GAAW,IAAIC,KAAJ,EAAX;AACD,CAFD;;AAGAF,OAAO,CAACG,SAAR,GAAoB;AAClBC,EAAAA,GAAG,EAAE,aAASC,GAAT,EAAcC,KAAd,EAAqB;AACxB,SAAKL,GAAL,CAASI,GAAT,IAAgBC,KAAhB;AACD,GAHiB;AAIlBC,EAAAA,GAAG,EAAE,aAASF,GAAT,EAAc;AACjB,WAAO,KAAKJ,GAAL,CAASI,GAAT,CAAP;AACD,GANiB;AAOlBG,EAAAA,KAAK,EAAE,iBAAW;AAChB,SAAKP,GAAL,GAAW,IAAIC,KAAJ,EAAX;AACD,GATiB;AAUlBO,EAAAA,KAAK,EAAE,eAASJ,GAAT,EAAc;AACnB,QAAIA,GAAG,IAAI,KAAKJ,GAAhB,EAAqB,OAAO,KAAKA,GAAL,CAASI,GAAT,CAAP,CAArB,KACK,OAAO,CAAP;AACN,GAbiB;AAclBK,EAAAA,IAAI,EAAE,cAASL,GAAT,EAAcC,KAAd,EAAqB;AACzB,SAAKL,GAAL,CAASI,GAAT,EAAcK,IAAd,CAAmBJ,KAAnB;AACD,GAhBiB;AAiBlBK,EAAAA,MAAM,EAAE,gBAASN,GAAT,EAAc;AACpB,WAAO,KAAKJ,GAAL,CAASI,GAAT,EAAcM,MAArB;AACD;AAnBiB,CAApB;AAsBA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,mBAAmB,EAAE,EADF;AAEnBC,EAAAA,gBAAgB,EAAE,IAAId,OAAJ,EAFC;AAGnBe,EAAAA,gBAAgB,EAAE,IAAIf,OAAJ,EAHC;AAInBgB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE,CADE;AAERC,IAAAA,GAAG,EAAE,CAFG;AAGRC,IAAAA,IAAI,EAAE;AAHE;AAJS,CAArB;AAWA,OAAO,IAAMC,gCAAgC,GAC3C,kCADK;AAEP,OAAO,IAAMC,gCAAgC,GAC3C,kCADK;AAEP,OAAO,IAAMC,gCAAgC,GAC3C,kCADK;AAGP,OAAO,IAAMC,iCAAiC,GAC5C,mCADK;AAEP,OAAO,IAAMC,iCAAiC,GAC5C,mCADK;AAEP,OAAO,IAAMC,iCAAiC,GAC5C,mCADK;AAGP,IAAMC,iBAAiB,GAAG,mBAA1B;AACA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AACzCX,IAAAA,IAAI,EAAES,iBADmC;AAEzCE,IAAAA,KAAK,EAALA;AAFyC,GAAZ;AAAA,CAAxB;AAKP,IAAMC,gBAAgB,GAAG,kBAAzB;AACA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACF,KAAD;AAAA,SAAY;AACxCX,IAAAA,IAAI,EAAEY,gBADkC;AAExCD,IAAAA,KAAK,EAALA;AAFwC,GAAZ;AAAA,CAAvB;AAKP,IAAMG,iBAAiB,GAAG,mBAA1B;AACA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,KAAD;AAAA,SAAY;AACzCX,IAAAA,IAAI,EAAEc,iBADmC;AAEzCH,IAAAA,KAAK,EAALA;AAFyC,GAAZ;AAAA,CAAxB;;AAKP,IAAMK,OAAO,GAAG,SAAVA,OAAU;AAAA,MAACL,KAAD,uEAAShB,YAAT;AAAA,MAAuBsB,MAAvB;AAAA,SACdnC,OAAO,CAAC6B,KAAD,EAAQ,UAACO,KAAD,EAAW;AACxB,YAAQD,MAAM,CAACjB,IAAf;AACE,WAAKG,gCAAL;AACE;;AACF,WAAKC,gCAAL;AACEc,QAAAA,KAAK,CAACtB,mBAAN,GAA4B,EAA5B;AACAuB,QAAAA,KAAK,CAACF,MAAM,CAACG,IAAP,CAAYA,IAAb,CAAL;AACAH,QAAAA,MAAM,CAACG,IAAP,CAAYA,IAAZ,CAAiBC,OAAjB,CAAyB,UAACtB,QAAD,EAAc;AACrCmB,UAAAA,KAAK,CAACtB,mBAAN,CAA0BH,IAA1B,CAA+B;AAC7B6B,YAAAA,IAAI,EAAEvB,QAAQ,CAACwB,YADc;AAE7BC,YAAAA,KAAK,EAAEzB,QAAQ,CAAC0B,aAFa;AAG7BC,YAAAA,IAAI,EAAE3B,QAAQ,CAAC4B,YAAT,CAAsBC,MAAtB,CAA6B,CAA7B,EAAgC,EAAhC;AAHuB,WAA/B;AAKD,SAND;AAOAV,QAAAA,KAAK,CAACrB,gBAAN,CAAuBN,KAAvB;AACA2B,QAAAA,KAAK,CAACpB,gBAAN,CAAuBP,KAAvB;;AACA,aAAK,IAAIsC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,KAAK,CAACtB,mBAAN,CAA0BF,MAA9C,EAAsDmC,CAAC,EAAvD,EAA2D;AACzD,cAAIC,GAAG,GAAGZ,KAAK,CAACrB,gBAAN,CAAuBL,KAAvB,CACR0B,KAAK,CAACtB,mBAAN,CAA0BiC,CAA1B,EAA6BH,IADrB,CAAV;AAGAR,UAAAA,KAAK,CAACrB,gBAAN,CAAuBV,GAAvB,CACE+B,KAAK,CAACtB,mBAAN,CAA0BiC,CAA1B,EAA6BH,IAD/B,EAEEI,GAAG,GAAG,CAFR;;AAIA,cAAIA,GAAG,IAAI,CAAX,EAAc;AACZZ,YAAAA,KAAK,CAACpB,gBAAN,CAAuBX,GAAvB,CAA2B+B,KAAK,CAACtB,mBAAN,CAA0BiC,CAA1B,EAA6BH,IAAxD,EAA8D,CAC5D;AACEJ,cAAAA,IAAI,EAAEJ,KAAK,CAACtB,mBAAN,CAA0BiC,CAA1B,EAA6BP,IADrC;AAEEE,cAAAA,KAAK,EAAEN,KAAK,CAACtB,mBAAN,CAA0BiC,CAA1B,EAA6BL;AAFtC,aAD4D,CAA9D;AAMD,WAPD,MAOO;AACLN,YAAAA,KAAK,CAACpB,gBAAN,CAAuBL,IAAvB,CAA4ByB,KAAK,CAACtB,mBAAN,CAA0BiC,CAA1B,EAA6BH,IAAzD,EAA+D;AAC7DJ,cAAAA,IAAI,EAAEJ,KAAK,CAACtB,mBAAN,CAA0BiC,CAA1B,EAA6BP,IAD0B;AAE7DE,cAAAA,KAAK,EAAEN,KAAK,CAACtB,mBAAN,CAA0BiC,CAA1B,EAA6BL;AAFyB,aAA/D;AAID;AACF;;AACD;;AACF,WAAKnB,gCAAL;AACE;;AACF,WAAKC,iCAAL;AACE;;AACF,WAAKC,iCAAL;AACE;;AACF,WAAKC,iCAAL;AACE;;AACF,WAAKC,iBAAL;AACES,QAAAA,KAAK,CAACnB,QAAN,CAAeC,IAAf,GAAsBiB,MAAM,CAACN,KAA7B;AACA;;AACF,WAAKC,gBAAL;AACEM,QAAAA,KAAK,CAACnB,QAAN,CAAeE,GAAf,GAAqBgB,MAAM,CAACN,KAA5B;AACA;;AACF,WAAKG,iBAAL;AACEI,QAAAA,KAAK,CAACnB,QAAN,CAAeG,IAAf,GAAsBe,MAAM,CAACN,KAA7B;AACA;;AACF;AACE;AAxDJ;AA0DD,GA3DM,CADO;AAAA,CAAhB;;AA6DA,eAAeK,OAAf","sourcesContent":["import produce from \"immer\";\n\nvar HashMap = function() {\n  this.map = new Array();\n};\nHashMap.prototype = {\n  put: function(key, value) {\n    this.map[key] = value;\n  },\n  get: function(key) {\n    return this.map[key];\n  },\n  clear: function() {\n    this.map = new Array();\n  },\n  check: function(key) {\n    if (key in this.map) return this.map[key];\n    else return 0;\n  },\n  push: function(key, value) {\n    this.map[key].push(value);\n  },\n  length: function(key) {\n    return this.map[key].length;\n  },\n};\n\nconst initialState = {\n  exerciseHistoryList: [],\n  exerciseDateList: new HashMap(),\n  exerciseTypeList: new HashMap(),\n  exercise: {\n    type: 1,\n    set: 0,\n    time: 0,\n  },\n};\n\nexport const EXERCISE_HISTORY_FINDALL_REQUEST =\n  \"EXERCISE_HISTORY_FINDALL_REQUEST\";\nexport const EXERCISE_HISTORY_FINDALL_SUCCESS =\n  \"EXERCISE_HISTORY_FINDALL_SUCCESS\";\nexport const EXERCISE_HISTORY_FINDALL_FAILURE =\n  \"EXERCISE_HISTORY_FINDALL_FAILURE\";\n\nexport const EXERCISE_HISTORY_REGISTER_REQUEST =\n  \"EXERCISE_HISTORY_REGISTER_REQUEST\";\nexport const EXERCISE_HISTORY_REGISTER_SUCCESS =\n  \"EXERCISE_HISTORY_REGISTER_SUCCESS\";\nexport const EXERCISE_HISTORY_REGISTER_FAILURE =\n  \"EXERCISE_HISTORY_REGISTER_FAILURE\";\n\nconst SET_EXERCISE_TYPE = \"SET_EXERCISE_TYPE\";\nexport const setExerciseType = (state) => ({\n  type: SET_EXERCISE_TYPE,\n  state,\n});\n\nconst SET_EXERCISE_SET = \"SET_EXERCISE_SET\";\nexport const setExerciseSet = (state) => ({\n  type: SET_EXERCISE_SET,\n  state,\n});\n\nconst SET_EXERCISE_TIME = \"SET_EXERCISE_TIME\";\nexport const setExerciseTime = (state) => ({\n  type: SET_EXERCISE_TIME,\n  state,\n});\n\nconst reducer = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case EXERCISE_HISTORY_FINDALL_REQUEST:\n        break;\n      case EXERCISE_HISTORY_FINDALL_SUCCESS:\n        draft.exerciseHistoryList = [];\n        alert(action.data.data)\n        action.data.data.forEach((exercise) => {\n          draft.exerciseHistoryList.push({\n            name: exercise.exerciseName,\n            count: exercise.exerciseCount,\n            date: exercise.exerciseDate.substr(0, 10),\n          });\n        });\n        draft.exerciseDateList.clear();\n        draft.exerciseTypeList.clear();\n        for (let i = 0; i < draft.exerciseHistoryList.length; i++) {\n          let cnt = draft.exerciseDateList.check(\n            draft.exerciseHistoryList[i].date\n          );\n          draft.exerciseDateList.put(\n            draft.exerciseHistoryList[i].date,\n            cnt + 1\n          );\n          if (cnt == 0) {\n            draft.exerciseTypeList.put(draft.exerciseHistoryList[i].date, [\n              {\n                name: draft.exerciseHistoryList[i].name,\n                count: draft.exerciseHistoryList[i].count,\n              },\n            ]);\n          } else {\n            draft.exerciseTypeList.push(draft.exerciseHistoryList[i].date, {\n              name: draft.exerciseHistoryList[i].name,\n              count: draft.exerciseHistoryList[i].count,\n            });\n          }\n        }\n        break;\n      case EXERCISE_HISTORY_FINDALL_FAILURE:\n        break;\n      case EXERCISE_HISTORY_REGISTER_REQUEST:\n        break;\n      case EXERCISE_HISTORY_REGISTER_SUCCESS:\n        break;\n      case EXERCISE_HISTORY_REGISTER_FAILURE:\n        break;\n      case SET_EXERCISE_TYPE:\n        draft.exercise.type = action.state;\n        break;\n      case SET_EXERCISE_SET:\n        draft.exercise.set = action.state;\n        break;\n      case SET_EXERCISE_TIME:\n        draft.exercise.time = action.state;\n        break;\n      default:\n        break;\n    }\n  });\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}