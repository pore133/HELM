{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_2\\\\HELF-master\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_2\\\\HELF-master\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_2\\\\HELF-master\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { BASE_URL, LOCAL_URL } from \"../../utils/https\"; // 로그인\n\nexport function LoginAPI(_x) {\n  return _LoginAPI.apply(this, arguments);\n} // 회원가입\n\nfunction _LoginAPI() {\n  _LoginAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var id, pw, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = _ref.id, pw = _ref.pw;\n            _context.next = 3;\n            return axios.post(\"\".concat(BASE_URL, \"auth/login\"), {\n              userId: id,\n              userPassword: pw\n            });\n\n          case 3:\n            result = _context.sent;\n            return _context.abrupt(\"return\", result);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _LoginAPI.apply(this, arguments);\n}\n\nexport function SignUpAPI(_x2) {\n  return _SignUpAPI.apply(this, arguments);\n} // 이메일 중복체크\n// export async function EmailCheckAPI({ email }) {\n//   const result = await axios.get(`${BASE_URL}user/emailCheck/${email}`);\n//   return result;\n// }\n// // 카카오 아이디 중복체크\n// export async function KaKaoIdCheckAPI({ id }) {\n//   const result = await axios.get(`${BASE_URL}user/idCheck/${id}`);\n//   return result.data;\n// }\n// 아이디 중복체크\n\nfunction _SignUpAPI() {\n  _SignUpAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n    var id, password, name, result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            id = _ref2.id, password = _ref2.password, name = _ref2.name;\n            _context2.next = 3;\n            return axios.post(\"\".concat(BASE_URL, \"user/register/signup\"), {\n              userId: id,\n              userPassword: password,\n              userName: name //    userEmail: email,\n\n            });\n\n          case 3:\n            result = _context2.sent;\n            return _context2.abrupt(\"return\", result);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _SignUpAPI.apply(this, arguments);\n}\n\nexport function IdCheckAPI(_x3) {\n  return _IdCheckAPI.apply(this, arguments);\n} // 비밀번호 초기화\n\nfunction _IdCheckAPI() {\n  _IdCheckAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref3) {\n    var id, result;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            id = _ref3.id;\n            _context3.next = 3;\n            return axios.get(\"\".concat(BASE_URL, \"user/idCheck/\").concat(id));\n\n          case 3:\n            result = _context3.sent;\n            console.log(result.data);\n            return _context3.abrupt(\"return\", result.data);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _IdCheckAPI.apply(this, arguments);\n}\n\nexport function ResetPasswordAPI(_x4) {\n  return _ResetPasswordAPI.apply(this, arguments);\n} // 추가 정보 입력\n\nfunction _ResetPasswordAPI() {\n  _ResetPasswordAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref4) {\n    var email, name, id, result;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            email = _ref4.email, name = _ref4.name, id = _ref4.id;\n            _context4.next = 3;\n            return axios.post(\"\".concat(BASE_URL, \"email/send\"), {\n              userEmail: email,\n              userId: id,\n              userName: name\n            });\n\n          case 3:\n            result = _context4.sent;\n            return _context4.abrupt(\"return\", result);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _ResetPasswordAPI.apply(this, arguments);\n}\n\nexport function AdditionalUserInfoAPI(_x5) {\n  return _AdditionalUserInfoAPI.apply(this, arguments);\n}\n\nfunction _AdditionalUserInfoAPI() {\n  _AdditionalUserInfoAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_ref5) {\n    var birthday, gender, height, weight, result;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            birthday = _ref5.birthday, gender = _ref5.gender, height = _ref5.height, weight = _ref5.weight;\n            _context5.next = 3;\n            return axios.post(\"\".concat(BASE_URL, \"user/register/AdditionalInfo\"), _defineProperty({\n              birthday: birthday,\n              gender: gender,\n              height: height,\n              weight: weight\n            }, \"weight\", weight), {\n              headers: {\n                Authorization: 'Bearer ' + sessionStorage.getItem('jwt')\n              }\n            });\n\n          case 3:\n            result = _context5.sent;\n            return _context5.abrupt(\"return\", result.data);\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _AdditionalUserInfoAPI.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/JUN-D/Desktop/헬스케어/11_2/HELF-master/front/src/store/apis/user.js"],"names":["axios","BASE_URL","LOCAL_URL","LoginAPI","id","pw","post","userId","userPassword","result","SignUpAPI","password","name","userName","IdCheckAPI","get","console","log","data","ResetPasswordAPI","email","userEmail","AdditionalUserInfoAPI","birthday","gender","height","weight","headers","Authorization","sessionStorage","getItem"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { BASE_URL, LOCAL_URL } from \"../../utils/https\";\n\n// 로그인\nexport async function LoginAPI({ id, pw }) {\n  const result = await axios.post(`${BASE_URL}auth/login`, {\n    userId: id,\n    userPassword: pw\n  });\n  return result;\n}\n\n// 회원가입\nexport async function SignUpAPI({\n  id,\n  password, \n  name,\n//  email,\n}) {\n  const result = await axios.post(`${BASE_URL}user/register/signup`, {\n    userId: id,\n    userPassword: password,\n    userName: name,\n//    userEmail: email,\n  });\n  return result;\n}\n\n// 이메일 중복체크\n// export async function EmailCheckAPI({ email }) {\n//   const result = await axios.get(`${BASE_URL}user/emailCheck/${email}`);\n//   return result;\n// }\n\n// // 카카오 아이디 중복체크\n// export async function KaKaoIdCheckAPI({ id }) {\n//   const result = await axios.get(`${BASE_URL}user/idCheck/${id}`);\n//   return result.data;\n// }\n// 아이디 중복체크\nexport async function IdCheckAPI({ id }) {\n  const result = await axios.get(`${BASE_URL}user/idCheck/${id}`);\n  console.log(result.data);\n  return result.data;\n}\n\n// 비밀번호 초기화\nexport async function ResetPasswordAPI({ email, name, id }) {\n  // console.log(email, id, name);\n  const result = await axios.post(`${BASE_URL}email/send`, {\n    userEmail: email,\n    userId : id,\n    userName: name,\n  });\n  return result;\n}\n\n// 추가 정보 입력\nexport async function AdditionalUserInfoAPI({\n  birthday,\n  gender,\n  height,\n  weight,\n}) {\n  const result = await axios.post(`${BASE_URL}user/register/AdditionalInfo`, {\n    birthday: birthday,\n    gender: gender,\n    height: height,\n    weight, weight,\n  },\n  {\n    headers: {\n      Authorization: 'Bearer ' + sessionStorage.getItem('jwt')\n    },\n  });\n  return result.data;\n}"]},"metadata":{},"sourceType":"module"}