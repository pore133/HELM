{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar newCanvas = function newCanvas() {\n  return document.createElement('canvas');\n};\n\nfunction createCanvas(width, height, flipHorizontal) {\n  if (width === void 0) {\n    width = 200;\n  }\n\n  if (height === void 0) {\n    height = 200;\n  }\n\n  if (flipHorizontal === void 0) {\n    flipHorizontal = false;\n  }\n\n  var canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n\n  if (flipHorizontal) {\n    var ctx = canvas.getContext('2d');\n    ctx.translate(width, 0);\n    ctx.scale(-1, 1);\n  }\n\n  return canvas;\n}\n\nexports.createCanvas = createCanvas;\n\nfunction cropTo(image, size, flipped, canvas) {\n  if (flipped === void 0) {\n    flipped = false;\n  }\n\n  if (canvas === void 0) {\n    canvas = newCanvas();\n  } // image image, bitmap, or canvas\n\n\n  var width = image.width;\n  var height = image.height; // if video element\n\n  if (image instanceof HTMLVideoElement) {\n    width = image.videoWidth;\n    height = image.videoHeight;\n  }\n\n  var min = Math.min(width, height);\n  var scale = size / min;\n  var scaledW = Math.ceil(width * scale);\n  var scaledH = Math.ceil(height * scale);\n  var dx = scaledW - size;\n  var dy = scaledH - size;\n  canvas.width = canvas.height = size;\n  var ctx = canvas.getContext('2d');\n  ctx.drawImage(image, ~~(dx / 2) * -1, ~~(dy / 2) * -1, scaledW, scaledH); // canvas is already sized and cropped to center correctly\n\n  if (flipped) {\n    ctx.scale(-1, 1);\n    ctx.drawImage(canvas, size * -1, 0);\n  }\n\n  return canvas;\n}\n\nexports.cropTo = cropTo;","map":null,"metadata":{},"sourceType":"script"}