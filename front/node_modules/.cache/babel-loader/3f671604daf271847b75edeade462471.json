{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\HELF-master\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\HELF-master\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { BASE_URL, LOCAL_URL } from '../../utils/https'; // 게시글 등록\n\nexport function shareBoardRegisterAPI(_x) {\n  return _shareBoardRegisterAPI.apply(this, arguments);\n} // BEST 식단 조회 -> 좋아요가 가장 많은 순으로 4개 레코드 조회\n\nfunction _shareBoardRegisterAPI() {\n  _shareBoardRegisterAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var diaryNo, shareDescription, hit, createdAt, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            diaryNo = _ref.diaryNo, shareDescription = _ref.shareDescription, hit = _ref.hit, createdAt = _ref.createdAt;\n            console.log(diaryNo, shareDescription);\n            _context.next = 4;\n            return axios.post(\"\".concat(BASE_URL, \"shareboard/register\"), {\n              diaryNo: diaryNo,\n              description: shareDescription,\n              hit: hit,\n              createdAt: createdAt\n            });\n\n          case 4:\n            result = _context.sent;\n            return _context.abrupt(\"return\", result);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _shareBoardRegisterAPI.apply(this, arguments);\n}\n\nexport function ShareBoardTopLikeAPI() {\n  return _ShareBoardTopLikeAPI.apply(this, arguments);\n} // 해당 공유 게시글을 로그인한 user의 좋아요 여부 체크 및 해당 게시글 총 좋아요 개수\n\nfunction _ShareBoardTopLikeAPI() {\n  _ShareBoardTopLikeAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.get(\"\".concat(BASE_URL, \"shareboard/findAll/like\"));\n\n          case 2:\n            result = _context2.sent;\n            return _context2.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _ShareBoardTopLikeAPI.apply(this, arguments);\n}\n\nexport function ShareBoardIsLikeAndTotalLikeCountAPI(_x2) {\n  return _ShareBoardIsLikeAndTotalLikeCountAPI.apply(this, arguments);\n} // 해당 공유 게시글을 좋아요\n\nfunction _ShareBoardIsLikeAndTotalLikeCountAPI() {\n  _ShareBoardIsLikeAndTotalLikeCountAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(boardNo) {\n    var token, result;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            token = sessionStorage.getItem(\"jwt\");\n            _context3.next = 3;\n            return axios.get(\"\".concat(BASE_URL, \"shareboard/find/isLike/\").concat(boardNo), {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            });\n\n          case 3:\n            result = _context3.sent;\n            return _context3.abrupt(\"return\", result.data);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _ShareBoardIsLikeAndTotalLikeCountAPI.apply(this, arguments);\n}\n\nexport function ShareBoardLikeAPI(_x3) {\n  return _ShareBoardLikeAPI.apply(this, arguments);\n} // 해당 공유 게시글 상세 조회\n\nfunction _ShareBoardLikeAPI() {\n  _ShareBoardLikeAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(boardNo) {\n    var token, header, result;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            token = sessionStorage.getItem(\"jwt\");\n            header = {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            };\n            _context4.next = 4;\n            return axios.post(\"\".concat(BASE_URL, \"shareboard/like/\").concat(boardNo), null, header);\n\n          case 4:\n            result = _context4.sent;\n            return _context4.abrupt(\"return\", result);\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _ShareBoardLikeAPI.apply(this, arguments);\n}\n\nexport function ShareBoardDetailSelectAPI(_x4) {\n  return _ShareBoardDetailSelectAPI.apply(this, arguments);\n} // 해당 공유 게시글 조회수 증가\n\nfunction _ShareBoardDetailSelectAPI() {\n  _ShareBoardDetailSelectAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(boardNo) {\n    var token, header, result;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            token = sessionStorage.getItem(\"jwt\");\n            header = {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            };\n            _context5.next = 4;\n            return axios.get(\"\".concat(BASE_URL, \"shareboard/find/\").concat(boardNo), header);\n\n          case 4:\n            result = _context5.sent;\n            return _context5.abrupt(\"return\", result);\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _ShareBoardDetailSelectAPI.apply(this, arguments);\n}\n\nexport function ShareBoardDetailHitIncreaseAPI(_x5) {\n  return _ShareBoardDetailHitIncreaseAPI.apply(this, arguments);\n} // 해당 공유 게시글을 description 수정\n\nfunction _ShareBoardDetailHitIncreaseAPI() {\n  _ShareBoardDetailHitIncreaseAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(boardNo) {\n    var token, header, result;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            token = sessionStorage.getItem(\"jwt\");\n            header = {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            };\n            _context6.next = 4;\n            return axios.put(\"\".concat(BASE_URL, \"shareboard/hit/\").concat(boardNo), null, header);\n\n          case 4:\n            result = _context6.sent;\n            return _context6.abrupt(\"return\", result);\n\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _ShareBoardDetailHitIncreaseAPI.apply(this, arguments);\n}\n\nexport function ShareBoardUpdateDiscriptionAPI(_x6) {\n  return _ShareBoardUpdateDiscriptionAPI.apply(this, arguments);\n} // 게시글 삭제 (공유 해제)\n\nfunction _ShareBoardUpdateDiscriptionAPI() {\n  _ShareBoardUpdateDiscriptionAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(_ref2) {\n    var boardNo, description, result;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            boardNo = _ref2.boardNo, description = _ref2.description;\n            _context7.next = 3;\n            return axios.put(\"\".concat(BASE_URL, \"shareboard/update/description\"), {\n              boardNo: boardNo,\n              description: description\n            });\n\n          case 3:\n            result = _context7.sent;\n            return _context7.abrupt(\"return\", result);\n\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _ShareBoardUpdateDiscriptionAPI.apply(this, arguments);\n}\n\nexport function ShareBoardDeleteAPI(_x7) {\n  return _ShareBoardDeleteAPI.apply(this, arguments);\n}\n\nfunction _ShareBoardDeleteAPI() {\n  _ShareBoardDeleteAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(_ref3) {\n    var diaryNo, token, header, result;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            diaryNo = _ref3.diaryNo;\n            token = sessionStorage.getItem(\"jwt\");\n            header = {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            };\n            _context8.next = 5;\n            return axios.delete(\"\".concat(BASE_URL, \"shareboard/remove/\").concat(diaryNo), null, header);\n\n          case 5:\n            result = _context8.sent;\n            return _context8.abrupt(\"return\", result);\n\n          case 7:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _ShareBoardDeleteAPI.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/JUN-D/Desktop/HELF-master/front/src/store/apis/shareBoard.js"],"names":["axios","BASE_URL","LOCAL_URL","shareBoardRegisterAPI","diaryNo","shareDescription","hit","createdAt","console","log","post","description","result","ShareBoardTopLikeAPI","get","ShareBoardIsLikeAndTotalLikeCountAPI","boardNo","token","sessionStorage","getItem","headers","Authorization","data","ShareBoardLikeAPI","header","ShareBoardDetailSelectAPI","ShareBoardDetailHitIncreaseAPI","put","ShareBoardUpdateDiscriptionAPI","ShareBoardDeleteAPI","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { BASE_URL, LOCAL_URL } from '../../utils/https';\n\n// 게시글 등록\nexport async function shareBoardRegisterAPI({\n    diaryNo,\n    shareDescription, \n    hit,\n    createdAt,\n}){\n    console.log(diaryNo, shareDescription, )\n    const result = await axios.post(`${BASE_URL}shareboard/register`, {\n        diaryNo: diaryNo,\n        description: shareDescription,\n        hit: hit,\n        createdAt: createdAt,\n    });\n    return result;\n}\n\n// BEST 식단 조회 -> 좋아요가 가장 많은 순으로 4개 레코드 조회\nexport async function ShareBoardTopLikeAPI() {\n    const result = await axios.get(`${BASE_URL}shareboard/findAll/like`);\n    return result;\n}\n\n// 해당 공유 게시글을 로그인한 user의 좋아요 여부 체크 및 해당 게시글 총 좋아요 개수\nexport async function ShareBoardIsLikeAndTotalLikeCountAPI(boardNo) {\n    const token = sessionStorage.getItem(\"jwt\");\n    const result = await axios.get(`${BASE_URL}shareboard/find/isLike/${boardNo}`, {\n            headers: { \n                Authorization: `Bearer ${ token }`\n            }\n    });\n    return result.data;\n}\n\n\n// 해당 공유 게시글을 좋아요\nexport async function ShareBoardLikeAPI(boardNo) {\n    const token = sessionStorage.getItem(\"jwt\");\n    const header = { headers: { Authorization: `Bearer ${token}` } };\n    const result = await axios.post(\n        `${BASE_URL}shareboard/like/${boardNo}`,\n        null,\n        header\n    );\n    return result;\n}\n\n// 해당 공유 게시글 상세 조회\nexport async function ShareBoardDetailSelectAPI(boardNo) {\n    const token = sessionStorage.getItem(\"jwt\");\n    const header = { headers: { Authorization: `Bearer ${token}` } };\n    const result = await axios.get(`${BASE_URL}shareboard/find/${boardNo}`,\n        header\n    );\n    return result;\n}\n\n// 해당 공유 게시글 조회수 증가\nexport async function ShareBoardDetailHitIncreaseAPI(boardNo) {\n    const token = sessionStorage.getItem(\"jwt\");\n    const header = { headers: { Authorization: `Bearer ${token}` } };\n    const result = await axios.put(`${BASE_URL}shareboard/hit/${boardNo}`, null, header);\n    return result;\n}\n\n// 해당 공유 게시글을 description 수정\nexport async function ShareBoardUpdateDiscriptionAPI({boardNo,description}) {\n    const result = await axios.put(\n        `${BASE_URL}shareboard/update/description`,\n        {\n            boardNo: boardNo,\n            description: description,\n        }   \n    );\n    return result;\n}\n\n// 게시글 삭제 (공유 해제)\nexport async function ShareBoardDeleteAPI({ diaryNo }) {\n    const token = sessionStorage.getItem(\"jwt\");\n    const header = { headers: { Authorization: `Bearer ${token}` } };\n    const result = await axios.delete(`${BASE_URL}shareboard/remove/${diaryNo}`, null, header);\n    return result;\n}"]},"metadata":{},"sourceType":"module"}