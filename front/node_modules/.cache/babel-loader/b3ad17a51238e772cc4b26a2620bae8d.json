{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_6\\\\HELM\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_6\\\\HELM\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../utils/https\";\nimport { LOCAL_URL } from \"../../utils/https\"; // 이미지 보내서 음식 정보 가져오기\n\nexport function myDietImageAPI(_x) {\n  return _myDietImageAPI.apply(this, arguments);\n} // 식단 등록\n\nfunction _myDietImageAPI() {\n  _myDietImageAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(imagePath) {\n    var header, formData, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(imagePath.imagePath);\n            header = {\n              headers: {\n                \"Content-Type\": \"multipart/form-data\"\n              }\n            };\n            formData = new FormData();\n            formData.append(\"file\", imagePath.imagePath);\n            _context.next = 6;\n            return axios.post(\"\".concat(BASE_URL, \"dietdiary/segmentation\"), formData, header);\n\n          case 6:\n            result = _context.sent;\n            return _context.abrupt(\"return\", result);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _myDietImageAPI.apply(this, arguments);\n}\n\nexport function myDietRegisterAPI(_x2) {\n  return _myDietRegisterAPI.apply(this, arguments);\n} // 식단 일지 전체 목록 가져오기\n\nfunction _myDietRegisterAPI() {\n  _myDietRegisterAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref) {\n    var imagePath, diaryDate, mealTime, description, dietRegisterReqList, dietDiaryRegisterReq, token, header, formData, result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            imagePath = _ref.imagePath, diaryDate = _ref.diaryDate, mealTime = _ref.mealTime, description = _ref.description, dietRegisterReqList = _ref.dietRegisterReqList;\n            dietDiaryRegisterReq = {\n              description: description,\n              diaryDate: diaryDate,\n              diaryNo: 0,\n              dietRegisterReqList: dietRegisterReqList,\n              isShared: false,\n              mealTime: mealTime,\n              saveImagePath: \"\"\n            };\n            token = sessionStorage.getItem(\"jwt\");\n            header = {\n              headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                Authorization: \"\".concat(token)\n              }\n            };\n            formData = new FormData();\n            formData.append(\"key\", new Blob([JSON.stringify(dietDiaryRegisterReq)], {\n              type: \"application/json\"\n            }));\n            formData.append(\"file\", imagePath); // const result = await axios.post(`${BASE_URL}dietdiary/register`, formData, header);\n\n            _context2.next = 9;\n            return axios.post(\"\".concat(BASE_URL, \"dietdiary/register\"), formData, header);\n\n          case 9:\n            result = _context2.sent;\n            return _context2.abrupt(\"return\", result);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _myDietRegisterAPI.apply(this, arguments);\n}\n\nexport function myDietDiaryListAPI() {\n  return _myDietDiaryListAPI.apply(this, arguments);\n} // 해당 날짜에 해당하는 식단 일지 정보 가져오기\n\nfunction _myDietDiaryListAPI() {\n  _myDietDiaryListAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var token, header, result;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            token = sessionStorage.getItem(\"jwt\");\n            header = {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            };\n            _context3.next = 4;\n            return axios.get( // `${BASE_URL}dietdiary/findAll`,\n            \"\".concat(BASE_URL, \"dietdiary/findAll\"), header);\n\n          case 4:\n            result = _context3.sent;\n            return _context3.abrupt(\"return\", result.data);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _myDietDiaryListAPI.apply(this, arguments);\n}\n\nexport function myDietDiaryDailyInfoAPI(_x3) {\n  return _myDietDiaryDailyInfoAPI.apply(this, arguments);\n} // 해당 식단 일지 정보 삭제\n\nfunction _myDietDiaryDailyInfoAPI() {\n  _myDietDiaryDailyInfoAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref2) {\n    var date, token, header, result;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            date = _ref2.date;\n            token = sessionStorage.getItem(\"jwt\");\n            header = {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            };\n            _context4.next = 5;\n            return axios.get( // `${BASE_URL}dietdiary/findAll`,\n            \"\".concat(BASE_URL, \"dietdiary/findAll/\").concat(date), header);\n\n          case 5:\n            result = _context4.sent;\n            return _context4.abrupt(\"return\", result.data);\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _myDietDiaryDailyInfoAPI.apply(this, arguments);\n}\n\nexport function myDietDiaryItemDeleteAPI(_x4) {\n  return _myDietDiaryItemDeleteAPI.apply(this, arguments);\n} // 식단 상세 정보 가져오기\n\nfunction _myDietDiaryItemDeleteAPI() {\n  _myDietDiaryItemDeleteAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_ref3) {\n    var date, result;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            date = _ref3.date;\n            _context5.next = 3;\n            return axios.delete(\"\".concat(BASE_URL, \"dietdiary/remove/\").concat(date.diaryNo));\n\n          case 3:\n            result = _context5.sent;\n            return _context5.abrupt(\"return\", result);\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _myDietDiaryItemDeleteAPI.apply(this, arguments);\n}\n\nexport function myDietDetailAPI(_x5) {\n  return _myDietDetailAPI.apply(this, arguments);\n} // 식단 수정\n\nfunction _myDietDetailAPI() {\n  _myDietDetailAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(diaryNo) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return axios.get(\"\".concat(BASE_URL, \"dietdiary/find/\").concat(diaryNo));\n\n          case 2:\n            result = _context6.sent;\n            return _context6.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _myDietDetailAPI.apply(this, arguments);\n}\n\nexport function myDietUpdateAPI(_x6) {\n  return _myDietUpdateAPI.apply(this, arguments);\n}\n\nfunction _myDietUpdateAPI() {\n  _myDietUpdateAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(_ref4) {\n    var imagePath, diaryDate, mealTime, description, dietRegisterReqList, diaryNo, isShared, saveImagePath, dietDiaryRegisterReq, header, formData, result;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            imagePath = _ref4.imagePath, diaryDate = _ref4.diaryDate, mealTime = _ref4.mealTime, description = _ref4.description, dietRegisterReqList = _ref4.dietRegisterReqList, diaryNo = _ref4.diaryNo, isShared = _ref4.isShared, saveImagePath = _ref4.saveImagePath;\n            if (typeof imagePath !== \"string\") saveImagePath = \"\";\n            dietDiaryRegisterReq = {\n              description: description,\n              diaryDate: diaryDate,\n              diaryNo: diaryNo,\n              dietRegisterReqList: dietRegisterReqList,\n              isShared: isShared,\n              mealTime: mealTime,\n              saveImagePath: saveImagePath\n            };\n            header = {\n              headers: {\n                \"Content-Type\": \"multipart/form-data\"\n              }\n            };\n            formData = new FormData();\n            formData.append(\"key\", new Blob([JSON.stringify(dietDiaryRegisterReq)], {\n              type: \"application/json\"\n            }));\n\n            if (typeof imagePath !== \"string\") {\n              // console.log(imagePath);\n              formData.append(\"file\", imagePath);\n            }\n\n            _context7.next = 9;\n            return axios.put(\"\".concat(BASE_URL, \"dietdiary/update\"), formData, header);\n\n          case 9:\n            result = _context7.sent;\n            return _context7.abrupt(\"return\", result);\n\n          case 11:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _myDietUpdateAPI.apply(this, arguments);\n}\n\nexport function foodListAPI() {\n  return _foodListAPI.apply(this, arguments);\n}\n\nfunction _foodListAPI() {\n  _foodListAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return axios.get(\"\".concat(BASE_URL, \"food/findAll\"));\n\n          case 2:\n            result = _context8.sent;\n            return _context8.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _foodListAPI.apply(this, arguments);\n}","map":{"version":3,"sources":["C:/Users/JUN-D/Desktop/헬스케어/11_6/HELM/front/src/store/apis/myDiet.js"],"names":["axios","BASE_URL","LOCAL_URL","myDietImageAPI","imagePath","console","log","header","headers","formData","FormData","append","post","result","myDietRegisterAPI","diaryDate","mealTime","description","dietRegisterReqList","dietDiaryRegisterReq","diaryNo","isShared","saveImagePath","token","sessionStorage","getItem","Authorization","Blob","JSON","stringify","type","myDietDiaryListAPI","get","data","myDietDiaryDailyInfoAPI","date","myDietDiaryItemDeleteAPI","delete","myDietDetailAPI","myDietUpdateAPI","put","foodListAPI"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { BASE_URL } from \"../../utils/https\";\nimport { LOCAL_URL } from \"../../utils/https\";\n\n// 이미지 보내서 음식 정보 가져오기\nexport async function myDietImageAPI(imagePath) {\n  console.log(imagePath.imagePath);\n  const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n  const formData = new FormData();\n  formData.append(\"file\", imagePath.imagePath);\n  const result = await axios.post(\n    `${BASE_URL}dietdiary/segmentation`,\n    formData,\n    header\n  );\n  return result;\n}\n\n// 식단 등록\nexport async function myDietRegisterAPI({\n  imagePath,\n  diaryDate,\n  mealTime,\n  description,\n  dietRegisterReqList,\n}) {\n  const dietDiaryRegisterReq = {\n    description: description,\n    diaryDate: diaryDate,\n    diaryNo: 0,\n    dietRegisterReqList: dietRegisterReqList,\n    isShared: false,\n    mealTime: mealTime,\n    saveImagePath: \"\",\n  };\n  const token = sessionStorage.getItem(\"jwt\");\n  const header = {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: `${token}`,\n    },\n  };\n  const formData = new FormData();\n  formData.append(\n    \"key\",\n    new Blob([JSON.stringify(dietDiaryRegisterReq)], {\n      type: \"application/json\",\n    })\n  );\n  formData.append(\"file\", imagePath);\n  // const result = await axios.post(`${BASE_URL}dietdiary/register`, formData, header);\n  const result = await axios.post(\n    `${BASE_URL}dietdiary/register`,\n    formData,\n    header\n  );\n  return result;\n}\n\n// 식단 일지 전체 목록 가져오기\nexport async function myDietDiaryListAPI() {\n  const token = sessionStorage.getItem(\"jwt\");\n  const header = { headers: { Authorization: `Bearer ${token}` } };\n  const result = await axios.get(\n    // `${BASE_URL}dietdiary/findAll`,\n    `${BASE_URL}dietdiary/findAll`,\n    header\n  );\n  return result.data;\n}\n\n// 해당 날짜에 해당하는 식단 일지 정보 가져오기\nexport async function myDietDiaryDailyInfoAPI({ date }) {\n  const token = sessionStorage.getItem(\"jwt\");\n  const header = { headers: { Authorization: `Bearer ${token}` } };\n  const result = await axios.get(\n    // `${BASE_URL}dietdiary/findAll`,\n    `${BASE_URL}dietdiary/findAll/${date}`,\n    header\n  );\n  return result.data;\n}\n\n// 해당 식단 일지 정보 삭제\nexport async function myDietDiaryItemDeleteAPI({ date }) {\n  const result = await axios.delete(\n    `${BASE_URL}dietdiary/remove/${date.diaryNo}`\n  );\n  return result;\n}\n\n// 식단 상세 정보 가져오기\nexport async function myDietDetailAPI(diaryNo) {\n  const result = await axios.get(`${BASE_URL}dietdiary/find/${diaryNo}`);\n  // const result = await axios.get(`${BASE_URL}dietdiary/find/${diaryNo}`);\n  return result;\n}\n\n// 식단 수정\nexport async function myDietUpdateAPI({\n  imagePath,\n  diaryDate,\n  mealTime,\n  description,\n  dietRegisterReqList,\n  diaryNo,\n  isShared,\n  saveImagePath,\n}) {\n  if (typeof imagePath !== \"string\") saveImagePath = \"\";\n  const dietDiaryRegisterReq = {\n    description: description,\n    diaryDate: diaryDate,\n    diaryNo: diaryNo,\n    dietRegisterReqList: dietRegisterReqList,\n    isShared: isShared,\n    mealTime: mealTime,\n    saveImagePath: saveImagePath,\n  };\n  const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\n  const formData = new FormData();\n  formData.append(\n    \"key\",\n    new Blob([JSON.stringify(dietDiaryRegisterReq)], {\n      type: \"application/json\",\n    })\n  );\n  if (typeof imagePath !== \"string\") {\n    // console.log(imagePath);\n    formData.append(\"file\", imagePath);\n  }\n  const result = await axios.put(\n    `${BASE_URL}dietdiary/update`,\n    formData,\n    header\n  );\n  return result;\n}\n\nexport async function foodListAPI() {\n  const result = await axios.get(`${BASE_URL}food/findAll`);\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}