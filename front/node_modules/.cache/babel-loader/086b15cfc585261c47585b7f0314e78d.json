{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_2\\\\HELF-master\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_2\\\\HELF-master\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_2\\\\HELF-master\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_2\\\\HELF-master\\\\front\\\\src\\\\components\\\\Exercise\\\\ExerciseRoom.js\";\n// import * as tf from '@tensorflow/tfjs';\nimport * as tmPose from '@teachablemachine/pose';\nimport React, { useState, useEffect } from 'react';\nimport './ExcerciseRoom.css';\nimport $ from 'jquery';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { EXERCISE_HISTORY_REGISTER_REQUEST } from '../../store/modules/exerciseHistory';\nimport dayjs from 'dayjs';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { Row, Col } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport arrowImage from '../../assets/images/exerciseTutorial/arrow_down.png';\nvar style = {\n  position: 'absolute',\n  textAlign: 'center',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 350,\n  height: 300,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  borderRadius: '20px',\n  p: 4\n};\nexport default function ExerciseRoom() {\n  var dispatch = useDispatch();\n\n  var _useParams = useParams(),\n      breakTime = _useParams.breakTime;\n\n  var _useSelector = useSelector(function (state) {\n    return state.exerciseHistory;\n  }),\n      exercise = _useSelector.exercise;\n\n  var now = new Date(); // 현재 날짜 및 시간\n\n  var ExerciseTypeList = ['사이드 레터럴 레이즈', '윗몸일으키기', '턱걸이', '팔굽혀펴기', '스쿼트', '런지'];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      URL = _useState2[0],\n      setURL = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentSet = _useState4[0],\n      setCurrentSet = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentCount = _useState6[0],\n      setCurrentCount = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pageLoading = _useState8[0],\n      setPageLoading = _useState8[1]; // 모달창 관리 \n\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      open = _useState10[0],\n      setOpen = _useState10[1];\n\n  var handleOpen = function handleOpen() {\n    return setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    return setOpen(false);\n  };\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      timer = _useState12[0],\n      setTimer = _useState12[1];\n\n  var modelURL = URL + 'model.json';\n  var metadataURL = URL + 'metadata.json';\n  var model, webcam, ctx, labelContainer, maxPredictions; // 운동별 설명 이미지 선택\n\n  var beforeImageURL = require('../../assets/images/exerciseTutorial/' + exercise.type + '/0.png');\n\n  var afterImageURL = require('../../assets/images/exerciseTutorial/' + exercise.type + '/1.png');\n\n  useEffect(function () {\n    switch (exercise.type) {\n      case 1:\n        //사이드 레터럴 레이즈\n        setURL('https://teachablemachine.withgoogle.com/models/0ZRI732cm/');\n        break;\n\n      case 2:\n        // 윗몸일으키기\n        setURL('https://teachablemachine.withgoogle.com/models/tm81ArpyV/');\n        break;\n\n      case 3:\n        // 턱걸이\n        setURL('https://teachablemachine.withgoogle.com/models/auPSltZqw/');\n        break;\n\n      case 4:\n        // 팔굽혀펴기\n        setURL('https://teachablemachine.withgoogle.com/models/riGujyHxt/');\n        break;\n\n      case 5:\n        // 스쿼트\n        setURL('https://teachablemachine.withgoogle.com/models/9JHU8Vcfw/');\n        break;\n\n      case 6:\n        // 런지\n        setURL('https://teachablemachine.withgoogle.com/models/8htc5Fdlu/');\n        break;\n    }\n  }, []);\n  useEffect(function () {\n    modelURL = URL + 'model.json';\n    metadataURL = URL + 'metadata.json';\n    console.log(modelURL, metadataURL);\n\n    if (URL !== '') {\n      init();\n    }\n  }, [URL]);\n\n  function init() {\n    return _init.apply(this, arguments);\n  }\n\n  function _init() {\n    _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var size, flip, loading, canvas;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return tmPose.load(modelURL, metadataURL);\n\n            case 2:\n              model = _context.sent;\n              maxPredictions = model.getTotalClasses(); // Convenience function to setup a webcam\n\n              size = 500;\n              flip = true; // whether to flip the webcam\n\n              loading = false;\n              webcam = new tmPose.Webcam(size, size, flip); // width, height, flip\n\n              _context.next = 10;\n              return webcam.setup();\n\n            case 10:\n              // request access to the webcam\n              console.log(webcam);\n              _context.next = 13;\n              return webcam.play();\n\n            case 13:\n              // 화면이 로딩되었다면 아이콘 제거\n              loading = true;\n              setPageLoading(loading);\n              window.requestAnimationFrame(loop); // append/get elements to the DOM\n\n              canvas = document.getElementById('canvas');\n              canvas.width = size;\n              canvas.height = size;\n              ctx = canvas.getContext('2d');\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _init.apply(this, arguments);\n  }\n\n  function loop(_x) {\n    return _loop.apply(this, arguments);\n  }\n\n  function _loop() {\n    _loop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(timestamp) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              webcam.update(); // update the webcam frame\n\n              _context2.next = 3;\n              return predict();\n\n            case 3:\n              window.requestAnimationFrame(loop);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _loop.apply(this, arguments);\n  }\n\n  var angle = Math.floor(360 / exercise.time * 10) / 10; //원각도값 소수점 1자리까지 저장\n\n  var progress = 360;\n  var status = 'wait';\n  var countTime = 0;\n  var countTotalTime = 0;\n  var countSet = 1;\n\n  function predict() {\n    return _predict.apply(this, arguments);\n  }\n\n  function _predict() {\n    _predict = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _yield$model$estimate, pose, posenetOutput, prediction, timer, timerInterval;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return model.estimatePose(webcam.canvas);\n\n            case 2:\n              _yield$model$estimate = _context3.sent;\n              pose = _yield$model$estimate.pose;\n              posenetOutput = _yield$model$estimate.posenetOutput;\n              _context3.next = 7;\n              return model.predict(posenetOutput);\n\n            case 7:\n              prediction = _context3.sent;\n\n              //------------------------------------------------\n              if (prediction[0].probability.toFixed(2) > 0.9) {\n                if (status == 'action') {\n                  countTime++;\n                  countTotalTime++;\n                  setCurrentCount(countTotalTime);\n                  console.log(status, countTime);\n                  progress = progress - angle; //운동횟수당 원 채워지는 각도 설정\n\n                  if (progress < 0) {\n                    progress = 360 - angle;\n                  }\n\n                  $('.progress').css('stroke-dashoffset', progress);\n                  $('.circle-big .progress').css('stroke', '#27e1ae');\n                  console.log(progress, angle);\n\n                  if (countTotalTime === exercise.set * exercise.time) {\n                    handleExercise(countTotalTime);\n                  } // 1세트가 끝난 경우\n\n\n                  if (countTime.toString() === exercise.time && countTotalTime < exercise.set * exercise.time) {\n                    // 세트 수 증가\n                    countSet++;\n                    setCurrentSet(countSet); // 세트 당 카운트 수 reset\n\n                    countTime = 0; // breaktimer 가동\n\n                    if (breakTime > 0) {\n                      timer = breakTime;\n                      setTimer(timer);\n                      setTimeout(function () {\n                        webcam.pause();\n                      }, 500); // 화면 정지\n\n                      handleOpen(); // 모달창 on\n\n                      timerInterval = setInterval(function () {\n                        if (timer == 0) clearInterval(timerInterval);\n                        timer--;\n                        setTimer(timer);\n                      }, 1000);\n                      setTimeout(function () {\n                        handleClose();\n                      }, breakTime * 1000); // 모달 close     \n\n                      setTimeout(function () {\n                        webcam.play();\n                      }, breakTime * 1000);\n                    }\n                  }\n                }\n\n                status = 'wait';\n              } else if (prediction[1].probability.toFixed(2) > 0.9) {\n                $('.circle-big .progress').css('stroke', '#ff0000');\n                status = 'action';\n              } //-----------------------------------------\n              // finally draw the poses\n\n\n              drawPose(pose);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _predict.apply(this, arguments);\n  }\n\n  function drawPose(pose) {\n    //티처블 함수호출\n    if (webcam.canvas) {\n      ctx.drawImage(webcam.canvas, 0, 0); // draw the keypoints and skeleton\n\n      if (pose) {\n        var minPartConfidence = 0.5;\n        tmPose.drawKeypoints(pose.keypoints, minPartConfidence, ctx);\n        tmPose.drawSkeleton(pose.keypoints, minPartConfidence, ctx);\n      }\n    }\n  }\n\n  var handleExercise = function handleExercise(cnt) {\n    console.log(\"🤞🤞🤞🤞🤞🤞🤞 \", cnt);\n    dispatch({\n      type: EXERCISE_HISTORY_REGISTER_REQUEST,\n      data: {\n        count: cnt,\n        date: dayjs(now).format('YYYY-MM-DD HH:mm:ss'),\n        exerciseNo: exercise.type\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"myExercise\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 5\n    }\n  }, pageLoading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menuTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, \"MY\\uC6B4\\uB3D9\"), /*#__PURE__*/React.createElement(Row, {\n    class: \"boxWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    md: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"imageWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"exerciseTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, \"\\uC6B4\\uB3D9 \\uAC00\\uC774\\uB4DC\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: beforeImageURL,\n    class: \"exerciseImage\",\n    alt: \"\\uC6B4\\uB3D9 \\uC2DC\\uC791 \\uB3D9\\uC791\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    src: arrowImage,\n    class: \"arrowImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: afterImageURL,\n    class: \"exerciseImage\",\n    alt: \"\\uC6B4\\uB3D9 \\uB05D \\uB3D9\\uC791\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: \"5\",\n    class: \"leftBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"leftBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    id: \"canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"exerciseInfo fontBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"exerciseName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 15\n    }\n  }, ExerciseTypeList[exercise.type - 1]), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }, \"\\uCD1D \\uC138\\uD2B8 : \", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"fontNormal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 27\n    }\n  }, exercise.set)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  }, \"\\uC138\\uD2B8\\uB2F9 \\uD69F\\uC218 : \", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"fontNormal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }, exercise.time))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"timeInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"frame\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"headline fontBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  }, \"Counter\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"currentSet fontNormal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 19\n    }\n  }, currentSet, \" \\uC138\\uD2B8\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"circle-big\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"counter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 23\n    }\n  }, \"0\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 23\n    }\n  }, \"\\uAC1C\")), /*#__PURE__*/React.createElement(\"svg\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    class: \"bg\",\n    cx: \"57\",\n    cy: \"57\",\n    r: \"52\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    class: \"progress\",\n    cx: \"57\",\n    cy: \"57\",\n    r: \"52\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 23\n    }\n  }))))))), /*#__PURE__*/React.createElement(Col, {\n    md: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"buttonWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    class: \"exitButton\",\n    onClick: function onClick() {\n      return handleExercise(currentCount);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, \"\\uC800\\uC7A5 \\uD6C4 \\uC885\\uB8CC\")), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"modal-modal-title\",\n    \"aria-describedby\": \"modal-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    class: \"fontNormal\",\n    style: {\n      marginTop: '20px'\n    },\n    id: \"modal-modal-title\",\n    variant: \"h6\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, \"\\uC26C\\uB294 \\uC2DC\\uAC04\"), /*#__PURE__*/React.createElement(Typography, {\n    class: \"fontBold\",\n    style: {\n      fontSize: '70px',\n      marginTop: '30px'\n    },\n    id: \"modal-modal-description\",\n    sx: {\n      mt: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }, timer, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"fontNormal\",\n    style: {\n      fontSize: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 25\n    }\n  }, \"\\uCD08\"))))) : /*#__PURE__*/React.createElement(\"div\", {\n    class: \"loadingWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/JUN-D/Desktop/헬스케어/11_2/HELF-master/front/src/components/Exercise/ExerciseRoom.js"],"names":["tmPose","React","useState","useEffect","$","useDispatch","useSelector","EXERCISE_HISTORY_REGISTER_REQUEST","dayjs","Box","Button","Typography","Modal","Row","Col","useParams","arrowImage","style","position","textAlign","top","left","transform","width","height","bgcolor","boxShadow","borderRadius","p","ExerciseRoom","dispatch","breakTime","state","exerciseHistory","exercise","now","Date","ExerciseTypeList","URL","setURL","currentSet","setCurrentSet","currentCount","setCurrentCount","pageLoading","setPageLoading","open","setOpen","handleOpen","handleClose","timer","setTimer","modelURL","metadataURL","model","webcam","ctx","labelContainer","maxPredictions","beforeImageURL","require","type","afterImageURL","console","log","init","load","getTotalClasses","size","flip","loading","Webcam","setup","play","window","requestAnimationFrame","loop","canvas","document","getElementById","getContext","timestamp","update","predict","angle","Math","floor","time","progress","status","countTime","countTotalTime","countSet","estimatePose","pose","posenetOutput","prediction","probability","toFixed","css","set","handleExercise","toString","setTimeout","pause","timerInterval","setInterval","clearInterval","drawPose","drawImage","minPartConfidence","drawKeypoints","keypoints","drawSkeleton","cnt","data","count","date","format","exerciseNo","marginTop","fontSize","mt"],"mappings":"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","sourcesContent":["// import * as tf from '@tensorflow/tfjs';\r\nimport * as tmPose from '@teachablemachine/pose';\r\nimport React, { useState, useEffect } from 'react';\r\nimport './ExcerciseRoom.css';\r\nimport $ from 'jquery';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EXERCISE_HISTORY_REGISTER_REQUEST } from '../../store/modules/exerciseHistory';\r\nimport dayjs from 'dayjs';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport arrowImage from '../../assets/images/exerciseTutorial/arrow_down.png';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  textAlign: 'center',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 350,\r\n  height: 300,\r\n  bgcolor: 'background.paper',\r\n  boxShadow: 24,\r\n  borderRadius: '20px',\r\n  p: 4,\r\n};\r\n\r\nexport default function ExerciseRoom() {\r\n  const dispatch = useDispatch();\r\n  const { breakTime } = useParams();\r\n  const { exercise } = useSelector((state) => state.exerciseHistory);\r\n  const now = new Date(); // 현재 날짜 및 시간\r\n\r\n  const ExerciseTypeList = [\r\n    '사이드 레터럴 레이즈',\r\n    '윗몸일으키기',\r\n    '턱걸이',\r\n    '팔굽혀펴기',\r\n    '스쿼트',\r\n    '런지',\r\n  ];\r\n\r\n  const [ URL, setURL ] = useState('');\r\n  const [ currentSet, setCurrentSet ] = useState(1);\r\n  const [ currentCount, setCurrentCount ] = useState(0);\r\n  const [ pageLoading, setPageLoading ] = useState(false);\r\n\r\n  // 모달창 관리 \r\n  const [ open, setOpen ] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const [ timer, setTimer ] = useState(0);\r\n\r\n  let modelURL = URL + 'model.json';\r\n  let metadataURL = URL + 'metadata.json';\r\n  let model, webcam, ctx, labelContainer, maxPredictions;\r\n\r\n  // 운동별 설명 이미지 선택\r\n  const beforeImageURL = require('../../assets/images/exerciseTutorial/' + exercise.type + '/0.png');\r\n  const afterImageURL = require('../../assets/images/exerciseTutorial/' + exercise.type + '/1.png');\r\n\r\n  useEffect(() => {\r\n    switch (exercise.type) {\r\n      case 1:\r\n        //사이드 레터럴 레이즈\r\n        setURL('https://teachablemachine.withgoogle.com/models/0ZRI732cm/');\r\n        break;\r\n      case 2: // 윗몸일으키기\r\n        setURL('https://teachablemachine.withgoogle.com/models/tm81ArpyV/');\r\n        break;\r\n      case 3: // 턱걸이\r\n        setURL('https://teachablemachine.withgoogle.com/models/auPSltZqw/');\r\n        break;\r\n      case 4: // 팔굽혀펴기\r\n        setURL('https://teachablemachine.withgoogle.com/models/riGujyHxt/');\r\n        break;\r\n      case 5: // 스쿼트\r\n        setURL('https://teachablemachine.withgoogle.com/models/9JHU8Vcfw/');\r\n        break;\r\n      case 6: // 런지\r\n        setURL('https://teachablemachine.withgoogle.com/models/8htc5Fdlu/');\r\n        break;\r\n\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    modelURL = URL + 'model.json';\r\n    metadataURL = URL + 'metadata.json';\r\n    console.log(modelURL, metadataURL);\r\n    if (URL !== '') {\r\n      init();\r\n    }\r\n  }, [URL]);\r\n\r\n\r\n  async function init() {\r\n    model = await tmPose.load(modelURL, metadataURL);\r\n    maxPredictions = model.getTotalClasses();\r\n    // Convenience function to setup a webcam\r\n    const size = 500;\r\n    const flip = true; // whether to flip the webcam\r\n    var loading = false;\r\n    webcam = new tmPose.Webcam(size, size, flip); // width, height, flip\r\n    await webcam.setup(); // request access to the webcam\r\n    console.log(webcam);\r\n    await webcam.play();\r\n    \r\n    // 화면이 로딩되었다면 아이콘 제거\r\n    loading = true;\r\n    setPageLoading(loading);\r\n\r\n    window.requestAnimationFrame(loop);\r\n    // append/get elements to the DOM\r\n    const canvas = document.getElementById('canvas');\r\n    canvas.width = size;\r\n    canvas.height = size;\r\n    ctx = canvas.getContext('2d');\r\n  }\r\n\r\n  async function loop(timestamp) {\r\n    webcam.update(); // update the webcam frame\r\n    await predict();\r\n    window.requestAnimationFrame(loop);\r\n  }\r\n\r\n  var angle = Math.floor((360 / exercise.time) * 10) / 10; //원각도값 소수점 1자리까지 저장\r\n  var progress = 360;\r\n  var status = 'wait';\r\n  var countTime = 0;\r\n  var countTotalTime = 0;\r\n  var countSet = 1;\r\n\r\n  async function predict() {\r\n    // Prediction #1: run input through posenet\r\n    // estimatePose can take in an image, video or canvas html element\r\n    const { pose, posenetOutput } = await model.estimatePose(webcam.canvas);\r\n    // Prediction 2: run input through teachable machine classification model\r\n    const prediction = await model.predict(posenetOutput);\r\n\r\n//------------------------------------------------\r\n\r\n    if (prediction[0].probability.toFixed(2) > 0.9) {     \r\n      if (status == 'action') {\r\n\r\n        countTime++;\r\n        countTotalTime++;\r\n        setCurrentCount(countTotalTime);\r\n\r\n\r\n        console.log(status, countTime);\r\n        progress = progress - angle;  //운동횟수당 원 채워지는 각도 설정\r\n        if (progress < 0) {\r\n          \r\n          progress = 360 - angle;\r\n          \r\n        }\r\n        $('.progress').css('stroke-dashoffset', progress);\r\n        \r\n        $('.circle-big .progress').css('stroke', '#27e1ae');\r\n        console.log(progress, angle);\r\n\r\n        if (countTotalTime === exercise.set * exercise.time) {\r\n          handleExercise(countTotalTime);\r\n        }\r\n\r\n        // 1세트가 끝난 경우\r\n        if (countTime.toString() === exercise.time && countTotalTime < exercise.set * exercise.time) {\r\n          // 세트 수 증가\r\n          countSet++;\r\n          setCurrentSet(countSet);\r\n          \r\n          // 세트 당 카운트 수 reset\r\n          countTime = 0;\r\n\r\n          // breaktimer 가동\r\n          if(breakTime>0) {\r\n            var timer = breakTime;\r\n            setTimer(timer);\r\n            setTimeout(() => { webcam.pause() }, 500)   // 화면 정지\r\n            handleOpen(); // 모달창 on\r\n\r\n            var timerInterval = setInterval(() => {\r\n              if(timer==0) clearInterval(timerInterval);\r\n              timer--;\r\n              setTimer(timer);\r\n            }, 1000);\r\n            setTimeout(() => { handleClose() }, breakTime*1000)       // 모달 close     \r\n            setTimeout(() => { webcam.play() }, breakTime*1000)          \r\n          }\r\n        }    \r\n      }\r\n      status = 'wait';\r\n      \r\n    } else if (prediction[1].probability.toFixed(2) > 0.9) {\r\n\r\n        $('.circle-big .progress').css('stroke', '#ff0000');\r\n\r\n      status = 'action';\r\n    }\r\n//-----------------------------------------\r\n    // finally draw the poses\r\n    drawPose(pose);\r\n  }\r\n\r\n  function drawPose(pose) {//티처블 함수호출\r\n    if (webcam.canvas) {\r\n      ctx.drawImage(webcam.canvas, 0, 0);\r\n      // draw the keypoints and skeleton\r\n      if (pose) {\r\n        const minPartConfidence = 0.5;\r\n        tmPose.drawKeypoints(pose.keypoints, minPartConfidence, ctx);\r\n        tmPose.drawSkeleton(pose.keypoints, minPartConfidence, ctx);\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleExercise = (cnt) => {\r\n    console.log(\"🤞🤞🤞🤞🤞🤞🤞 \", cnt);\r\n    dispatch({\r\n      type: EXERCISE_HISTORY_REGISTER_REQUEST,\r\n      data: {\r\n        count: cnt,\r\n        date: dayjs(now).format('YYYY-MM-DD HH:mm:ss'),\r\n        exerciseNo: exercise.type,\r\n      },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className='myExercise'>\r\n      { pageLoading ? \r\n        <>\r\n        <div className='menuTitle'>MY운동</div>\r\n        <Row class='boxWrapper'>\r\n          <Col md='1'></Col>\r\n          <Col md='2'>\r\n          <div class='imageWrapper'>\r\n            <div class='exerciseTitle'>운동 가이드</div>\r\n            <div>\r\n              <img src={beforeImageURL} class='exerciseImage' alt='운동 시작 동작'/>\r\n            </div>\r\n            <img src={ arrowImage } class='arrowImage' />\r\n            <div>\r\n              <img src={afterImageURL} class='exerciseImage' alt='운동 끝 동작'></img>\r\n            </div>\r\n          </div>\r\n          </Col>\r\n          <Col md='5'\r\n            class='leftBox'>\r\n            <div class='leftBox'>\r\n              <canvas id='canvas'></canvas>\r\n            </div>\r\n          </Col>\r\n          <Col md='3'>\r\n            <div class='exerciseInfo fontBold'>\r\n              <div class='exerciseName'>{ ExerciseTypeList[exercise.type-1] }</div>\r\n              <div>총 세트 : <span class='fontNormal'>{ exercise.set }</span></div>\r\n              <div>세트당 횟수 : <span class='fontNormal'>{ exercise.time }</span></div>\r\n            </div>\r\n            <div class='timeInfo'>\r\n              <div class='frame'>\r\n                <div class='center'>\r\n                  <div class='headline fontBold'>\r\n                    Counter\r\n                  </div>\r\n                  <div class='currentSet fontNormal'>\r\n                    { currentSet } 세트\r\n                  </div>\r\n                  <div class='circle-big'>\r\n                    <div class='text'>\r\n                      <span id='counter'>0</span>\r\n                      <div class='small'>개</div>\r\n                    </div>\r\n                    <svg>\r\n                      <circle class='bg' cx='57' cy='57' r='52' />\r\n                      <circle class='progress' cx='57' cy='57' r='52' />\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n              </div>  \r\n            </div>\r\n          </Col>\r\n          <Col md='1'></Col>\r\n        </Row> \r\n        <div class='buttonWrapper'>\r\n          <Button class='exitButton' onClick={ () => handleExercise(currentCount) }>저장 후 종료</Button>\r\n        </div>\r\n\r\n        {/* <div id='label-container'></div> */}\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby='modal-modal-title'\r\n          aria-describedby='modal-modal-description'\r\n        >\r\n          <Box sx={style}>\r\n            <Typography \r\n              class='fontNormal'\r\n              style={{ marginTop: '20px' }}\r\n              id='modal-modal-title' \r\n              variant='h6' \r\n              component='h2'>\r\n              쉬는 시간\r\n            </Typography> \r\n            <Typography \r\n              class='fontBold'\r\n              style={{ fontSize: '70px', marginTop: '30px'}}\r\n              id='modal-modal-description' \r\n              sx={{ mt: 2 }}>\r\n              { timer } <span class='fontNormal' style={{ fontSize: '20px' }}>초</span>\r\n            </Typography>\r\n          </Box>\r\n        </Modal>\r\n      </>\r\n    : \r\n      <div class='loadingWrapper'>\r\n        <div id='loading'></div>\r\n      </div>\r\n    }\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}