{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\HELF-master\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadMyDietImage),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadMyDietImage),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadMyDietRegister),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadMyDietRegister),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(loadMyDietDiaryList),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchMyDietDiaryList),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(loadMyDietDiaryDailyInfo),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchMyDietDiaryDailyInfo),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(loadMyDietDetail),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadMyDietDetail),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(loadMyDietUpdate),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadMyDietUpdate),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(loadMyDietDiaryItemDelete),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchMyDietDiaryItemDelete),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(loadFoodList),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadFoodList),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(myDietSaga);\n\nimport { all, call, put, fork, takeLatest } from \"redux-saga/effects\";\nimport { myDietImageAPI, myDietRegisterAPI, myDietDiaryListAPI, myDietDiaryDailyInfoAPI, myDietUpdateAPI, myDietDetailAPI, myDietDiaryItemDeleteAPI, foodListAPI } from \"../apis/myDiet\";\nimport { MY_DIET_IMAGE_REQUEST, MY_DIET_IMAGE_SUCCESS, MY_DIET_IMAGE_FAILURE, MY_DIET_REGISTER_REQUEST, MY_DIET_REGISTER_SUCCESS, MY_DIET_REGISTER_FAILURE, MY_DIET_DIARY_LIST_REQUEST, MY_DIET_DIARY_LIST_SUCCESS, MY_DIET_DIARY_LIST_FAILURE, MY_DIET_DIARY_DAILY_INFO_REQUEST, MY_DIET_DIARY_DAILY_INFO_SUCCESS, MY_DIET_DIARY_DAILY_INFO_FAILURE, MY_DIET_DETAIL_REQUEST, MY_DIET_DETAIL_SUCCESS, MY_DIET_DETAIL_FAILURE, MY_DIET_UPDATE_REQUEST, MY_DIET_UPDATE_SUCCESS, MY_DIET_UPDATE_FAILURE, MY_DIET_DIARY_DELETE_REQUEST, MY_DIET_DIARY_DELETE_SUCCESS, MY_DIET_DIARY_DELETE_FAILURE, FOOD_LIST_REQUEST, FOOD_LIST_SUCCESS, FOOD_LIST_FAILURE } from \"../modules/myDiet\";\nimport swal from \"sweetalert\"; // 예쁜 alert 창을 위해 사용\n\nfunction loadMyDietImage(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMyDietImage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(myDietImageAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: MY_DIET_IMAGE_SUCCESS,\n            data: result\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: MY_DIET_IMAGE_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLoadMyDietImage() {\n  return _regeneratorRuntime.wrap(function watchLoadMyDietImage$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(MY_DIET_IMAGE_REQUEST, loadMyDietImage);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction loadMyDietRegister(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMyDietRegister$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(myDietRegisterAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: MY_DIET_REGISTER_SUCCESS,\n            data: result\n          });\n\n        case 6:\n          swal(\"식단 등록 완료\", \"  \", \"success\", {\n            buttons: false,\n            timer: 1800\n          });\n          document.location.href = \"/dietdiary/\" + action.data.diaryDate.substring(0, 10);\n          _context3.next = 14;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 14;\n          return put({\n            type: MY_DIET_REGISTER_FAILURE\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 10]]);\n}\n\nfunction watchLoadMyDietRegister() {\n  return _regeneratorRuntime.wrap(function watchLoadMyDietRegister$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(MY_DIET_REGISTER_REQUEST, loadMyDietRegister);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n} // 식단 일정 목록 모두 조회\n\n\nfunction loadMyDietDiaryList(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMyDietDiaryList$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(myDietDiaryListAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: MY_DIET_DIARY_LIST_SUCCESS,\n            data: result\n          });\n\n        case 6:\n          _context5.next = 12;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 12;\n          return put({\n            type: MY_DIET_DIARY_LIST_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction watchMyDietDiaryList() {\n  return _regeneratorRuntime.wrap(function watchMyDietDiaryList$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(MY_DIET_DIARY_LIST_REQUEST, loadMyDietDiaryList);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n} // 해당 날짜에 해당하는 식단 일지 정보 가져오기\n\n\nfunction loadMyDietDiaryDailyInfo(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMyDietDiaryDailyInfo$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(myDietDiaryDailyInfoAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: MY_DIET_DIARY_DAILY_INFO_SUCCESS,\n            data: result\n          });\n\n        case 6:\n          _context7.next = 12;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 12;\n          return put({\n            type: MY_DIET_DIARY_DAILY_INFO_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchMyDietDiaryDailyInfo() {\n  return _regeneratorRuntime.wrap(function watchMyDietDiaryDailyInfo$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(MY_DIET_DIARY_DAILY_INFO_REQUEST, loadMyDietDiaryDailyInfo);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction loadMyDietDetail(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMyDietDetail$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(myDietDetailAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            type: MY_DIET_DETAIL_SUCCESS,\n            data: result\n          });\n\n        case 6:\n          _context9.next = 12;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          _context9.next = 12;\n          return put({\n            type: MY_DIET_DETAIL_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction watchLoadMyDietDetail() {\n  return _regeneratorRuntime.wrap(function watchLoadMyDietDetail$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(MY_DIET_DETAIL_REQUEST, loadMyDietDetail);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction loadMyDietUpdate(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMyDietUpdate$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(myDietUpdateAPI, action.data);\n\n        case 3:\n          result = _context11.sent;\n          _context11.next = 6;\n          return put({\n            type: MY_DIET_UPDATE_SUCCESS,\n            data: result\n          });\n\n        case 6:\n          swal(\"식단 수정 완료\", \"  \", \"success\", {\n            buttons: false,\n            timer: 1800\n          });\n          _context11.next = 13;\n          break;\n\n        case 9:\n          _context11.prev = 9;\n          _context11.t0 = _context11[\"catch\"](0);\n          _context11.next = 13;\n          return put({\n            type: MY_DIET_UPDATE_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 9]]);\n}\n\nfunction watchLoadMyDietUpdate() {\n  return _regeneratorRuntime.wrap(function watchLoadMyDietUpdate$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(MY_DIET_UPDATE_REQUEST, loadMyDietUpdate);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n} // 식단 일지 번호를 이용하여 식단 일지 정보 삭제하기\n\n\nfunction loadMyDietDiaryItemDelete(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMyDietDiaryItemDelete$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return call(myDietDiaryItemDeleteAPI, action.data);\n\n        case 3:\n          result = _context13.sent;\n          _context13.next = 6;\n          return put({\n            type: MY_DIET_DIARY_DELETE_SUCCESS,\n            data: result\n          });\n\n        case 6:\n          _context13.next = 12;\n          break;\n\n        case 8:\n          _context13.prev = 8;\n          _context13.t0 = _context13[\"catch\"](0);\n          _context13.next = 12;\n          return put({\n            type: MY_DIET_DIARY_DELETE_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[0, 8]]);\n}\n\nfunction watchMyDietDiaryItemDelete() {\n  return _regeneratorRuntime.wrap(function watchMyDietDiaryItemDelete$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(MY_DIET_DIARY_DELETE_REQUEST, loadMyDietDiaryItemDelete);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction loadFoodList() {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFoodList$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          _context15.next = 3;\n          return call(foodListAPI);\n\n        case 3:\n          result = _context15.sent;\n          _context15.next = 6;\n          return put({\n            type: FOOD_LIST_SUCCESS,\n            data: result\n          });\n\n        case 6:\n          _context15.next = 12;\n          break;\n\n        case 8:\n          _context15.prev = 8;\n          _context15.t0 = _context15[\"catch\"](0);\n          _context15.next = 12;\n          return put({\n            type: FOOD_LIST_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15, null, [[0, 8]]);\n}\n\nfunction watchLoadFoodList() {\n  return _regeneratorRuntime.wrap(function watchLoadFoodList$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeLatest(FOOD_LIST_REQUEST, loadFoodList);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nexport default function myDietSaga() {\n  return _regeneratorRuntime.wrap(function myDietSaga$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return all([fork(watchLoadMyDietImage), fork(watchLoadMyDietRegister), fork(watchMyDietDiaryList), fork(watchMyDietDiaryDailyInfo), fork(watchLoadMyDietDetail), fork(watchLoadMyDietUpdate), fork(watchMyDietDiaryItemDelete), fork(watchLoadFoodList)]);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}","map":{"version":3,"sources":["C:/Users/JUN-D/Desktop/HELF-master/front/src/store/sagas/myDiet.js"],"names":["loadMyDietImage","watchLoadMyDietImage","loadMyDietRegister","watchLoadMyDietRegister","loadMyDietDiaryList","watchMyDietDiaryList","loadMyDietDiaryDailyInfo","watchMyDietDiaryDailyInfo","loadMyDietDetail","watchLoadMyDietDetail","loadMyDietUpdate","watchLoadMyDietUpdate","loadMyDietDiaryItemDelete","watchMyDietDiaryItemDelete","loadFoodList","watchLoadFoodList","myDietSaga","all","call","put","fork","takeLatest","myDietImageAPI","myDietRegisterAPI","myDietDiaryListAPI","myDietDiaryDailyInfoAPI","myDietUpdateAPI","myDietDetailAPI","myDietDiaryItemDeleteAPI","foodListAPI","MY_DIET_IMAGE_REQUEST","MY_DIET_IMAGE_SUCCESS","MY_DIET_IMAGE_FAILURE","MY_DIET_REGISTER_REQUEST","MY_DIET_REGISTER_SUCCESS","MY_DIET_REGISTER_FAILURE","MY_DIET_DIARY_LIST_REQUEST","MY_DIET_DIARY_LIST_SUCCESS","MY_DIET_DIARY_LIST_FAILURE","MY_DIET_DIARY_DAILY_INFO_REQUEST","MY_DIET_DIARY_DAILY_INFO_SUCCESS","MY_DIET_DIARY_DAILY_INFO_FAILURE","MY_DIET_DETAIL_REQUEST","MY_DIET_DETAIL_SUCCESS","MY_DIET_DETAIL_FAILURE","MY_DIET_UPDATE_REQUEST","MY_DIET_UPDATE_SUCCESS","MY_DIET_UPDATE_FAILURE","MY_DIET_DIARY_DELETE_REQUEST","MY_DIET_DIARY_DELETE_SUCCESS","MY_DIET_DIARY_DELETE_FAILURE","FOOD_LIST_REQUEST","FOOD_LIST_SUCCESS","FOOD_LIST_FAILURE","swal","action","data","result","type","buttons","timer","document","location","href","diaryDate","substring"],"mappings":"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","sourcesContent":["import { all, call, put, fork, takeLatest } from \"redux-saga/effects\";\nimport {\n  myDietImageAPI,\n  myDietRegisterAPI,\n  myDietDiaryListAPI,\n  myDietDiaryDailyInfoAPI,\n  myDietUpdateAPI,\n  myDietDetailAPI,\n  myDietDiaryItemDeleteAPI,\n  foodListAPI,\n} from \"../apis/myDiet\";\nimport {\n  MY_DIET_IMAGE_REQUEST,\n  MY_DIET_IMAGE_SUCCESS,\n  MY_DIET_IMAGE_FAILURE,\n  MY_DIET_REGISTER_REQUEST,\n  MY_DIET_REGISTER_SUCCESS,\n  MY_DIET_REGISTER_FAILURE,\n  MY_DIET_DIARY_LIST_REQUEST,\n  MY_DIET_DIARY_LIST_SUCCESS,\n  MY_DIET_DIARY_LIST_FAILURE,\n  MY_DIET_DIARY_DAILY_INFO_REQUEST,\n  MY_DIET_DIARY_DAILY_INFO_SUCCESS,\n  MY_DIET_DIARY_DAILY_INFO_FAILURE,\n  MY_DIET_DETAIL_REQUEST,\n  MY_DIET_DETAIL_SUCCESS,\n  MY_DIET_DETAIL_FAILURE,\n  MY_DIET_UPDATE_REQUEST,\n  MY_DIET_UPDATE_SUCCESS,\n  MY_DIET_UPDATE_FAILURE,\n  MY_DIET_DIARY_DELETE_REQUEST,\n  MY_DIET_DIARY_DELETE_SUCCESS,\n  MY_DIET_DIARY_DELETE_FAILURE,\n  FOOD_LIST_REQUEST,\n  FOOD_LIST_SUCCESS,\n  FOOD_LIST_FAILURE,\n} from \"../modules/myDiet\";\n\nimport swal from \"sweetalert\"; // 예쁜 alert 창을 위해 사용\n\nfunction* loadMyDietImage(action) {\n  try {\n    const result = yield call(myDietImageAPI, action.data);\n    yield put({ type: MY_DIET_IMAGE_SUCCESS, data: result });\n  } catch (error) {\n    yield put({ type: MY_DIET_IMAGE_FAILURE });\n  }\n}\n\nfunction* watchLoadMyDietImage() {\n  yield takeLatest(MY_DIET_IMAGE_REQUEST, loadMyDietImage);\n}\n\nfunction* loadMyDietRegister(action) {\n  try {\n    const result = yield call(myDietRegisterAPI, action.data);\n    yield put({ type: MY_DIET_REGISTER_SUCCESS, data: result });\n    swal(\"식단 등록 완료\", \"  \", \"success\", {\n      buttons: false,\n      timer: 1800,\n    });\n    document.location.href = \"/dietdiary/\" + action.data.diaryDate.substring(0,10);\n  } catch (error) {\n    yield put({ type: MY_DIET_REGISTER_FAILURE });\n  }\n}\n\nfunction* watchLoadMyDietRegister() {\n  yield takeLatest(MY_DIET_REGISTER_REQUEST, loadMyDietRegister);\n}\n\n// 식단 일정 목록 모두 조회\nfunction* loadMyDietDiaryList(action) {\n  try {\n    const result = yield call(myDietDiaryListAPI, action.data);\n    yield put({ type: MY_DIET_DIARY_LIST_SUCCESS, data: result });\n  } catch (error) {\n    yield put({ type: MY_DIET_DIARY_LIST_FAILURE });\n  }\n}\n\nfunction* watchMyDietDiaryList() {\n  yield takeLatest(MY_DIET_DIARY_LIST_REQUEST, loadMyDietDiaryList);\n}\n\n// 해당 날짜에 해당하는 식단 일지 정보 가져오기\nfunction* loadMyDietDiaryDailyInfo(action) {\n  try {\n    const result = yield call(myDietDiaryDailyInfoAPI, action.data);\n    yield put({ type: MY_DIET_DIARY_DAILY_INFO_SUCCESS, data: result });\n  } catch (error) {\n    yield put({ type: MY_DIET_DIARY_DAILY_INFO_FAILURE });\n  }\n}\n\nfunction* watchMyDietDiaryDailyInfo() {\n  yield takeLatest(MY_DIET_DIARY_DAILY_INFO_REQUEST, loadMyDietDiaryDailyInfo);\n}\n\nfunction* loadMyDietDetail(action) {\n  try {\n    const result = yield call(myDietDetailAPI, action.data);\n    yield put({ type: MY_DIET_DETAIL_SUCCESS, data: result });\n  } catch (error) {\n    yield put({ type: MY_DIET_DETAIL_FAILURE });\n  }\n}\n\nfunction* watchLoadMyDietDetail() {\n  yield takeLatest(MY_DIET_DETAIL_REQUEST, loadMyDietDetail);\n}\n\nfunction* loadMyDietUpdate(action) {\n  try {\n    const result = yield call(myDietUpdateAPI, action.data);\n    yield put({ type: MY_DIET_UPDATE_SUCCESS, data: result });\n    swal(\"식단 수정 완료\", \"  \", \"success\", {\n      buttons: false,\n      timer: 1800,\n    });\n  } catch (error) {\n    yield put({ type: MY_DIET_UPDATE_FAILURE });\n  }\n}\n\nfunction* watchLoadMyDietUpdate() {\n  yield takeLatest(MY_DIET_UPDATE_REQUEST, loadMyDietUpdate);\n}\n\n// 식단 일지 번호를 이용하여 식단 일지 정보 삭제하기\nfunction* loadMyDietDiaryItemDelete(action) {\n  try {\n    const result = yield call(myDietDiaryItemDeleteAPI, action.data);\n    yield put({ type: MY_DIET_DIARY_DELETE_SUCCESS, data: result });\n\n    // const result2 = {\n    //   date: action.data.date.diaryDate\n    // }\n    // yield put({ type: MY_DIET_DIARY_DAILY_INFO_REQUEST, data: result2 });  // 식단일지 정보 조회\n  } catch (error) {\n    yield put({ type: MY_DIET_DIARY_DELETE_FAILURE });\n  }\n}\n\nfunction* watchMyDietDiaryItemDelete() {\n  yield takeLatest(MY_DIET_DIARY_DELETE_REQUEST, loadMyDietDiaryItemDelete);\n}\n\nfunction* loadFoodList() {\n  try {\n    const result = yield call(foodListAPI);\n    yield put({ type: FOOD_LIST_SUCCESS, data: result });\n  } catch (error) {\n    yield put({ type: FOOD_LIST_FAILURE });\n  }\n}\n\nfunction* watchLoadFoodList() {\n  yield takeLatest(FOOD_LIST_REQUEST, loadFoodList);\n}\n\nexport default function* myDietSaga() {\n  yield all([\n    fork(watchLoadMyDietImage),\n    fork(watchLoadMyDietRegister),\n    fork(watchMyDietDiaryList),\n    fork(watchMyDietDiaryDailyInfo),\n    fork(watchLoadMyDietDetail),\n    fork(watchLoadMyDietUpdate),\n    fork(watchMyDietDiaryItemDelete),\n    fork(watchLoadFoodList),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}