{"ast":null,"code":"import produce from \"immer\";\nimport { IMAGE_URL } from \"../../utils/https\";\nvar initialState = {\n  myDietDetail: {\n    imagePath: null,\n    diaryNo: \"\",\n    diaryDate: \"\",\n    mealTime: \"\",\n    description: \"\",\n    isShared: false,\n    dietFindResList: []\n  },\n  weights: [100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600],\n  foods: [],\n  dietDetailThumbnail: null,\n  dietThumbnail: null,\n  imagePath: null,\n  mealTime: \"\",\n  diaryDate: \"\",\n  description: \"\",\n  foodName: [],\n  imageDetectionLoading: false,\n  imageDetectionListEmpty: false,\n  myDietDiaryList: [],\n  myDietDiaryDailyInfo: [],\n  myDietDiaryDailyInfoCopy: [],\n  // 식단 일지 삭제\n  myDietDiaryDeleteLoading: false,\n  myDietDiaryDeleteDone: false,\n  myDietDiaryDeleteError: null,\n  // 식단 일지\n  diaryShareLoading: false,\n  diaryShareDone: false,\n  diaryshareError: null\n};\nexport var MY_DIET_IMAGE_REQUEST = \"MY_DIET_IMAGE_REQUEST\";\nexport var MY_DIET_IMAGE_SUCCESS = \"MY_DIET_IMAGE_SUCCESS\";\nexport var MY_DIET_IMAGE_FAILURE = \"MY_DIET_IMAGE_FAILURE\";\nexport var MY_DIET_REGISTER_REQUEST = \"MY_DIET_REGISTER_REQUEST\";\nexport var MY_DIET_REGISTER_SUCCESS = \"MY_DIET_REGISTER_SUCCESS\";\nexport var MY_DIET_REGISTER_FAILURE = \"MY_DIET_REGISTER_FAILURE\";\nexport var MY_DIET_DIARY_LIST_REQUEST = \"MY_DIET_DIARY_LIST_REQUEST\";\nexport var MY_DIET_DIARY_LIST_SUCCESS = \"MY_DIET_DIARY_LIST_SUCCESS\";\nexport var MY_DIET_DIARY_LIST_FAILURE = \"MY_DIET_DIARY_LIST_FAILURE\";\nexport var MY_DIET_DIARY_DAILY_INFO_REQUEST = \"MY_DIET_DIARY_DAILY_INFO_REQUEST\";\nexport var MY_DIET_DIARY_DAILY_INFO_SUCCESS = \"MY_DIET_DIARY_DAILY_INFO_SUCCESS\";\nexport var MY_DIET_DIARY_DAILY_INFO_FAILURE = \"MY_DIET_DIARY_DAILY_INFO_FAILURE\";\nexport var MY_DIET_DETAIL_REQUEST = \"MY_DIET_DETAIL_REQUEST\";\nexport var MY_DIET_DETAIL_SUCCESS = \"MY_DIET_DETAIL_SUCCESS\";\nexport var MY_DIET_DETAIL_FAILURE = \"MY_DIET_DETAIL_FAILURE\";\nexport var MY_DIET_UPDATE_REQUEST = \"MY_DIET_UPDATE_REQUEST\";\nexport var MY_DIET_UPDATE_SUCCESS = \"MY_DIET_UPDATE_SUCCESS\";\nexport var MY_DIET_UPDATE_FAILURE = \"MY_DIET_UPDATE_FAILURE\";\nexport var MY_DIET_DIARY_DELETE_REQUEST = \"MY_DIET_DIARY_DELETE_REQUEST\";\nexport var MY_DIET_DIARY_DELETE_SUCCESS = \"MY_DIET_DIARY_DELETE_SUCCESS\";\nexport var MY_DIET_DIARY_DELETE_FAILURE = \"MY_DIET_DIARY_DELETE_FAILURE\";\nexport var MY_DIET_DIARY_SHARE_REQUEST = \"MY_DIET_DIARY_SHARE_REQUEST\";\nexport var MY_DIET_DIARY_SHARE_SUCCESS = \"MY_DIET_DIARY_SHARE_SUCCESS\";\nexport var MY_DIET_DIARY_SHARE_FAILURE = \"MY_DIET_DIARY_SHARE_REQUEST\";\nexport var FOOD_LIST_REQUEST = \"FOOD_LIST_REQUEST\";\nexport var FOOD_LIST_SUCCESS = \"FOOD_LIST_SUCCESS\";\nexport var FOOD_LIST_FAILURE = \"FOOD_LIST_FAILURE\";\nvar SET_MY_DIET_WEIGHT = \"SET_MY_DIET_WEIGHT\";\nexport var setmyDietWeight = function setmyDietWeight(state) {\n  return {\n    type: SET_MY_DIET_WEIGHT,\n    state: state\n  };\n};\nvar SET_MY_DIET_DETAIL_IMAGEPATH = \"SET_MY_DIET_DETAIL_IMAGEPATH\";\nexport var setMyDietDetailImagePath = function setMyDietDetailImagePath(state) {\n  return {\n    type: SET_MY_DIET_DETAIL_IMAGEPATH,\n    state: state\n  };\n};\nvar SET_MY_DIET_DETAIL_THUMBNAIL = \"SET_MY_DIET_DETAIL_THUMBNAIL\";\nexport var setDietDetailThumbnail = function setDietDetailThumbnail(state) {\n  return {\n    type: SET_MY_DIET_DETAIL_THUMBNAIL,\n    state: state\n  };\n};\nvar SET_FOOD_NAME = \"SET_FOOD_NAME\";\nexport var setFoodName = function setFoodName(state) {\n  return {\n    type: SET_FOOD_NAME,\n    state: state\n  };\n};\nvar SET_FOOD_CHECK_BOX = \"SET_FOOD_CHECK_BOX\";\nexport var setFoodCheckBox = function setFoodCheckBox(state) {\n  return {\n    type: SET_FOOD_CHECK_BOX,\n    state: state\n  };\n};\nvar SET_IMAGE_DETECTION_LIST_EMPTY = \"SET_IMAGE_DETECTION_LIST_EMPTY\";\nexport var setImageDetectionListEmpty = function setImageDetectionListEmpty(state) {\n  return {\n    type: SET_IMAGE_DETECTION_LIST_EMPTY,\n    state: state\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case MY_DIET_IMAGE_REQUEST:\n        draft.imageDetectionLoading = true;\n        draft.imageDetectionListEmpty = false;\n        break;\n\n      case MY_DIET_IMAGE_SUCCESS:\n        draft.imageDetectionLoading = false;\n        if (action.data.data.resultList.length === 0) draft.imageDetectionListEmpty = true;\n        draft.foodName = [];\n        action.data.data.resultList.forEach(function (foods) {\n          draft.foodName.push({\n            foodName: foods,\n            weight: 100\n          });\n        }); // console.log(action.data.data);\n\n        break;\n\n      case MY_DIET_IMAGE_FAILURE:\n        break;\n\n      case MY_DIET_REGISTER_REQUEST:\n        break;\n\n      case MY_DIET_REGISTER_SUCCESS:\n        draft.foodName = [];\n        break;\n\n      case MY_DIET_REGISTER_FAILURE:\n        break;\n\n      case MY_DIET_DIARY_LIST_REQUEST:\n        break;\n\n      case MY_DIET_DIARY_LIST_SUCCESS:\n        draft.myDietDiaryList = action.data;\n        break;\n\n      case MY_DIET_DIARY_LIST_FAILURE:\n        break;\n\n      case MY_DIET_DIARY_DAILY_INFO_REQUEST:\n        break;\n\n      case MY_DIET_DIARY_DAILY_INFO_SUCCESS:\n        draft.myDietDiaryDailyInfo = action.data;\n        break;\n\n      case MY_DIET_DIARY_DAILY_INFO_FAILURE:\n        break;\n\n      case MY_DIET_DETAIL_REQUEST:\n        break;\n\n      case MY_DIET_DETAIL_SUCCESS:\n        draft.myDietDetail.description = action.data.data.description;\n        draft.myDietDetail.diaryDate = action.data.data.diaryDate;\n        draft.myDietDetail.diaryNo = action.data.data.diaryNo;\n        draft.myDietDetail.imagePath = action.data.data.imagePath;\n        draft.myDietDetail.mealTime = action.data.data.mealTime;\n        draft.myDietDetail.dietFindResList = action.data.data.dietFindResList;\n        draft.dietDetailThumbnail = \"\".concat(IMAGE_URL).concat(action.data.data.imagePath);\n        break;\n\n      case MY_DIET_DETAIL_FAILURE:\n        break;\n\n      case MY_DIET_UPDATE_REQUEST:\n        break;\n\n      case MY_DIET_UPDATE_SUCCESS:\n        draft.myDietDetail.description = action.data.data.description;\n        draft.myDietDetail.diaryDate = action.data.data.diaryDate;\n        draft.myDietDetail.diaryNo = action.data.data.diaryNo;\n        draft.myDietDetail.imagePath = action.data.data.imagePath;\n        draft.myDietDetail.mealTime = action.data.data.mealTime;\n        draft.myDietDetail.dietFindResList = action.data.data.dietFindResList;\n        draft.dietDetailThumbnail = \"\".concat(IMAGE_URL).concat(action.data.data.imagePath);\n        break;\n\n      case MY_DIET_UPDATE_FAILURE:\n        break;\n\n      case MY_DIET_DIARY_DELETE_REQUEST:\n        draft.myDietDiaryDeleteLoading = true;\n        draft.myDietDiaryDeleteDone = false;\n        break;\n\n      case MY_DIET_DIARY_DELETE_SUCCESS:\n        draft.myDietDiaryDeleteLoading = false;\n        draft.myDietDiaryDeleteDone = true;\n        break;\n\n      case MY_DIET_DIARY_DELETE_FAILURE:\n        draft.myDietDiaryDeleteLoading = false;\n        draft.myDietDiaryDeleteError = action.error;\n        break;\n\n      case SET_MY_DIET_WEIGHT:\n        draft.foodName[action.state.index].weight = action.state.weight;\n        break;\n\n      case SET_MY_DIET_DETAIL_IMAGEPATH:\n        draft.myDietDetail.imagePath = action.state;\n        break;\n\n      case SET_MY_DIET_DETAIL_THUMBNAIL:\n        draft.dietDetailThumbnail = action.state;\n        break;\n\n      case SET_FOOD_NAME:\n        draft.foodName = [];\n        action.state.forEach(function (food) {\n          draft.foodName.push({\n            foodName: food.foodName,\n            weight: food.weight\n          });\n        });\n        break;\n\n      case SET_FOOD_CHECK_BOX:\n        draft.foodName = [];\n        action.state.forEach(function (food) {\n          draft.foodName.push({\n            foodName: food,\n            weight: 100\n          });\n        });\n        break;\n\n      case SET_IMAGE_DETECTION_LIST_EMPTY:\n        draft.imageDetectionListEmpty = action.state;\n        break;\n\n      case MY_DIET_DIARY_SHARE_REQUEST:\n        draft.diaryShareLoading = true;\n        draft.diaryShareDone = false;\n        draft.diaryShareError = null;\n        break;\n\n      case MY_DIET_DIARY_SHARE_SUCCESS:\n        draft.diaryShareLoading = false;\n        draft.diaryShareDone = true;\n        break;\n\n      case MY_DIET_DIARY_SHARE_FAILURE:\n        draft.diaryShareLoading = false;\n        draft.diaryShareError = action.error;\n        break;\n\n      case FOOD_LIST_REQUEST:\n        break;\n\n      case FOOD_LIST_SUCCESS:\n        draft.foods = [];\n        action.data.data.forEach(function (food) {\n          draft.foods.push(food.foodName);\n        });\n        break;\n\n      case FOOD_LIST_FAILURE:\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/JUN-D/Desktop/헬스케어/11_6/HELM/front/src/store/modules/myDiet.js"],"names":["produce","IMAGE_URL","initialState","myDietDetail","imagePath","diaryNo","diaryDate","mealTime","description","isShared","dietFindResList","weights","foods","dietDetailThumbnail","dietThumbnail","foodName","imageDetectionLoading","imageDetectionListEmpty","myDietDiaryList","myDietDiaryDailyInfo","myDietDiaryDailyInfoCopy","myDietDiaryDeleteLoading","myDietDiaryDeleteDone","myDietDiaryDeleteError","diaryShareLoading","diaryShareDone","diaryshareError","MY_DIET_IMAGE_REQUEST","MY_DIET_IMAGE_SUCCESS","MY_DIET_IMAGE_FAILURE","MY_DIET_REGISTER_REQUEST","MY_DIET_REGISTER_SUCCESS","MY_DIET_REGISTER_FAILURE","MY_DIET_DIARY_LIST_REQUEST","MY_DIET_DIARY_LIST_SUCCESS","MY_DIET_DIARY_LIST_FAILURE","MY_DIET_DIARY_DAILY_INFO_REQUEST","MY_DIET_DIARY_DAILY_INFO_SUCCESS","MY_DIET_DIARY_DAILY_INFO_FAILURE","MY_DIET_DETAIL_REQUEST","MY_DIET_DETAIL_SUCCESS","MY_DIET_DETAIL_FAILURE","MY_DIET_UPDATE_REQUEST","MY_DIET_UPDATE_SUCCESS","MY_DIET_UPDATE_FAILURE","MY_DIET_DIARY_DELETE_REQUEST","MY_DIET_DIARY_DELETE_SUCCESS","MY_DIET_DIARY_DELETE_FAILURE","MY_DIET_DIARY_SHARE_REQUEST","MY_DIET_DIARY_SHARE_SUCCESS","MY_DIET_DIARY_SHARE_FAILURE","FOOD_LIST_REQUEST","FOOD_LIST_SUCCESS","FOOD_LIST_FAILURE","SET_MY_DIET_WEIGHT","setmyDietWeight","state","type","SET_MY_DIET_DETAIL_IMAGEPATH","setMyDietDetailImagePath","SET_MY_DIET_DETAIL_THUMBNAIL","setDietDetailThumbnail","SET_FOOD_NAME","setFoodName","SET_FOOD_CHECK_BOX","setFoodCheckBox","SET_IMAGE_DETECTION_LIST_EMPTY","setImageDetectionListEmpty","reducer","action","draft","data","resultList","length","forEach","push","weight","error","index","food","diaryShareError"],"mappings":"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","sourcesContent":["import produce from \"immer\";\nimport { IMAGE_URL } from \"../../utils/https\";\n\nconst initialState = {\n  myDietDetail: {\n    imagePath: null,\n    diaryNo: \"\",\n    diaryDate: \"\",\n    mealTime: \"\",\n    description: \"\",\n    isShared: false,\n    dietFindResList: [],\n  },\n  weights: [100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600],\n  foods: [],\n  dietDetailThumbnail: null,\n  dietThumbnail: null,\n  imagePath: null,\n  mealTime: \"\",\n  diaryDate: \"\",\n  description: \"\",\n  foodName: [],\n  imageDetectionLoading: false,\n  imageDetectionListEmpty: false,\n  myDietDiaryList: [],\n  myDietDiaryDailyInfo: [],\n  myDietDiaryDailyInfoCopy: [],\n  // 식단 일지 삭제\n  myDietDiaryDeleteLoading: false,\n  myDietDiaryDeleteDone: false,\n  myDietDiaryDeleteError: null,\n  // 식단 일지\n  diaryShareLoading: false,\n  diaryShareDone: false,\n  diaryshareError: null,\n};\n\nexport const MY_DIET_IMAGE_REQUEST = \"MY_DIET_IMAGE_REQUEST\";\nexport const MY_DIET_IMAGE_SUCCESS = \"MY_DIET_IMAGE_SUCCESS\";\nexport const MY_DIET_IMAGE_FAILURE = \"MY_DIET_IMAGE_FAILURE\";\nexport const MY_DIET_REGISTER_REQUEST = \"MY_DIET_REGISTER_REQUEST\";\nexport const MY_DIET_REGISTER_SUCCESS = \"MY_DIET_REGISTER_SUCCESS\";\nexport const MY_DIET_REGISTER_FAILURE = \"MY_DIET_REGISTER_FAILURE\";\nexport const MY_DIET_DIARY_LIST_REQUEST = \"MY_DIET_DIARY_LIST_REQUEST\";\nexport const MY_DIET_DIARY_LIST_SUCCESS = \"MY_DIET_DIARY_LIST_SUCCESS\";\nexport const MY_DIET_DIARY_LIST_FAILURE = \"MY_DIET_DIARY_LIST_FAILURE\";\nexport const MY_DIET_DIARY_DAILY_INFO_REQUEST =\n  \"MY_DIET_DIARY_DAILY_INFO_REQUEST\";\nexport const MY_DIET_DIARY_DAILY_INFO_SUCCESS =\n  \"MY_DIET_DIARY_DAILY_INFO_SUCCESS\";\nexport const MY_DIET_DIARY_DAILY_INFO_FAILURE =\n  \"MY_DIET_DIARY_DAILY_INFO_FAILURE\";\nexport const MY_DIET_DETAIL_REQUEST = \"MY_DIET_DETAIL_REQUEST\";\nexport const MY_DIET_DETAIL_SUCCESS = \"MY_DIET_DETAIL_SUCCESS\";\nexport const MY_DIET_DETAIL_FAILURE = \"MY_DIET_DETAIL_FAILURE\";\nexport const MY_DIET_UPDATE_REQUEST = \"MY_DIET_UPDATE_REQUEST\";\nexport const MY_DIET_UPDATE_SUCCESS = \"MY_DIET_UPDATE_SUCCESS\";\nexport const MY_DIET_UPDATE_FAILURE = \"MY_DIET_UPDATE_FAILURE\";\nexport const MY_DIET_DIARY_DELETE_REQUEST = \"MY_DIET_DIARY_DELETE_REQUEST\";\nexport const MY_DIET_DIARY_DELETE_SUCCESS = \"MY_DIET_DIARY_DELETE_SUCCESS\";\nexport const MY_DIET_DIARY_DELETE_FAILURE = \"MY_DIET_DIARY_DELETE_FAILURE\";\nexport const MY_DIET_DIARY_SHARE_REQUEST = \"MY_DIET_DIARY_SHARE_REQUEST\";\nexport const MY_DIET_DIARY_SHARE_SUCCESS = \"MY_DIET_DIARY_SHARE_SUCCESS\";\nexport const MY_DIET_DIARY_SHARE_FAILURE = \"MY_DIET_DIARY_SHARE_REQUEST\";\nexport const FOOD_LIST_REQUEST = \"FOOD_LIST_REQUEST\";\nexport const FOOD_LIST_SUCCESS = \"FOOD_LIST_SUCCESS\";\nexport const FOOD_LIST_FAILURE = \"FOOD_LIST_FAILURE\";\n\nconst SET_MY_DIET_WEIGHT = \"SET_MY_DIET_WEIGHT\";\nexport const setmyDietWeight = (state) => ({\n  type: SET_MY_DIET_WEIGHT,\n  state,\n});\n\nconst SET_MY_DIET_DETAIL_IMAGEPATH = \"SET_MY_DIET_DETAIL_IMAGEPATH\";\nexport const setMyDietDetailImagePath = (state) => ({\n  type: SET_MY_DIET_DETAIL_IMAGEPATH,\n  state,\n});\n\nconst SET_MY_DIET_DETAIL_THUMBNAIL = \"SET_MY_DIET_DETAIL_THUMBNAIL\";\nexport const setDietDetailThumbnail = (state) => ({\n  type: SET_MY_DIET_DETAIL_THUMBNAIL,\n  state,\n});\n\nconst SET_FOOD_NAME = \"SET_FOOD_NAME\";\nexport const setFoodName = (state) => ({\n  type: SET_FOOD_NAME,\n  state,\n});\n\nconst SET_FOOD_CHECK_BOX = \"SET_FOOD_CHECK_BOX\";\nexport const setFoodCheckBox = (state) => ({\n  type: SET_FOOD_CHECK_BOX,\n  state,\n});\n\nconst SET_IMAGE_DETECTION_LIST_EMPTY = \"SET_IMAGE_DETECTION_LIST_EMPTY\";\nexport const setImageDetectionListEmpty = (state) => ({\n  type: SET_IMAGE_DETECTION_LIST_EMPTY,\n  state,\n});\n\nconst reducer = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case MY_DIET_IMAGE_REQUEST:\n        draft.imageDetectionLoading = true;\n        draft.imageDetectionListEmpty = false;\n        break;\n      case MY_DIET_IMAGE_SUCCESS:\n        draft.imageDetectionLoading = false;\n        if (action.data.data.resultList.length === 0)\n          draft.imageDetectionListEmpty = true;\n        draft.foodName = [];\n        action.data.data.resultList.forEach((foods) => {\n          draft.foodName.push({ foodName: foods, weight: 100 });\n        });\n        // console.log(action.data.data);\n        break;\n      case MY_DIET_IMAGE_FAILURE:\n        break;\n      case MY_DIET_REGISTER_REQUEST:\n        break;\n      case MY_DIET_REGISTER_SUCCESS:\n        draft.foodName = [];\n        break;\n      case MY_DIET_REGISTER_FAILURE:\n        break;\n      case MY_DIET_DIARY_LIST_REQUEST:\n        break;\n      case MY_DIET_DIARY_LIST_SUCCESS:\n        draft.myDietDiaryList = action.data;\n        break;\n      case MY_DIET_DIARY_LIST_FAILURE:\n        break;\n      case MY_DIET_DIARY_DAILY_INFO_REQUEST:\n        break;\n      case MY_DIET_DIARY_DAILY_INFO_SUCCESS:\n        draft.myDietDiaryDailyInfo = action.data;\n        break;\n      case MY_DIET_DIARY_DAILY_INFO_FAILURE:\n        break;\n      case MY_DIET_DETAIL_REQUEST:\n        break;\n      case MY_DIET_DETAIL_SUCCESS:\n        draft.myDietDetail.description = action.data.data.description;\n        draft.myDietDetail.diaryDate = action.data.data.diaryDate;\n        draft.myDietDetail.diaryNo = action.data.data.diaryNo;\n        draft.myDietDetail.imagePath = action.data.data.imagePath;\n        draft.myDietDetail.mealTime = action.data.data.mealTime;\n        draft.myDietDetail.dietFindResList = action.data.data.dietFindResList;\n        draft.dietDetailThumbnail = `${IMAGE_URL}${action.data.data.imagePath}`;\n        break;\n      case MY_DIET_DETAIL_FAILURE:\n        break;\n      case MY_DIET_UPDATE_REQUEST:\n        break;\n      case MY_DIET_UPDATE_SUCCESS:\n        draft.myDietDetail.description = action.data.data.description;\n        draft.myDietDetail.diaryDate = action.data.data.diaryDate;\n        draft.myDietDetail.diaryNo = action.data.data.diaryNo;\n        draft.myDietDetail.imagePath = action.data.data.imagePath;\n        draft.myDietDetail.mealTime = action.data.data.mealTime;\n        draft.myDietDetail.dietFindResList = action.data.data.dietFindResList;\n        draft.dietDetailThumbnail = `${IMAGE_URL}${action.data.data.imagePath}`;\n        break;\n      case MY_DIET_UPDATE_FAILURE:\n        break;\n      case MY_DIET_DIARY_DELETE_REQUEST:\n        draft.myDietDiaryDeleteLoading = true;\n        draft.myDietDiaryDeleteDone = false;\n        break;\n      case MY_DIET_DIARY_DELETE_SUCCESS:\n        draft.myDietDiaryDeleteLoading = false;\n        draft.myDietDiaryDeleteDone = true;\n        break;\n      case MY_DIET_DIARY_DELETE_FAILURE:\n        draft.myDietDiaryDeleteLoading = false;\n        draft.myDietDiaryDeleteError = action.error;\n        break;\n      case SET_MY_DIET_WEIGHT:\n        draft.foodName[action.state.index].weight = action.state.weight;\n        break;\n      case SET_MY_DIET_DETAIL_IMAGEPATH:\n        draft.myDietDetail.imagePath = action.state;\n        break;\n      case SET_MY_DIET_DETAIL_THUMBNAIL:\n        draft.dietDetailThumbnail = action.state;\n        break;\n      case SET_FOOD_NAME:\n        draft.foodName = [];\n        action.state.forEach((food) => {\n          draft.foodName.push({ foodName: food.foodName, weight: food.weight });\n        });\n        break;\n      case SET_FOOD_CHECK_BOX:\n        draft.foodName = [];\n        action.state.forEach((food) => {\n          draft.foodName.push({ foodName: food, weight: 100 });\n        });\n        break;\n      case SET_IMAGE_DETECTION_LIST_EMPTY:\n        draft.imageDetectionListEmpty = action.state;\n        break;\n      case MY_DIET_DIARY_SHARE_REQUEST:\n        draft.diaryShareLoading = true;\n        draft.diaryShareDone = false;\n        draft.diaryShareError = null;\n        break;\n      case MY_DIET_DIARY_SHARE_SUCCESS:\n        draft.diaryShareLoading = false;\n        draft.diaryShareDone = true;\n        break;\n      case MY_DIET_DIARY_SHARE_FAILURE:\n        draft.diaryShareLoading = false;\n        draft.diaryShareError = action.error;\n        break;\n      case FOOD_LIST_REQUEST:\n        break;\n      case FOOD_LIST_SUCCESS:\n        draft.foods = [];\n        action.data.data.forEach((food) => {\n          draft.foods.push(food.foodName);\n        });\n        break;\n      case FOOD_LIST_FAILURE:\n        break;\n      default:\n        break;\n    }\n  });\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}