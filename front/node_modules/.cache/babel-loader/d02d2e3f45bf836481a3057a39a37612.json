{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_2\\\\HELF-master\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadExerciseHistoryFindAll),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadExerciseHistoryFindAll),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadExerciseHistoryRegister),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadExerciseHistoryRegister),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(exerciseHistorySaga);\n\nimport { all, call, put, fork, takeLatest } from \"redux-saga/effects\";\nimport { exerciseHistoryFindAllAPI, exerciseHistoryRegisterAPI } from \"../apis/exerciseHistory\";\nimport { EXERCISE_HISTORY_FINDALL_REQUEST, EXERCISE_HISTORY_FINDALL_SUCCESS, EXERCISE_HISTORY_FINDALL_FAILURE, EXERCISE_HISTORY_REGISTER_REQUEST, EXERCISE_HISTORY_REGISTER_SUCCESS, EXERCISE_HISTORY_REGISTER_FAILURE } from \"../modules/exerciseHistory\";\nimport swal from \"sweetalert\"; // 예쁜 alert 창을 위해 사용\n// 운동 통계 조회\n\nfunction loadExerciseHistoryFindAll(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadExerciseHistoryFindAll$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(exerciseHistoryFindAllAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: EXERCISE_HISTORY_FINDALL_SUCCESS,\n            data: result\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: EXERCISE_HISTORY_FINDALL_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLoadExerciseHistoryFindAll() {\n  return _regeneratorRuntime.wrap(function watchLoadExerciseHistoryFindAll$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(EXERCISE_HISTORY_FINDALL_REQUEST, loadExerciseHistoryFindAll);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} // 운동 통계 등록\n\n\nfunction loadExerciseHistoryRegister(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadExerciseHistoryRegister$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n\n          if (!(action.data.count > 0)) {\n            _context3.next = 7;\n            break;\n          }\n\n          _context3.next = 4;\n          return call(exerciseHistoryRegisterAPI, action.data);\n\n        case 4:\n          result = _context3.sent;\n          _context3.next = 7;\n          return put({\n            type: EXERCISE_HISTORY_REGISTER_SUCCESS,\n            data: result\n          });\n\n        case 7:\n          swal(\"운동 완료\", \"  \", \"success\", {\n            buttons: false,\n            timer: 1800\n          });\n          document.location.href = \"/exercisesetting\"; // }\n\n          _context3.next = 15;\n          break;\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 15;\n          return put({\n            type: EXERCISE_HISTORY_REGISTER_FAILURE\n          });\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 11]]);\n}\n\nfunction watchLoadExerciseHistoryRegister() {\n  return _regeneratorRuntime.wrap(function watchLoadExerciseHistoryRegister$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(EXERCISE_HISTORY_REGISTER_REQUEST, loadExerciseHistoryRegister);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function exerciseHistorySaga() {\n  return _regeneratorRuntime.wrap(function exerciseHistorySaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchLoadExerciseHistoryFindAll), fork(watchLoadExerciseHistoryRegister)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["C:/Users/JUN-D/Desktop/헬스케어/11_2/HELF-master/front/src/store/sagas/exerciseHistory.js"],"names":["loadExerciseHistoryFindAll","watchLoadExerciseHistoryFindAll","loadExerciseHistoryRegister","watchLoadExerciseHistoryRegister","exerciseHistorySaga","all","call","put","fork","takeLatest","exerciseHistoryFindAllAPI","exerciseHistoryRegisterAPI","EXERCISE_HISTORY_FINDALL_REQUEST","EXERCISE_HISTORY_FINDALL_SUCCESS","EXERCISE_HISTORY_FINDALL_FAILURE","EXERCISE_HISTORY_REGISTER_REQUEST","EXERCISE_HISTORY_REGISTER_SUCCESS","EXERCISE_HISTORY_REGISTER_FAILURE","swal","action","data","result","type","count","buttons","timer","document","location","href"],"mappings":";;oDAiBUA,0B;qDASAC,+B;qDAQAC,2B;qDAiBAC,gC;qDAOeC,mB;;AA1DzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,SACEC,yBADF,EAEEC,0BAFF,QAGO,yBAHP;AAIA,SACEC,gCADF,EAEEC,gCAFF,EAGEC,gCAHF,EAIEC,iCAJF,EAKEC,iCALF,EAMEC,iCANF,QAOO,4BAPP;AASA,OAAOC,IAAP,MAAiB,YAAjB,C,CAA+B;AAE/B;;AACA,SAAUlB,0BAAV,CAAqCmB,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMb,IAAI,CAACI,yBAAD,EAA4BS,MAAM,CAACC,IAAnC,CAAV;;AAFnB;AAEUC,UAAAA,MAFV;AAAA;AAGI,iBAAMd,GAAG,CAAC;AAAEe,YAAAA,IAAI,EAAET,gCAAR;AAA0CO,YAAAA,IAAI,EAAEC;AAAhD,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKI,iBAAMd,GAAG,CAAC;AAAEe,YAAAA,IAAI,EAAER;AAAR,WAAD,CAAT;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SAAUb,+BAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMQ,UAAU,CACdG,gCADc,EAEdZ,0BAFc,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAOA;;;AACA,SAAUE,2BAAV,CAAsCiB,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAEOA,MAAM,CAACC,IAAP,CAAYG,KAAZ,GAAoB,CAF3B;AAAA;AAAA;AAAA;;AAAA;AAGqB,iBAAMjB,IAAI,CAACK,0BAAD,EAA6BQ,MAAM,CAACC,IAApC,CAAV;;AAHrB;AAGYC,UAAAA,MAHZ;AAAA;AAIM,iBAAMd,GAAG,CAAC;AAAEe,YAAAA,IAAI,EAAEN,iCAAR;AAA2CI,YAAAA,IAAI,EAAEC;AAAjD,WAAD,CAAT;;AAJN;AAMIH,UAAAA,IAAI,CAAC,OAAD,EAAU,IAAV,EAAgB,SAAhB,EAA2B;AAC7BM,YAAAA,OAAO,EAAE,KADoB;AAE7BC,YAAAA,KAAK,EAAE;AAFsB,WAA3B,CAAJ;AAIAC,UAAAA,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,GAAyB,kBAAzB,CAVJ,CAWI;;AAXJ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAaI,iBAAMrB,GAAG,CAAC;AAAEe,YAAAA,IAAI,EAAEL;AAAR,WAAD,CAAT;;AAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUd,gCAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMM,UAAU,CACdM,iCADc,EAEdb,2BAFc,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAe,SAAUE,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CACRG,IAAI,CAACP,+BAAD,CADI,EAERO,IAAI,CAACL,gCAAD,CAFI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, call, put, fork, takeLatest } from \"redux-saga/effects\";\nimport {\n  exerciseHistoryFindAllAPI,\n  exerciseHistoryRegisterAPI,\n} from \"../apis/exerciseHistory\";\nimport {\n  EXERCISE_HISTORY_FINDALL_REQUEST,\n  EXERCISE_HISTORY_FINDALL_SUCCESS,\n  EXERCISE_HISTORY_FINDALL_FAILURE,\n  EXERCISE_HISTORY_REGISTER_REQUEST,\n  EXERCISE_HISTORY_REGISTER_SUCCESS,\n  EXERCISE_HISTORY_REGISTER_FAILURE,\n} from \"../modules/exerciseHistory\";\n\nimport swal from \"sweetalert\"; // 예쁜 alert 창을 위해 사용\n\n// 운동 통계 조회\nfunction* loadExerciseHistoryFindAll(action) {\n  try {\n    const result = yield call(exerciseHistoryFindAllAPI, action.data);\n    yield put({ type: EXERCISE_HISTORY_FINDALL_SUCCESS, data: result });\n  } catch (error) {\n    yield put({ type: EXERCISE_HISTORY_FINDALL_FAILURE });\n  }\n}\n\nfunction* watchLoadExerciseHistoryFindAll() {\n  yield takeLatest(\n    EXERCISE_HISTORY_FINDALL_REQUEST,\n    loadExerciseHistoryFindAll\n  );\n}\n\n// 운동 통계 등록\nfunction* loadExerciseHistoryRegister(action) {\n  try {\n    if(action.data.count > 0) {\n      const result = yield call(exerciseHistoryRegisterAPI, action.data);\n      yield put({ type: EXERCISE_HISTORY_REGISTER_SUCCESS, data: result });\n    }\n    swal(\"운동 완료\", \"  \", \"success\", {\n      buttons: false,\n      timer: 1800,\n    });\n    document.location.href = \"/exercisesetting\";\n    // }\n  } catch (error) {\n    yield put({ type: EXERCISE_HISTORY_REGISTER_FAILURE });\n  }\n}\n\nfunction* watchLoadExerciseHistoryRegister() {\n  yield takeLatest(\n    EXERCISE_HISTORY_REGISTER_REQUEST,\n    loadExerciseHistoryRegister\n  );\n}\n\nexport default function* exerciseHistorySaga() {\n  yield all([\n    fork(watchLoadExerciseHistoryFindAll),\n    fork(watchLoadExerciseHistoryRegister),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}