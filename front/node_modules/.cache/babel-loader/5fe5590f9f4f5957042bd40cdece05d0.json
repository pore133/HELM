{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_2\\\\HELF-master\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_2\\\\HELF-master\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_2\\\\HELF-master\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_2\\\\HELF-master\\\\front\\\\src\\\\components\\\\Exercise\\\\ExerciseRoom.js\";\n// import * as tf from '@tensorflow/tfjs';\nimport * as tmPose from '@teachablemachine/pose';\nimport React, { useState, useEffect } from 'react';\nimport './ExerciseRoom.css';\nimport $ from 'jquery';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { EXERCISE_HISTORY_REGISTER_REQUEST } from '../../store/modules/exerciseHistory';\nimport dayjs from 'dayjs';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { Row, Col } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport arrowImage from '../../assets/images/exerciseTutorial/arrow_down.png';\nvar style = {\n  position: 'absolute',\n  textAlign: 'center',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 350,\n  height: 300,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  borderRadius: '20px',\n  p: 4\n};\nexport default function ExerciseRoom() {\n  var dispatch = useDispatch();\n\n  var _useParams = useParams(),\n      breakTime = _useParams.breakTime;\n\n  var _useSelector = useSelector(function (state) {\n    return state.exerciseHistory;\n  }),\n      exercise = _useSelector.exercise;\n\n  var now = new Date(); // 현재 날짜 및 시간\n\n  var ExerciseTypeList = ['벤트 오버 로우', '덤벨컬', '프론트 레이즈', '런지', // '오버 헤드 프레스',\n  // '푸시업',\n  '사이드 레터럴 레이즈', '스쿼트' // '스탠딩 사이드 크런치',\n  ];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      URL = _useState2[0],\n      setURL = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentSet = _useState4[0],\n      setCurrentSet = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentCount = _useState6[0],\n      setCurrentCount = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pageLoading = _useState8[0],\n      setPageLoading = _useState8[1]; // 모달창 관리 \n\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      open = _useState10[0],\n      setOpen = _useState10[1];\n\n  var handleOpen = function handleOpen() {\n    return setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    return setOpen(false);\n  };\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      timer = _useState12[0],\n      setTimer = _useState12[1];\n\n  var modelURL = URL + 'model.json';\n  var metadataURL = URL + 'metadata.json';\n  var model, webcam, ctx, labelContainer, maxPredictions; // 운동별 설명 이미지 선택\n  // '../../assets/images/exerciseTutorial/1/0.png'\n\n  var beforeImageURL = require('../../assets/images/exerciseTutorial/' + exercise.type + '/0.png');\n\n  var afterImageURL = require('../../assets/images/exerciseTutorial/' + exercise.type + '/1.png');\n\n  useEffect(function () {\n    switch (exercise.type) {\n      case 1:\n        // BentOverRow\n        // test : 왼 손 들기\n        // setURL('https://teachablemachine.withgoogle.com/models/tNxgspb7K/');\n        setURL('https://teachablemachine.withgoogle.com/models/8htc5Fdlu/');\n        break;\n\n      case 2:\n        // DumbbellCurl\n        setURL('https://teachablemachine.withgoogle.com/models/qvMroKavg/');\n        break;\n\n      case 3:\n        // FrontRaise\n        setURL('https://teachablemachine.withgoogle.com/models/aKluCaORU/');\n        break;\n\n      case 4:\n        // Lunge\n        setURL('https://teachablemachine.withgoogle.com/models/7zoTQArlc/');\n        break;\n      // case 5: // OverheadPress\n      //   setURL('https://teachablemachine.withgoogle.com/models/QoQ4ty5qS/');\n      //   break;\n      // case 6: // PushUp\n      //   setURL('https://teachablemachine.withgoogle.com/models/R6Q1RWNar/');\n      //   break;\n\n      case 5:\n        // SideLateralRaise\n        setURL('https://teachablemachine.withgoogle.com/models/2GMC5JVkX/');\n        break;\n\n      case 6:\n        // Squat\n        setURL('https://teachablemachine.withgoogle.com/models/050JkD2Z0/');\n        break;\n      // case 9: // StandingSideCrunch\n      //   setURL('https://teachablemachine.withgoogle.com/models/S9Mpp7iGf/');\n      //   break;\n    }\n  }, []);\n  useEffect(function () {\n    modelURL = URL + 'model.json';\n    metadataURL = URL + 'metadata.json';\n    console.log(modelURL, metadataURL);\n\n    if (URL !== '') {\n      init();\n    }\n  }, [URL]);\n\n  function init() {\n    return _init.apply(this, arguments);\n  } // async function stopVideo() {\n  // }\n\n\n  function _init() {\n    _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var size, flip, loading, canvas;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return tmPose.load(modelURL, metadataURL);\n\n            case 2:\n              model = _context.sent;\n              maxPredictions = model.getTotalClasses(); // Convenience function to setup a webcam\n\n              size = 500;\n              flip = true; // whether to flip the webcam\n\n              loading = false;\n              webcam = new tmPose.Webcam(size, size, flip); // width, height, flip\n\n              _context.next = 10;\n              return webcam.setup();\n\n            case 10:\n              // request access to the webcam\n              console.log(webcam);\n              _context.next = 13;\n              return webcam.play();\n\n            case 13:\n              // 화면이 로딩되었다면 아이콘 제거\n              loading = true;\n              setPageLoading(loading);\n              window.requestAnimationFrame(loop); // append/get elements to the DOM\n\n              canvas = document.getElementById('canvas');\n              canvas.width = size;\n              canvas.height = size;\n              ctx = canvas.getContext('2d'); // labelContainer = document.getElementById('label-container');\n              // for (let i = 0; i < maxPredictions; i++) {\n              //   // and class labels\n              //   labelContainer.appendChild(document.createElement('div'));\n              // }\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _init.apply(this, arguments);\n  }\n\n  function loop(_x) {\n    return _loop.apply(this, arguments);\n  }\n\n  function _loop() {\n    _loop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(timestamp) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              webcam.update(); // update the webcam frame\n\n              _context2.next = 3;\n              return predict();\n\n            case 3:\n              window.requestAnimationFrame(loop);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _loop.apply(this, arguments);\n  }\n\n  var angle = Math.floor(360 / exercise.time * 10) / 10;\n  var progress = 360;\n  var status = 'wait';\n  var countTime = 0;\n  var countTotalTime = 0;\n  var countSet = 1;\n  var soundURL = '';\n\n  function predict() {\n    return _predict.apply(this, arguments);\n  }\n\n  function _predict() {\n    _predict = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _yield$model$estimate, pose, posenetOutput, prediction, audio, timer, timerInterval;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return model.estimatePose(webcam.canvas);\n\n            case 2:\n              _yield$model$estimate = _context3.sent;\n              pose = _yield$model$estimate.pose;\n              posenetOutput = _yield$model$estimate.posenetOutput;\n              _context3.next = 7;\n              return model.predict(posenetOutput);\n\n            case 7:\n              prediction = _context3.sent;\n\n              if (prediction[0].probability.toFixed(2) > 0.9) {\n                if (status == 'action') {\n                  countTime++;\n                  countTotalTime++;\n                  setCurrentCount(countTotalTime); // 카운팅 소리 재생\n\n                  soundURL = require('../../assets/soundEffects/countSound/ddiring2.mp3');\n                  audio = new Audio(soundURL);\n                  audio.volume = 0.8;\n                  audio.play();\n                  console.log(status, countTime, soundURL);\n                  progress = progress - angle;\n\n                  if (progress < 0) {\n                    progress = 360 - angle;\n                  }\n\n                  $('.progress').css('stroke-dashoffset', progress);\n                  $('#counter').html(countTime);\n                  console.log(progress, angle);\n\n                  if (countTotalTime === exercise.set * exercise.time) {\n                    handleExercise(countTotalTime);\n                  } // 1세트가 끝난 경우\n\n\n                  if (countTime.toString() === exercise.time && countTotalTime < exercise.set * exercise.time) {\n                    // 세트 수 증가\n                    countSet++;\n                    setCurrentSet(countSet); // 세트 당 카운트 수 reset\n\n                    countTime = 0; // breaktimer 가동\n\n                    if (breakTime > 0) {\n                      timer = breakTime;\n                      setTimer(timer);\n                      setTimeout(function () {\n                        webcam.pause();\n                      }, 500); // 화면 정지\n\n                      handleOpen(); // 모달창 on\n\n                      timerInterval = setInterval(function () {\n                        if (timer == 0) clearInterval(timerInterval);\n                        timer--;\n                        setTimer(timer);\n                      }, 1000);\n                      setTimeout(function () {\n                        handleClose();\n                      }, breakTime * 1000); // 모달 close     \n\n                      setTimeout(function () {\n                        webcam.play();\n                      }, breakTime * 1000);\n                    }\n                  }\n                }\n\n                status = 'wait';\n              } else if (prediction[1].probability.toFixed(2) > 0.9) {\n                status = 'action';\n              } // for (let i = 0; i < maxPredictions; i++) {\n              //   const classPrediction =\n              //     prediction[i].className + ': ' + prediction[i].probability.toFixed(2);\n              //   labelContainer.childNodes[i].innerHTML = classPrediction;\n              // }\n              // finally draw the poses\n\n\n              drawPose(pose);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _predict.apply(this, arguments);\n  }\n\n  function drawPose(pose) {\n    if (webcam.canvas) {\n      ctx.drawImage(webcam.canvas, 0, 0); // draw the keypoints and skeleton\n\n      if (pose) {\n        var minPartConfidence = 0.5;\n        tmPose.drawKeypoints(pose.keypoints, minPartConfidence, ctx);\n        tmPose.drawSkeleton(pose.keypoints, minPartConfidence, ctx);\n      }\n    }\n  }\n\n  var handleExercise = function handleExercise(cnt) {\n    console.log(\"🤞🤞🤞🤞🤞🤞🤞 \", cnt);\n    dispatch({\n      type: EXERCISE_HISTORY_REGISTER_REQUEST,\n      data: {\n        count: cnt,\n        date: dayjs(now).format('YYYY-MM-DD HH:mm:ss'),\n        exerciseNo: exercise.type\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"myExercise\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 5\n    }\n  }, pageLoading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menuTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, \"MY\\uC6B4\\uB3D9\"), /*#__PURE__*/React.createElement(Row, {\n    class: \"boxWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    md: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"imageWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"exerciseTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, \"\\uD83C\\uDFCB\\uFE0F\\u200D\\u2640\\uFE0F\\uC6B4\\uB3D9 \\uBC29\\uBC95\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: beforeImageURL,\n    class: \"exerciseImage\",\n    alt: \"\\uC6B4\\uB3D9 \\uC2DC\\uC791 \\uB3D9\\uC791\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"img\", {\n    src: arrowImage,\n    class: \"arrowImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: afterImageURL,\n    class: \"exerciseImage\",\n    alt: \"\\uC6B4\\uB3D9 \\uB05D \\uB3D9\\uC791\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: \"5\",\n    class: \"leftBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"leftBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    id: \"canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"exerciseInfo fontBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"exerciseName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, ExerciseTypeList[exercise.type - 1]), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }, \"\\uCD1D \\uC138\\uD2B8 : \", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"fontNormal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 27\n    }\n  }, exercise.set)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }, \"\\uC138\\uD2B8\\uB2F9 \\uD69F\\uC218 : \", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"fontNormal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 29\n    }\n  }, exercise.time))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"timeInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"frame\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"headline fontBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 19\n    }\n  }, \"Counter\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"currentSet fontNormal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 19\n    }\n  }, currentSet, \" \\uC138\\uD2B8\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"circle-big\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"counter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 23\n    }\n  }, \"0\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 23\n    }\n  }, \"\\uAC1C\")), /*#__PURE__*/React.createElement(\"svg\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    class: \"bg\",\n    cx: \"57\",\n    cy: \"57\",\n    r: \"52\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    class: \"progress\",\n    cx: \"57\",\n    cy: \"57\",\n    r: \"52\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 23\n    }\n  }))))))), /*#__PURE__*/React.createElement(Col, {\n    md: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"buttonWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    class: \"exitButton\",\n    onClick: function onClick() {\n      return handleExercise(currentCount);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  }, \"\\uC885\\uB8CC\")), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"modal-modal-title\",\n    \"aria-describedby\": \"modal-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    class: \"fontNormal\",\n    style: {\n      marginTop: '20px'\n    },\n    id: \"modal-modal-title\",\n    variant: \"h6\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  }, \"\\uC26C\\uB294 \\uC2DC\\uAC04 \\uC885\\uB8CC\\uAE4C\\uC9C0\"), /*#__PURE__*/React.createElement(Typography, {\n    class: \"fontBold\",\n    style: {\n      fontSize: '70px',\n      marginTop: '30px'\n    },\n    id: \"modal-modal-description\",\n    sx: {\n      mt: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  }, timer, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"fontNormal\",\n    style: {\n      fontSize: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 25\n    }\n  }, \"\\uCD08\"))))) : /*#__PURE__*/React.createElement(\"div\", {\n    class: \"loadingWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/JUN-D/Desktop/헬스케어/11_2/HELF-master/front/src/components/Exercise/ExerciseRoom.js"],"names":["tmPose","React","useState","useEffect","$","useDispatch","useSelector","EXERCISE_HISTORY_REGISTER_REQUEST","dayjs","Box","Button","Typography","Modal","Row","Col","useParams","arrowImage","style","position","textAlign","top","left","transform","width","height","bgcolor","boxShadow","borderRadius","p","ExerciseRoom","dispatch","breakTime","state","exerciseHistory","exercise","now","Date","ExerciseTypeList","URL","setURL","currentSet","setCurrentSet","currentCount","setCurrentCount","pageLoading","setPageLoading","open","setOpen","handleOpen","handleClose","timer","setTimer","modelURL","metadataURL","model","webcam","ctx","labelContainer","maxPredictions","beforeImageURL","require","type","afterImageURL","console","log","init","load","getTotalClasses","size","flip","loading","Webcam","setup","play","window","requestAnimationFrame","loop","canvas","document","getElementById","getContext","timestamp","update","predict","angle","Math","floor","time","progress","status","countTime","countTotalTime","countSet","soundURL","estimatePose","pose","posenetOutput","prediction","probability","toFixed","audio","Audio","volume","css","html","set","handleExercise","toString","setTimeout","pause","timerInterval","setInterval","clearInterval","drawPose","drawImage","minPartConfidence","drawKeypoints","keypoints","drawSkeleton","cnt","data","count","date","format","exerciseNo","marginTop","fontSize","mt"],"mappings":";;;;AAAA;AACA,OAAO,KAAKA,MAAZ,MAAwB,wBAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iCAAT,QAAkD,qCAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,qDAAvB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAE,UADE;AAEZC,EAAAA,SAAS,EAAE,QAFC;AAGZC,EAAAA,GAAG,EAAE,KAHO;AAIZC,EAAAA,IAAI,EAAE,KAJM;AAKZC,EAAAA,SAAS,EAAE,uBALC;AAMZC,EAAAA,KAAK,EAAE,GANK;AAOZC,EAAAA,MAAM,EAAE,GAPI;AAQZC,EAAAA,OAAO,EAAE,kBARG;AASZC,EAAAA,SAAS,EAAE,EATC;AAUZC,EAAAA,YAAY,EAAE,MAVF;AAWZC,EAAAA,CAAC,EAAE;AAXS,CAAd;AAcA,eAAe,SAASC,YAAT,GAAwB;AACrC,MAAMC,QAAQ,GAAGzB,WAAW,EAA5B;;AADqC,mBAEfU,SAAS,EAFM;AAAA,MAE7BgB,SAF6B,cAE7BA,SAF6B;;AAAA,qBAGhBzB,WAAW,CAAC,UAAC0B,KAAD;AAAA,WAAWA,KAAK,CAACC,eAAjB;AAAA,GAAD,CAHK;AAAA,MAG7BC,QAH6B,gBAG7BA,QAH6B;;AAIrC,MAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ,CAJqC,CAIb;;AAExB,MAAMC,gBAAgB,GAAG,CACvB,UADuB,EAEvB,KAFuB,EAGvB,SAHuB,EAIvB,IAJuB,EAKvB;AACA;AACA,eAPuB,EAQvB,KARuB,CASvB;AATuB,GAAzB;;AANqC,kBAkBbnC,QAAQ,CAAC,EAAD,CAlBK;AAAA;AAAA,MAkB7BoC,GAlB6B;AAAA,MAkBxBC,MAlBwB;;AAAA,mBAmBCrC,QAAQ,CAAC,CAAD,CAnBT;AAAA;AAAA,MAmB7BsC,UAnB6B;AAAA,MAmBjBC,aAnBiB;;AAAA,mBAoBKvC,QAAQ,CAAC,CAAD,CApBb;AAAA;AAAA,MAoB7BwC,YApB6B;AAAA,MAoBfC,eApBe;;AAAA,mBAqBGzC,QAAQ,CAAC,KAAD,CArBX;AAAA;AAAA,MAqB7B0C,WArB6B;AAAA,MAqBhBC,cArBgB,kBAuBrC;;;AAvBqC,mBAwBX3C,QAAQ,CAAC,KAAD,CAxBG;AAAA;AAAA,MAwB7B4C,IAxB6B;AAAA,MAwBvBC,OAxBuB;;AAyBrC,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,WAAMD,OAAO,CAAC,IAAD,CAAb;AAAA,GAAnB;;AACA,MAAME,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMF,OAAO,CAAC,KAAD,CAAb;AAAA,GAApB;;AA1BqC,oBA2BT7C,QAAQ,CAAC,CAAD,CA3BC;AAAA;AAAA,MA2B7BgD,KA3B6B;AAAA,MA2BtBC,QA3BsB;;AA6BrC,MAAIC,QAAQ,GAAGd,GAAG,GAAG,YAArB;AACA,MAAIe,WAAW,GAAGf,GAAG,GAAG,eAAxB;AACA,MAAIgB,KAAJ,EAAWC,MAAX,EAAmBC,GAAnB,EAAwBC,cAAxB,EAAwCC,cAAxC,CA/BqC,CAiCrC;AACA;;AACA,MAAMC,cAAc,GAAGC,OAAO,CAAC,0CAA0C1B,QAAQ,CAAC2B,IAAnD,GAA0D,QAA3D,CAA9B;;AACA,MAAMC,aAAa,GAAGF,OAAO,CAAC,0CAA0C1B,QAAQ,CAAC2B,IAAnD,GAA0D,QAA3D,CAA7B;;AAEA1D,EAAAA,SAAS,CAAC,YAAM;AACd,YAAQ+B,QAAQ,CAAC2B,IAAjB;AACE,WAAK,CAAL;AAAQ;AACN;AACA;AAEAtB,QAAAA,MAAM,CAAC,2DAAD,CAAN;AACA;;AACF,WAAK,CAAL;AAAQ;AACNA,QAAAA,MAAM,CAAC,2DAAD,CAAN;AACA;;AACF,WAAK,CAAL;AAAQ;AACNA,QAAAA,MAAM,CAAC,2DAAD,CAAN;AACA;;AACF,WAAK,CAAL;AAAQ;AACNA,QAAAA,MAAM,CAAC,2DAAD,CAAN;AACA;AACF;AACA;AACA;AACA;AACA;AACA;;AACA,WAAK,CAAL;AAAQ;AACNA,QAAAA,MAAM,CAAC,2DAAD,CAAN;AACA;;AACF,WAAK,CAAL;AAAQ;AACNA,QAAAA,MAAM,CAAC,2DAAD,CAAN;AACA;AACF;AACA;AACA;AA9BF;AAgCD,GAjCQ,EAiCN,EAjCM,CAAT;AAmCApC,EAAAA,SAAS,CAAC,YAAM;AACdiD,IAAAA,QAAQ,GAAGd,GAAG,GAAG,YAAjB;AACAe,IAAAA,WAAW,GAAGf,GAAG,GAAG,eAApB;AACAyB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ,EAAsBC,WAAtB;;AACA,QAAIf,GAAG,KAAK,EAAZ,EAAgB;AACd2B,MAAAA,IAAI;AACL;AACF,GAPQ,EAON,CAAC3B,GAAD,CAPM,CAAT;;AAzEqC,WAmFtB2B,IAnFsB;AAAA;AAAA,IAuHrC;AACA;;;AAxHqC;AAAA,qEAmFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAQgBjE,MAAM,CAACkE,IAAP,CAAYd,QAAZ,EAAsBC,WAAtB,CARhB;;AAAA;AAQEC,cAAAA,KARF;AASEI,cAAAA,cAAc,GAAGJ,KAAK,CAACa,eAAN,EAAjB,CATF,CAUE;;AACMC,cAAAA,IAXR,GAWe,GAXf;AAYQC,cAAAA,IAZR,GAYe,IAZf,EAYqB;;AACfC,cAAAA,OAbN,GAagB,KAbhB;AAcEf,cAAAA,MAAM,GAAG,IAAIvD,MAAM,CAACuE,MAAX,CAAkBH,IAAlB,EAAwBA,IAAxB,EAA8BC,IAA9B,CAAT,CAdF,CAcgD;;AAdhD;AAAA,qBAeQd,MAAM,CAACiB,KAAP,EAfR;;AAAA;AAewB;AACtBT,cAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AAhBF;AAAA,qBAiBQA,MAAM,CAACkB,IAAP,EAjBR;;AAAA;AAmBE;AACAH,cAAAA,OAAO,GAAG,IAAV;AACAzB,cAAAA,cAAc,CAACyB,OAAD,CAAd;AAEAI,cAAAA,MAAM,CAACC,qBAAP,CAA6BC,IAA7B,EAvBF,CAwBE;;AACMC,cAAAA,MAzBR,GAyBiBC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAzBjB;AA0BEF,cAAAA,MAAM,CAACtD,KAAP,GAAe6C,IAAf;AACAS,cAAAA,MAAM,CAACrD,MAAP,GAAgB4C,IAAhB;AACAZ,cAAAA,GAAG,GAAGqB,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAN,CA5BF,CA6BE;AACA;AACA;AACA;AACA;;AAjCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAnFqC;AAAA;AAAA;;AAAA,WA0HtBJ,IA1HsB;AAAA;AAAA;;AAAA;AAAA,qEA0HrC,kBAAoBK,SAApB;AAAA;AAAA;AAAA;AAAA;AACE1B,cAAAA,MAAM,CAAC2B,MAAP,GADF,CACmB;;AADnB;AAAA,qBAEQC,OAAO,EAFf;;AAAA;AAGET,cAAAA,MAAM,CAACC,qBAAP,CAA6BC,IAA7B;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA1HqC;AAAA;AAAA;;AAgIrC,MAAIQ,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAY,MAAMpD,QAAQ,CAACqD,IAAhB,GAAwB,EAAnC,IAAyC,EAArD;AACA,MAAIC,QAAQ,GAAG,GAAf;AACA,MAAIC,MAAM,GAAG,MAAb;AACA,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAIC,cAAc,GAAG,CAArB;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,QAAQ,GAAG,EAAf;;AAtIqC,WAwItBV,OAxIsB;AAAA;AAAA;;AAAA;AAAA,wEAwIrC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGwC7B,KAAK,CAACwC,YAAN,CAAmBvC,MAAM,CAACsB,MAA1B,CAHxC;;AAAA;AAAA;AAGUkB,cAAAA,IAHV,yBAGUA,IAHV;AAGgBC,cAAAA,aAHhB,yBAGgBA,aAHhB;AAAA;AAAA,qBAK2B1C,KAAK,CAAC6B,OAAN,CAAca,aAAd,CAL3B;;AAAA;AAKQC,cAAAA,UALR;;AAOE,kBAAIA,UAAU,CAAC,CAAD,CAAV,CAAcC,WAAd,CAA0BC,OAA1B,CAAkC,CAAlC,IAAuC,GAA3C,EAAgD;AAC9C,oBAAIV,MAAM,IAAI,QAAd,EAAwB;AACtBC,kBAAAA,SAAS;AACTC,kBAAAA,cAAc;AACdhD,kBAAAA,eAAe,CAACgD,cAAD,CAAf,CAHsB,CAKtB;;AACAE,kBAAAA,QAAQ,GAAGjC,OAAO,CAAC,mDAAD,CAAlB;AACIwC,kBAAAA,KAPkB,GAOV,IAAIC,KAAJ,CAAUR,QAAV,CAPU;AAQtBO,kBAAAA,KAAK,CAACE,MAAN,GAAe,GAAf;AACAF,kBAAAA,KAAK,CAAC3B,IAAN;AAEAV,kBAAAA,OAAO,CAACC,GAAR,CAAYyB,MAAZ,EAAoBC,SAApB,EAA+BG,QAA/B;AACAL,kBAAAA,QAAQ,GAAGA,QAAQ,GAAGJ,KAAtB;;AACA,sBAAII,QAAQ,GAAG,CAAf,EAAkB;AAChBA,oBAAAA,QAAQ,GAAG,MAAMJ,KAAjB;AACD;;AACDhF,kBAAAA,CAAC,CAAC,WAAD,CAAD,CAAemG,GAAf,CAAmB,mBAAnB,EAAwCf,QAAxC;AACApF,kBAAAA,CAAC,CAAC,UAAD,CAAD,CAAcoG,IAAd,CAAmBd,SAAnB;AACA3B,kBAAAA,OAAO,CAACC,GAAR,CAAYwB,QAAZ,EAAsBJ,KAAtB;;AAEA,sBAAIO,cAAc,KAAKzD,QAAQ,CAACuE,GAAT,GAAevE,QAAQ,CAACqD,IAA/C,EAAqD;AACnDmB,oBAAAA,cAAc,CAACf,cAAD,CAAd;AACD,mBAtBqB,CAwBtB;;;AACA,sBAAID,SAAS,CAACiB,QAAV,OAAyBzE,QAAQ,CAACqD,IAAlC,IAA0CI,cAAc,GAAGzD,QAAQ,CAACuE,GAAT,GAAevE,QAAQ,CAACqD,IAAvF,EAA6F;AAC3F;AACAK,oBAAAA,QAAQ;AACRnD,oBAAAA,aAAa,CAACmD,QAAD,CAAb,CAH2F,CAK3F;;AACAF,oBAAAA,SAAS,GAAG,CAAZ,CAN2F,CAQ3F;;AACA,wBAAG3D,SAAS,GAAC,CAAb,EAAgB;AACVmB,sBAAAA,KADU,GACFnB,SADE;AAEdoB,sBAAAA,QAAQ,CAACD,KAAD,CAAR;AACA0D,sBAAAA,UAAU,CAAC,YAAM;AAAErD,wBAAAA,MAAM,CAACsD,KAAP;AAAgB,uBAAzB,EAA2B,GAA3B,CAAV,CAHc,CAG8B;;AAC5C7D,sBAAAA,UAAU,GAJI,CAIA;;AAEV8D,sBAAAA,aANU,GAMMC,WAAW,CAAC,YAAM;AACpC,4BAAG7D,KAAK,IAAE,CAAV,EAAa8D,aAAa,CAACF,aAAD,CAAb;AACb5D,wBAAAA,KAAK;AACLC,wBAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,uBAJ8B,EAI5B,IAJ4B,CANjB;AAWd0D,sBAAAA,UAAU,CAAC,YAAM;AAAE3D,wBAAAA,WAAW;AAAI,uBAAxB,EAA0BlB,SAAS,GAAC,IAApC,CAAV,CAXc,CAW4C;;AAC1D6E,sBAAAA,UAAU,CAAC,YAAM;AAAErD,wBAAAA,MAAM,CAACkB,IAAP;AAAe,uBAAxB,EAA0B1C,SAAS,GAAC,IAApC,CAAV;AACD;AACF;AAGF;;AACD0D,gBAAAA,MAAM,GAAG,MAAT;AACD,eAtDD,MAsDO,IAAIQ,UAAU,CAAC,CAAD,CAAV,CAAcC,WAAd,CAA0BC,OAA1B,CAAkC,CAAlC,IAAuC,GAA3C,EAAgD;AACrDV,gBAAAA,MAAM,GAAG,QAAT;AACD,eA/DH,CAiEE;AACA;AACA;AACA;AACA;AAEA;;;AACAwB,cAAAA,QAAQ,CAAClB,IAAD,CAAR;;AAxEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxIqC;AAAA;AAAA;;AAmNrC,WAASkB,QAAT,CAAkBlB,IAAlB,EAAwB;AACtB,QAAIxC,MAAM,CAACsB,MAAX,EAAmB;AACjBrB,MAAAA,GAAG,CAAC0D,SAAJ,CAAc3D,MAAM,CAACsB,MAArB,EAA6B,CAA7B,EAAgC,CAAhC,EADiB,CAEjB;;AACA,UAAIkB,IAAJ,EAAU;AACR,YAAMoB,iBAAiB,GAAG,GAA1B;AACAnH,QAAAA,MAAM,CAACoH,aAAP,CAAqBrB,IAAI,CAACsB,SAA1B,EAAqCF,iBAArC,EAAwD3D,GAAxD;AACAxD,QAAAA,MAAM,CAACsH,YAAP,CAAoBvB,IAAI,CAACsB,SAAzB,EAAoCF,iBAApC,EAAuD3D,GAAvD;AACD;AACF;AACF;;AAED,MAAMkD,cAAc,GAAG,SAAjBA,cAAiB,CAACa,GAAD,EAAS;AAC9BxD,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BuD,GAA/B;AACAzF,IAAAA,QAAQ,CAAC;AACP+B,MAAAA,IAAI,EAAEtD,iCADC;AAEPiH,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAEF,GADH;AAEJG,QAAAA,IAAI,EAAElH,KAAK,CAAC2B,GAAD,CAAL,CAAWwF,MAAX,CAAkB,qBAAlB,CAFF;AAGJC,QAAAA,UAAU,EAAE1F,QAAQ,CAAC2B;AAHjB;AAFC,KAAD,CAAR;AAQD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIjB,WAAW,gBACX,uDACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B,gBAA3B,CADA,eAEA,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B,+DAA3B,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEe,cAAV;AAA0B,IAAA,KAAK,EAAC,eAAhC;AAAgD,IAAA,GAAG,EAAC,wCAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,eAKE;AAAK,IAAA,GAAG,EAAG3C,UAAX;AAAwB,IAAA,KAAK,EAAC,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAE8C,aAAV;AAAyB,IAAA,KAAK,EAAC,eAA/B;AAA+C,IAAA,GAAG,EAAC,kCAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CADA,CAFF,eAcE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AACE,IAAA,KAAK,EAAC,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,EAAE,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAdF,eAoBE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,uBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BzB,gBAAgB,CAACH,QAAQ,CAAC2B,IAAT,GAAc,CAAf,CAA5C,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,wBAAL,eAAY;AAAM,IAAA,KAAK,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B3B,QAAQ,CAACuE,GAApC,CAAZ,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,oCAAL,eAAc;AAAM,IAAA,KAAK,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BvE,QAAQ,CAACqD,IAApC,CAAd,CAHF,CADF,eAME;AAAK,IAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+B,SAA/B,CADF,eAIE;AAAK,IAAA,KAAK,EAAC,uBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI/C,UADJ,EACgB,eADhB,CAJF,eAOE;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmB,GAAnB,CADF,eAEE;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmB,QAAnB,CAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAmB,IAAA,EAAE,EAAC,IAAtB;AAA2B,IAAA,EAAE,EAAC,IAA9B;AAAmC,IAAA,CAAC,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAyB,IAAA,EAAE,EAAC,IAA5B;AAAiC,IAAA,EAAE,EAAC,IAApC;AAAyC,IAAA,CAAC,EAAC,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,CAPF,CADF,CADF,CANF,CApBF,eAiDE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjDF,CAFA,eAqDA;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,YAAd;AAA2B,IAAA,OAAO,EAAG;AAAA,aAAMkE,cAAc,CAAChE,YAAD,CAApB;AAAA,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0E,cAA1E,CADF,CArDA,eA0DA,oBAAC,KAAD;AACE,IAAA,IAAI,EAAEI,IADR;AAEE,IAAA,OAAO,EAAEG,WAFX;AAGE,uBAAgB,mBAHlB;AAIE,wBAAiB,yBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAEhC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,KAAK,EAAE;AAAE4G,MAAAA,SAAS,EAAE;AAAb,KAFT;AAGE,IAAA,EAAE,EAAC,mBAHL;AAIE,IAAA,OAAO,EAAC,IAJV;AAKE,IAAA,SAAS,EAAC,IALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKiB,oDALjB,CADF,eASE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,MAAZ;AAAoBD,MAAAA,SAAS,EAAE;AAA/B,KAFT;AAGE,IAAA,EAAE,EAAC,yBAHL;AAIE,IAAA,EAAE,EAAE;AAAEE,MAAAA,EAAE,EAAE;AAAN,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI7E,KALJ,EAKW,GALX,eAKY;AAAM,IAAA,KAAK,EAAC,YAAZ;AAAyB,IAAA,KAAK,EAAE;AAAE4E,MAAAA,QAAQ,EAAE;AAAZ,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsD,QAAtD,CALZ,CATF,CANF,CA1DA,CADW,gBAqFb;AAAK,IAAA,KAAK,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtFF,CADF;AA6FD","sourcesContent":["// import * as tf from '@tensorflow/tfjs';\nimport * as tmPose from '@teachablemachine/pose';\nimport React, { useState, useEffect } from 'react';\nimport './ExerciseRoom.css';\nimport $ from 'jquery';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { EXERCISE_HISTORY_REGISTER_REQUEST } from '../../store/modules/exerciseHistory';\nimport dayjs from 'dayjs';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { Row, Col } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport arrowImage from '../../assets/images/exerciseTutorial/arrow_down.png';\n\nconst style = {\n  position: 'absolute',\n  textAlign: 'center',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 350,\n  height: 300,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  borderRadius: '20px',\n  p: 4,\n};\n\nexport default function ExerciseRoom() {\n  const dispatch = useDispatch();\n  const { breakTime } = useParams();\n  const { exercise } = useSelector((state) => state.exerciseHistory);\n  const now = new Date(); // 현재 날짜 및 시간\n\n  const ExerciseTypeList = [\n    '벤트 오버 로우',\n    '덤벨컬',\n    '프론트 레이즈',\n    '런지',\n    // '오버 헤드 프레스',\n    // '푸시업',\n    '사이드 레터럴 레이즈',\n    '스쿼트',\n    // '스탠딩 사이드 크런치',\n  ];\n\n  const [ URL, setURL ] = useState('');\n  const [ currentSet, setCurrentSet ] = useState(1);\n  const [ currentCount, setCurrentCount ] = useState(0);\n  const [ pageLoading, setPageLoading ] = useState(false);\n\n  // 모달창 관리 \n  const [ open, setOpen ] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const [ timer, setTimer ] = useState(0);\n\n  let modelURL = URL + 'model.json';\n  let metadataURL = URL + 'metadata.json';\n  let model, webcam, ctx, labelContainer, maxPredictions;\n\n  // 운동별 설명 이미지 선택\n  // '../../assets/images/exerciseTutorial/1/0.png'\n  const beforeImageURL = require('../../assets/images/exerciseTutorial/' + exercise.type + '/0.png');\n  const afterImageURL = require('../../assets/images/exerciseTutorial/' + exercise.type + '/1.png');\n\n  useEffect(() => {\n    switch (exercise.type) {\n      case 1: // BentOverRow\n        // test : 왼 손 들기\n        // setURL('https://teachablemachine.withgoogle.com/models/tNxgspb7K/');\n\n        setURL('https://teachablemachine.withgoogle.com/models/8htc5Fdlu/');\n        break;\n      case 2: // DumbbellCurl\n        setURL('https://teachablemachine.withgoogle.com/models/qvMroKavg/');\n        break;\n      case 3: // FrontRaise\n        setURL('https://teachablemachine.withgoogle.com/models/aKluCaORU/');\n        break;\n      case 4: // Lunge\n        setURL('https://teachablemachine.withgoogle.com/models/7zoTQArlc/');\n        break;\n      // case 5: // OverheadPress\n      //   setURL('https://teachablemachine.withgoogle.com/models/QoQ4ty5qS/');\n      //   break;\n      // case 6: // PushUp\n      //   setURL('https://teachablemachine.withgoogle.com/models/R6Q1RWNar/');\n      //   break;\n      case 5: // SideLateralRaise\n        setURL('https://teachablemachine.withgoogle.com/models/2GMC5JVkX/');\n        break;\n      case 6: // Squat\n        setURL('https://teachablemachine.withgoogle.com/models/050JkD2Z0/');\n        break;\n      // case 9: // StandingSideCrunch\n      //   setURL('https://teachablemachine.withgoogle.com/models/S9Mpp7iGf/');\n      //   break;\n    }\n  }, []);\n\n  useEffect(() => {\n    modelURL = URL + 'model.json';\n    metadataURL = URL + 'metadata.json';\n    console.log(modelURL, metadataURL);\n    if (URL !== '') {\n      init();\n    }\n  }, [URL]);\n\n\n  async function init() {\n    // const modelURL = URL + 'model.json';\n    // const metadataURL = URL + 'metadata.json';\n    // console.log(modelURL);\n    // console.log(metadataURL);\n    // load the model and metadata\n    // Refer to tmImage.loadFromFiles() in the API to support files from a file picker\n    // Note: the pose library adds a tmPose object to your window (window.tmPose)\n    model = await tmPose.load(modelURL, metadataURL);\n    maxPredictions = model.getTotalClasses();\n    // Convenience function to setup a webcam\n    const size = 500;\n    const flip = true; // whether to flip the webcam\n    var loading = false;\n    webcam = new tmPose.Webcam(size, size, flip); // width, height, flip\n    await webcam.setup(); // request access to the webcam\n    console.log(webcam);\n    await webcam.play();\n    \n    // 화면이 로딩되었다면 아이콘 제거\n    loading = true;\n    setPageLoading(loading);\n\n    window.requestAnimationFrame(loop);\n    // append/get elements to the DOM\n    const canvas = document.getElementById('canvas');\n    canvas.width = size;\n    canvas.height = size;\n    ctx = canvas.getContext('2d');\n    // labelContainer = document.getElementById('label-container');\n    // for (let i = 0; i < maxPredictions; i++) {\n    //   // and class labels\n    //   labelContainer.appendChild(document.createElement('div'));\n    // }\n  }\n\n  // async function stopVideo() {\n  // }\n\n  async function loop(timestamp) {\n    webcam.update(); // update the webcam frame\n    await predict();\n    window.requestAnimationFrame(loop);\n  }\n\n  var angle = Math.floor((360 / exercise.time) * 10) / 10;\n  var progress = 360;\n  var status = 'wait';\n  var countTime = 0;\n  var countTotalTime = 0;\n  var countSet = 1;\n  var soundURL = '';\n\n  async function predict() {\n    // Prediction #1: run input through posenet\n    // estimatePose can take in an image, video or canvas html element\n    const { pose, posenetOutput } = await model.estimatePose(webcam.canvas);\n    // Prediction 2: run input through teachable machine classification model\n    const prediction = await model.predict(posenetOutput);\n\n    if (prediction[0].probability.toFixed(2) > 0.9) {\n      if (status == 'action') {\n        countTime++;\n        countTotalTime++;\n        setCurrentCount(countTotalTime);\n\n        // 카운팅 소리 재생\n        soundURL = require('../../assets/soundEffects/countSound/ddiring2.mp3');\n        var audio = new Audio(soundURL);\n        audio.volume = 0.8;\n        audio.play();\n\n        console.log(status, countTime, soundURL);\n        progress = progress - angle;\n        if (progress < 0) {\n          progress = 360 - angle;\n        }\n        $('.progress').css('stroke-dashoffset', progress);\n        $('#counter').html(countTime);\n        console.log(progress, angle);\n\n        if (countTotalTime === exercise.set * exercise.time) {\n          handleExercise(countTotalTime);\n        }\n\n        // 1세트가 끝난 경우\n        if (countTime.toString() === exercise.time && countTotalTime < exercise.set * exercise.time) {\n          // 세트 수 증가\n          countSet++;\n          setCurrentSet(countSet);\n          \n          // 세트 당 카운트 수 reset\n          countTime = 0;\n\n          // breaktimer 가동\n          if(breakTime>0) {\n            var timer = breakTime;\n            setTimer(timer);\n            setTimeout(() => { webcam.pause() }, 500)   // 화면 정지\n            handleOpen(); // 모달창 on\n\n            var timerInterval = setInterval(() => {\n              if(timer==0) clearInterval(timerInterval);\n              timer--;\n              setTimer(timer);\n            }, 1000);\n            setTimeout(() => { handleClose() }, breakTime*1000)       // 모달 close     \n            setTimeout(() => { webcam.play() }, breakTime*1000)          \n          }\n        }\n\n        \n      }\n      status = 'wait';\n    } else if (prediction[1].probability.toFixed(2) > 0.9) {\n      status = 'action';\n    }\n\n    // for (let i = 0; i < maxPredictions; i++) {\n    //   const classPrediction =\n    //     prediction[i].className + ': ' + prediction[i].probability.toFixed(2);\n    //   labelContainer.childNodes[i].innerHTML = classPrediction;\n    // }\n\n    // finally draw the poses\n    drawPose(pose);\n  }\n\n  function drawPose(pose) {\n    if (webcam.canvas) {\n      ctx.drawImage(webcam.canvas, 0, 0);\n      // draw the keypoints and skeleton\n      if (pose) {\n        const minPartConfidence = 0.5;\n        tmPose.drawKeypoints(pose.keypoints, minPartConfidence, ctx);\n        tmPose.drawSkeleton(pose.keypoints, minPartConfidence, ctx);\n      }\n    }\n  }\n\n  const handleExercise = (cnt) => {\n    console.log(\"🤞🤞🤞🤞🤞🤞🤞 \", cnt);\n    dispatch({\n      type: EXERCISE_HISTORY_REGISTER_REQUEST,\n      data: {\n        count: cnt,\n        date: dayjs(now).format('YYYY-MM-DD HH:mm:ss'),\n        exerciseNo: exercise.type,\n      },\n    });\n  }\n\n  return (\n    <div className='myExercise'>\n      { pageLoading ? \n        <>\n        <div className='menuTitle'>MY운동</div>\n        <Row class='boxWrapper'>\n          <Col md='1'></Col>\n          <Col md='2'>\n          <div class='imageWrapper'>\n            <div class='exerciseTitle'>🏋️‍♀️운동 방법</div>\n            <div>\n              <img src={beforeImageURL} class='exerciseImage' alt='운동 시작 동작'/>\n            </div>\n            <img src={ arrowImage } class='arrowImage' />\n            <div>\n              <img src={afterImageURL} class='exerciseImage' alt='운동 끝 동작'></img>\n            </div>\n          </div>\n          </Col>\n          <Col md='5'\n            class='leftBox'>\n            <div class='leftBox'>\n              <canvas id='canvas'></canvas>\n            </div>\n          </Col>\n          <Col md='3'>\n            <div class='exerciseInfo fontBold'>\n              <div class='exerciseName'>{ ExerciseTypeList[exercise.type-1] }</div>\n              <div>총 세트 : <span class='fontNormal'>{ exercise.set }</span></div>\n              <div>세트당 횟수 : <span class='fontNormal'>{ exercise.time }</span></div>\n            </div>\n            <div class='timeInfo'>\n              <div class='frame'>\n                <div class='center'>\n                  <div class='headline fontBold'>\n                    Counter\n                  </div>\n                  <div class='currentSet fontNormal'>\n                    { currentSet } 세트\n                  </div>\n                  <div class='circle-big'>\n                    <div class='text'>\n                      <span id='counter'>0</span>\n                      <div class='small'>개</div>\n                    </div>\n                    <svg>\n                      <circle class='bg' cx='57' cy='57' r='52' />\n                      <circle class='progress' cx='57' cy='57' r='52' />\n                    </svg>\n                  </div>\n                </div>\n              </div>  \n            </div>\n          </Col>\n          <Col md='1'></Col>\n        </Row> \n        <div class='buttonWrapper'>\n          <Button class='exitButton' onClick={ () => handleExercise(currentCount) }>종료</Button>\n        </div>\n\n        {/* <div id='label-container'></div> */}\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby='modal-modal-title'\n          aria-describedby='modal-modal-description'\n        >\n          <Box sx={style}>\n            <Typography \n              class='fontNormal'\n              style={{ marginTop: '20px' }}\n              id='modal-modal-title' \n              variant='h6' \n              component='h2'>\n              쉬는 시간 종료까지\n            </Typography> \n            <Typography \n              class='fontBold'\n              style={{ fontSize: '70px', marginTop: '30px'}}\n              id='modal-modal-description' \n              sx={{ mt: 2 }}>\n              { timer } <span class='fontNormal' style={{ fontSize: '20px' }}>초</span>\n            </Typography>\n          </Box>\n        </Modal>\n      </>\n    : \n      <div class='loadingWrapper'>\n        <div id='loading'></div>\n      </div>\n    }\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}