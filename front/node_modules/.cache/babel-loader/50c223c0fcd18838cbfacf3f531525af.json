{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/series/helpers/display_format_parser.js)\r\n * Version: 23.1.6\r\n * Build date: Fri Oct 13 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { formatDate, formatNumber } from \"../../../localization\";\nvar startPlaceHolderChar = \"{\";\nvar endPlaceHolderChar = \"}\";\nvar placeholderFormatDelimiter = \":\";\n\nfunction formatValue(value, format) {\n  if (format) {\n    if (value instanceof Date) {\n      return formatDate(value, format);\n    }\n\n    if (\"number\" === typeof value) {\n      return formatNumber(value, format);\n    }\n  }\n\n  return value;\n}\n\nfunction getValueByPlaceHolder(placeHolder, pointInfo) {\n  var customFormat = \"\";\n  var customFormatIndex = placeHolder.indexOf(placeholderFormatDelimiter);\n\n  if (customFormatIndex > 0) {\n    customFormat = placeHolder.substr(customFormatIndex + 1);\n    placeHolder = placeHolder.substr(0, customFormatIndex);\n  }\n\n  return formatValue(pointInfo[placeHolder], customFormat);\n}\n\nexport function processDisplayFormat(displayFormat, pointInfo) {\n  var actualText = displayFormat;\n  var continueProcess = true;\n\n  while (continueProcess) {\n    var startBracketIndex = actualText.indexOf(startPlaceHolderChar);\n    var endBracketIndex = actualText.indexOf(endPlaceHolderChar);\n\n    if (startBracketIndex >= 0 && endBracketIndex > 0) {\n      var placeHolder = actualText.substring(startBracketIndex + 1, endBracketIndex);\n      var value = getValueByPlaceHolder(placeHolder, pointInfo);\n      actualText = actualText.substr(0, startBracketIndex) + value + actualText.substr(endBracketIndex + 1);\n    } else {\n      continueProcess = false;\n    }\n  }\n\n  return actualText;\n}","map":null,"metadata":{},"sourceType":"module"}