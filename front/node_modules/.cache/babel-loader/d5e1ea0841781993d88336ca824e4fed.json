{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\HELF-master\\\\front\\\\src\\\\components\\\\MyPage\\\\Statistics\\\\ExerciseHistory.jsx\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ExerciseHistoryTotal, ReactTooltipStyled, Title } from \"../MyPage.style\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { EXERCISE_HISTORY_FINDALL_REQUEST } from \"../../../store/modules/exerciseHistory\";\nimport { useMediaQuery } from \"react-responsive\";\nexport default function ExerciseHistory() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var now = new Date(); // 현재 날짜 및 시간\n\n  var year = now.getFullYear(); // 연도\n\n  var month = now.getMonth();\n  var monthDay = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  var Mobilemonths = month < 7 ? [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"] : [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  var _useSelector = useSelector(function (state) {\n    return state.exerciseHistory;\n  }),\n      exerciseDateList = _useSelector.exerciseDateList;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.exerciseHistory;\n  }),\n      exerciseTypeList = _useSelector2.exerciseTypeList;\n\n  useEffect(function () {\n    dispatch({\n      type: EXERCISE_HISTORY_FINDALL_REQUEST,\n      data: year\n    });\n  }, [dispatch, year]);\n  var MAP = [];\n\n  for (var i = 0; i < 7; i++) {\n    var temp = [];\n\n    for (var j = 0; j < 53; j++) {\n      temp.push(0);\n    }\n\n    MAP.push(temp);\n  }\n\n  var r = 0;\n  var c = 0;\n\n  for (var _i = 1; _i <= 12; _i++) {\n    for (var _j = 1; _j <= monthDay[_i]; _j++) {\n      var m = _i < 10 ? \"0\" + _i : _i;\n      var d = _j < 10 ? \"0\" + _j : _j;\n      MAP[r][c] = year + \"-\" + m + \"-\" + d;\n\n      if (r + 1 === 7) {\n        c++;\n        r = 0;\n      } else {\n        r++;\n      }\n    }\n  }\n\n  var MobileMAP = [];\n\n  for (var _i2 = 0; _i2 < 7; _i2++) {\n    var _temp = [];\n\n    for (var _j2 = 0; _j2 < 27; _j2++) {\n      _temp.push(0);\n    }\n\n    MobileMAP.push(_temp);\n  }\n\n  var Mr = 0;\n  var Mc = 0;\n  var start = month < 7 ? 1 : 7;\n\n  for (var _i3 = 0; _i3 <= 5; _i3++) {\n    var Mi = start + _i3;\n\n    for (var _j3 = 1; _j3 <= monthDay[Mi]; _j3++) {\n      var _m = Mi < 10 ? \"0\" + Mi : Mi;\n\n      var _d = _j3 < 10 ? \"0\" + _j3 : _j3;\n\n      MobileMAP[Mr][Mc] = year + \"-\" + _m + \"-\" + _d;\n\n      if (Mr + 1 === 7) {\n        Mc++;\n        Mr = 0;\n      } else {\n        Mr++;\n      }\n    }\n  }\n\n  var Desktop = function Desktop(_ref) {\n    var children = _ref.children;\n    var isDesktop = useMediaQuery({\n      minWidth: 768\n    });\n    return isDesktop ? children : null;\n  };\n\n  var Mobile = function Mobile(_ref2) {\n    var children = _ref2.children;\n    var isMobile = useMediaQuery({\n      maxWidth: 767\n    });\n    return isMobile ? children : null;\n  };\n\n  return /*#__PURE__*/React.createElement(ExerciseHistoryTotal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"\\uC6B4\\uB3D9 \\uAE30\\uB85D\"), /*#__PURE__*/React.createElement(Desktop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"months\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, months.map(function (month, index) {\n    return /*#__PURE__*/React.createElement(Col, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, month);\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, MAP.map(function (maps, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"line\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, maps.map(function (each, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: each === 0 ? \"cell\" : exerciseDateList.check(each) > 5 ? \"cell fill-5\" : \"cell fill-\" + exerciseDateList.check(each),\n        \"data-for\": exerciseDateList.check(each) > 0 ? \"data\" + index : \"\",\n        \"data-tip\": each,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, exerciseDateList.check(each) > 0 && /*#__PURE__*/React.createElement(ReactTooltipStyled, {\n        id: \"data\" + index,\n        place: \"right\",\n        getContent: function getContent(dataTip) {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              fontSize: \"13px\",\n              fontWeight: \"bold\",\n              marginBottom: \"10%\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 27\n            }\n          }, dataTip), exerciseTypeList.check(dataTip) !== 0 && exerciseTypeList.get(dataTip).map(function (item, index) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: index,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 31\n              }\n            }, item.name, \" : \", item.count);\n          }));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }\n      }));\n    }));\n  }))), /*#__PURE__*/React.createElement(Mobile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"months\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, Mobilemonths.map(function (month, index) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        margin: \"0 3%\"\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, month);\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, MobileMAP.map(function (maps, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"line\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, maps.map(function (each, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: each === 0 ? \"cell\" : exerciseDateList.check(each) > 5 ? \"cell fill-5\" : \"cell fill-\" + exerciseDateList.check(each),\n        \"data-for\": exerciseDateList.check(each) > 0 ? \"data\" + index : \"\",\n        \"data-tip\": each,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }\n      }, exerciseDateList.check(each) > 0 && /*#__PURE__*/React.createElement(ReactTooltipStyled, {\n        id: \"data\" + index,\n        place: \"right\",\n        getContent: function getContent(dataTip) {\n          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              fontSize: \"13px\",\n              fontWeight: \"bold\",\n              marginBottom: \"10%\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 27\n            }\n          }, dataTip), exerciseTypeList.check(dataTip) !== 0 && exerciseTypeList.get(dataTip).map(function (item, index) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              key: index,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 31\n              }\n            }, item.name, \" : \", item.count);\n          }));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }));\n    }));\n  }))));\n}","map":{"version":3,"sources":["C:/Users/JUN-D/Desktop/HELF-master/front/src/components/MyPage/Statistics/ExerciseHistory.jsx"],"names":["React","useEffect","useDispatch","useSelector","ExerciseHistoryTotal","ReactTooltipStyled","Title","Row","Col","EXERCISE_HISTORY_FINDALL_REQUEST","useMediaQuery","ExerciseHistory","dispatch","now","Date","year","getFullYear","month","getMonth","monthDay","months","Mobilemonths","state","exerciseHistory","exerciseDateList","exerciseTypeList","type","data","MAP","i","temp","j","push","r","c","m","d","MobileMAP","Mr","Mc","start","Mi","Desktop","children","isDesktop","minWidth","Mobile","isMobile","maxWidth","display","justifyContent","alignItems","map","index","maps","each","check","dataTip","fontSize","fontWeight","marginBottom","get","item","name","count","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,oBADF,EAEEC,kBAFF,EAGEC,KAHF,QAIO,iBAJP;AAKA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,SAASC,gCAAT,QAAiD,wCAAjD;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA,MAAMW,GAAG,GAAG,IAAIC,IAAJ,EAAZ,CAHwC,CAGhB;;AACxB,MAAMC,IAAI,GAAGF,GAAG,CAACG,WAAJ,EAAb,CAJwC,CAIR;;AAChC,MAAMC,KAAK,GAAGJ,GAAG,CAACK,QAAJ,EAAd;AACA,MAAMC,QAAQ,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,EAA5C,EAAgD,EAAhD,CAAjB;AACA,MAAMC,MAAM,GAAG,CACb,KADa,EAEb,KAFa,EAGb,KAHa,EAIb,KAJa,EAKb,KALa,EAMb,KANa,EAOb,KAPa,EAQb,KARa,EASb,KATa,EAUb,KAVa,EAWb,KAXa,EAYb,KAZa,CAAf;AAeA,MAAMC,YAAY,GAChBJ,KAAK,GAAG,CAAR,GACI,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,CADJ,GAEI,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,CAHN;;AAtBwC,qBA2BXd,WAAW,CAAC,UAACmB,KAAD;AAAA,WAAWA,KAAK,CAACC,eAAjB;AAAA,GAAD,CA3BA;AAAA,MA2BhCC,gBA3BgC,gBA2BhCA,gBA3BgC;;AAAA,sBA4BXrB,WAAW,CAAC,UAACmB,KAAD;AAAA,WAAWA,KAAK,CAACC,eAAjB;AAAA,GAAD,CA5BA;AAAA,MA4BhCE,gBA5BgC,iBA4BhCA,gBA5BgC;;AA8BxCxB,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,QAAQ,CAAC;AACPc,MAAAA,IAAI,EAAEjB,gCADC;AAEPkB,MAAAA,IAAI,EAAEZ;AAFC,KAAD,CAAR;AAID,GALQ,EAKN,CAACH,QAAD,EAAWG,IAAX,CALM,CAAT;AAOA,MAAMa,GAAG,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,QAAMC,IAAI,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB;AAA6BD,MAAAA,IAAI,CAACE,IAAL,CAAU,CAAV;AAA7B;;AACAJ,IAAAA,GAAG,CAACI,IAAJ,CAASF,IAAT;AACD;;AAED,MAAIG,CAAC,GAAG,CAAR;AACA,MAAIC,CAAC,GAAG,CAAR;;AACA,OAAK,IAAIL,EAAC,GAAG,CAAb,EAAgBA,EAAC,IAAI,EAArB,EAAyBA,EAAC,EAA1B,EAA8B;AAC5B,SAAK,IAAIE,EAAC,GAAG,CAAb,EAAgBA,EAAC,IAAIZ,QAAQ,CAACU,EAAD,CAA7B,EAAkCE,EAAC,EAAnC,EAAuC;AACrC,UAAMI,CAAC,GAAGN,EAAC,GAAG,EAAJ,GAAS,MAAMA,EAAf,GAAmBA,EAA7B;AACA,UAAMO,CAAC,GAAGL,EAAC,GAAG,EAAJ,GAAS,MAAMA,EAAf,GAAmBA,EAA7B;AACAH,MAAAA,GAAG,CAACK,CAAD,CAAH,CAAOC,CAAP,IAAYnB,IAAI,GAAG,GAAP,GAAaoB,CAAb,GAAiB,GAAjB,GAAuBC,CAAnC;;AACA,UAAIH,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AACfC,QAAAA,CAAC;AACDD,QAAAA,CAAC,GAAG,CAAJ;AACD,OAHD,MAGO;AACLA,QAAAA,CAAC;AACF;AACF;AACF;;AAED,MAAMI,SAAS,GAAG,EAAlB;;AACA,OAAK,IAAIR,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,CAApB,EAAuBA,GAAC,EAAxB,EAA4B;AAC1B,QAAMC,KAAI,GAAG,EAAb;;AACA,SAAK,IAAIC,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,EAApB,EAAwBA,GAAC,EAAzB;AAA6BD,MAAAA,KAAI,CAACE,IAAL,CAAU,CAAV;AAA7B;;AACAK,IAAAA,SAAS,CAACL,IAAV,CAAeF,KAAf;AACD;;AACD,MAAIQ,EAAE,GAAG,CAAT;AACA,MAAIC,EAAE,GAAG,CAAT;AACA,MAAMC,KAAK,GAAGvB,KAAK,GAAG,CAAR,GAAY,CAAZ,GAAgB,CAA9B;;AACA,OAAK,IAAIY,GAAC,GAAG,CAAb,EAAgBA,GAAC,IAAI,CAArB,EAAwBA,GAAC,EAAzB,EAA6B;AAC3B,QAAMY,EAAE,GAAGD,KAAK,GAAGX,GAAnB;;AACA,SAAK,IAAIE,GAAC,GAAG,CAAb,EAAgBA,GAAC,IAAIZ,QAAQ,CAACsB,EAAD,CAA7B,EAAmCV,GAAC,EAApC,EAAwC;AACtC,UAAMI,EAAC,GAAGM,EAAE,GAAG,EAAL,GAAU,MAAMA,EAAhB,GAAqBA,EAA/B;;AACA,UAAML,EAAC,GAAGL,GAAC,GAAG,EAAJ,GAAS,MAAMA,GAAf,GAAmBA,GAA7B;;AACAM,MAAAA,SAAS,CAACC,EAAD,CAAT,CAAcC,EAAd,IAAoBxB,IAAI,GAAG,GAAP,GAAaoB,EAAb,GAAiB,GAAjB,GAAuBC,EAA3C;;AACA,UAAIE,EAAE,GAAG,CAAL,KAAW,CAAf,EAAkB;AAChBC,QAAAA,EAAE;AACFD,QAAAA,EAAE,GAAG,CAAL;AACD,OAHD,MAGO;AACLA,QAAAA,EAAE;AACH;AACF;AACF;;AACD,MAAMI,OAAO,GAAG,SAAVA,OAAU,OAAkB;AAAA,QAAfC,QAAe,QAAfA,QAAe;AAChC,QAAMC,SAAS,GAAGlC,aAAa,CAAC;AAAEmC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA/B;AACA,WAAOD,SAAS,GAAGD,QAAH,GAAc,IAA9B;AACD,GAHD;;AAIA,MAAMG,MAAM,GAAG,SAATA,MAAS,QAAkB;AAAA,QAAfH,QAAe,SAAfA,QAAe;AAC/B,QAAMI,QAAQ,GAAGrC,aAAa,CAAC;AAAEsC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA9B;AACA,WAAOD,QAAQ,GAAGJ,QAAH,GAAc,IAA7B;AACD,GAHD;;AAKA,sBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,2BAAP,CADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAE;AACLM,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,UAAU,EAAE;AAHP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG/B,MAAM,CAACgC,GAAP,CAAW,UAACnC,KAAD,EAAQoC,KAAR;AAAA,wBACV,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBpC,KAAlB,CADU;AAAA,GAAX,CADH,CAPF,CADF,eAcE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,GAAG,CAACwB,GAAJ,CAAQ,UAACE,IAAD,EAAOD,KAAP;AAAA,wBACP;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,SAAS,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,IAAI,CAACF,GAAL,CAAS,UAACG,IAAD,EAAOF,KAAP;AAAA,0BACR;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,SAAS,EACPE,IAAI,KAAK,CAAT,GACI,MADJ,GAEI/B,gBAAgB,CAACgC,KAAjB,CAAuBD,IAAvB,IAA+B,CAA/B,GACA,aADA,GAEA,eAAe/B,gBAAgB,CAACgC,KAAjB,CAAuBD,IAAvB,CAPvB;AASE,oBACE/B,gBAAgB,CAACgC,KAAjB,CAAuBD,IAAvB,IAA+B,CAA/B,GAAmC,SAASF,KAA5C,GAAoD,EAVxD;AAYE,oBAAUE,IAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAcG/B,gBAAgB,CAACgC,KAAjB,CAAuBD,IAAvB,IAA+B,CAA/B,iBACC,oBAAC,kBAAD;AACE,QAAA,EAAE,EAAE,SAASF,KADf;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,UAAU,EAAE,oBAACI,OAAD;AAAA,8BACV,uDACE;AACE,YAAA,KAAK,EAAE;AACLC,cAAAA,QAAQ,EAAE,MADL;AAELC,cAAAA,UAAU,EAAE,MAFP;AAGLC,cAAAA,YAAY,EAAE;AAHT,aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAOGH,OAPH,CADF,EAUGhC,gBAAgB,CAAC+B,KAAjB,CAAuBC,OAAvB,MAAoC,CAApC,IACChC,gBAAgB,CAACoC,GAAjB,CAAqBJ,OAArB,EAA8BL,GAA9B,CAAkC,UAACU,IAAD,EAAOT,KAAP;AAAA,gCAChC;AAAK,cAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGS,IAAI,CAACC,IADR,EACa,KADb,EACiBD,IAAI,CAACE,KADtB,CADgC;AAAA,WAAlC,CAXJ,CADU;AAAA,SAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,CADQ;AAAA,KAAT,CADH,CADO;AAAA,GAAR,CADH,CAdF,CAFF,eAiEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAE;AACLf,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,UAAU,EAAE;AAHP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,KAAK,EAAE;AACLF,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,UAAU,EAAE;AAHP,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG9B,YAAY,CAAC+B,GAAb,CAAiB,UAACnC,KAAD,EAAQoC,KAAR;AAAA,wBAChB;AAAG,MAAA,KAAK,EAAE;AAAEY,QAAAA,MAAM,EAAE;AAAV,OAAV;AAA8B,MAAA,GAAG,EAAEZ,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGpC,KADH,CADgB;AAAA,GAAjB,CARH,CAPF,CADF,eAuBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGoB,SAAS,CAACe,GAAV,CAAc,UAACE,IAAD,EAAOD,KAAP;AAAA,wBACb;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,SAAS,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,IAAI,CAACF,GAAL,CAAS,UAACG,IAAD,EAAOF,KAAP;AAAA,0BACR;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,SAAS,EACPE,IAAI,KAAK,CAAT,GACI,MADJ,GAEI/B,gBAAgB,CAACgC,KAAjB,CAAuBD,IAAvB,IAA+B,CAA/B,GACA,aADA,GAEA,eAAe/B,gBAAgB,CAACgC,KAAjB,CAAuBD,IAAvB,CAPvB;AASE,oBACE/B,gBAAgB,CAACgC,KAAjB,CAAuBD,IAAvB,IAA+B,CAA/B,GAAmC,SAASF,KAA5C,GAAoD,EAVxD;AAYE,oBAAUE,IAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAcG/B,gBAAgB,CAACgC,KAAjB,CAAuBD,IAAvB,IAA+B,CAA/B,iBACC,oBAAC,kBAAD;AACE,QAAA,EAAE,EAAE,SAASF,KADf;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,UAAU,EAAE,oBAACI,OAAD;AAAA,8BACV,uDACE;AACE,YAAA,KAAK,EAAE;AACLC,cAAAA,QAAQ,EAAE,MADL;AAELC,cAAAA,UAAU,EAAE,MAFP;AAGLC,cAAAA,YAAY,EAAE;AAHT,aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAOGH,OAPH,CADF,EAUGhC,gBAAgB,CAAC+B,KAAjB,CAAuBC,OAAvB,MAAoC,CAApC,IACChC,gBAAgB,CAACoC,GAAjB,CAAqBJ,OAArB,EAA8BL,GAA9B,CAAkC,UAACU,IAAD,EAAOT,KAAP;AAAA,gCAChC;AAAK,cAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGS,IAAI,CAACC,IADR,EACa,KADb,EACiBD,IAAI,CAACE,KADtB,CADgC;AAAA,WAAlC,CAXJ,CADU;AAAA,SAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,CADQ;AAAA,KAAT,CADH,CADa;AAAA,GAAd,CADH,CAvBF,CAjEF,CADF;AA4ID","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  ExerciseHistoryTotal,\n  ReactTooltipStyled,\n  Title,\n} from \"../MyPage.style\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { EXERCISE_HISTORY_FINDALL_REQUEST } from \"../../../store/modules/exerciseHistory\";\nimport { useMediaQuery } from \"react-responsive\";\n\nexport default function ExerciseHistory() {\n  const dispatch = useDispatch();\n\n  const now = new Date(); // 현재 날짜 및 시간\n  const year = now.getFullYear(); // 연도\n  const month = now.getMonth();\n  const monthDay = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  const Mobilemonths =\n    month < 7\n      ? [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"]\n      : [\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  const { exerciseDateList } = useSelector((state) => state.exerciseHistory);\n  const { exerciseTypeList } = useSelector((state) => state.exerciseHistory);\n\n  useEffect(() => {\n    dispatch({\n      type: EXERCISE_HISTORY_FINDALL_REQUEST,\n      data: year,\n    });\n  }, [dispatch, year]);\n\n  const MAP = [];\n  for (let i = 0; i < 7; i++) {\n    const temp = [];\n    for (let j = 0; j < 53; j++) temp.push(0);\n    MAP.push(temp);\n  }\n\n  let r = 0;\n  let c = 0;\n  for (let i = 1; i <= 12; i++) {\n    for (let j = 1; j <= monthDay[i]; j++) {\n      const m = i < 10 ? \"0\" + i : i;\n      const d = j < 10 ? \"0\" + j : j;\n      MAP[r][c] = year + \"-\" + m + \"-\" + d;\n      if (r + 1 === 7) {\n        c++;\n        r = 0;\n      } else {\n        r++;\n      }\n    }\n  }\n\n  const MobileMAP = [];\n  for (let i = 0; i < 7; i++) {\n    const temp = [];\n    for (let j = 0; j < 27; j++) temp.push(0);\n    MobileMAP.push(temp);\n  }\n  let Mr = 0;\n  let Mc = 0;\n  const start = month < 7 ? 1 : 7;\n  for (let i = 0; i <= 5; i++) {\n    const Mi = start + i;\n    for (let j = 1; j <= monthDay[Mi]; j++) {\n      const m = Mi < 10 ? \"0\" + Mi : Mi;\n      const d = j < 10 ? \"0\" + j : j;\n      MobileMAP[Mr][Mc] = year + \"-\" + m + \"-\" + d;\n      if (Mr + 1 === 7) {\n        Mc++;\n        Mr = 0;\n      } else {\n        Mr++;\n      }\n    }\n  }\n  const Desktop = ({ children }) => {\n    const isDesktop = useMediaQuery({ minWidth: 768 });\n    return isDesktop ? children : null;\n  };\n  const Mobile = ({ children }) => {\n    const isMobile = useMediaQuery({ maxWidth: 767 });\n    return isMobile ? children : null;\n  };\n\n  return (\n    <ExerciseHistoryTotal>\n      <Title>운동 기록</Title>\n      <Desktop>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Row className=\"months\">\n            {months.map((month, index) => (\n              <Col key={index}>{month}</Col>\n            ))}\n          </Row>\n        </div>\n        <Row>\n          {MAP.map((maps, index) => (\n            <div key={index} className=\"line\">\n              {maps.map((each, index) => (\n                <div\n                  key={index}\n                  className={\n                    each === 0\n                      ? \"cell\"\n                      : exerciseDateList.check(each) > 5\n                      ? \"cell fill-5\"\n                      : \"cell fill-\" + exerciseDateList.check(each)\n                  }\n                  data-for={\n                    exerciseDateList.check(each) > 0 ? \"data\" + index : \"\"\n                  }\n                  data-tip={each}\n                >\n                  {exerciseDateList.check(each) > 0 && (\n                    <ReactTooltipStyled\n                      id={\"data\" + index}\n                      place=\"right\"\n                      getContent={(dataTip) => (\n                        <>\n                          <div\n                            style={{\n                              fontSize: \"13px\",\n                              fontWeight: \"bold\",\n                              marginBottom: \"10%\",\n                            }}\n                          >\n                            {dataTip}\n                          </div>\n                          {exerciseTypeList.check(dataTip) !== 0 &&\n                            exerciseTypeList.get(dataTip).map((item, index) => (\n                              <div key={index}>\n                                {item.name} : {item.count}\n                              </div>\n                            ))}\n                        </>\n                      )}\n                    />\n                  )}\n                </div>\n              ))}\n            </div>\n          ))}\n        </Row>\n      </Desktop>\n      <Mobile>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            className=\"months\"\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            {Mobilemonths.map((month, index) => (\n              <p style={{ margin: \"0 3%\" }} key={index}>\n                {month}\n              </p>\n            ))}\n          </div>\n        </div>\n        <Row>\n          {MobileMAP.map((maps, index) => (\n            <div key={index} className=\"line\">\n              {maps.map((each, index) => (\n                <div\n                  key={index}\n                  className={\n                    each === 0\n                      ? \"cell\"\n                      : exerciseDateList.check(each) > 5\n                      ? \"cell fill-5\"\n                      : \"cell fill-\" + exerciseDateList.check(each)\n                  }\n                  data-for={\n                    exerciseDateList.check(each) > 0 ? \"data\" + index : \"\"\n                  }\n                  data-tip={each}\n                >\n                  {exerciseDateList.check(each) > 0 && (\n                    <ReactTooltipStyled\n                      id={\"data\" + index}\n                      place=\"right\"\n                      getContent={(dataTip) => (\n                        <>\n                          <div\n                            style={{\n                              fontSize: \"13px\",\n                              fontWeight: \"bold\",\n                              marginBottom: \"10%\",\n                            }}\n                          >\n                            {dataTip}\n                          </div>\n                          {exerciseTypeList.check(dataTip) !== 0 &&\n                            exerciseTypeList.get(dataTip).map((item, index) => (\n                              <div key={index}>\n                                {item.name} : {item.count}\n                              </div>\n                            ))}\n                        </>\n                      )}\n                    />\n                  )}\n                </div>\n              ))}\n            </div>\n          ))}\n        </Row>\n      </Mobile>\n    </ExerciseHistoryTotal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}