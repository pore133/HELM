{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\HELF-master\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\HELF-master\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\HELF-master\\\\front\\\\src\\\\components\\\\MyDiet\\\\MyDietRegister.jsx\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { IMAGE_URL } from \"../../utils/https\";\nimport { setFoodCheckBox, setmyDietWeight, setImageDetectionListEmpty, MY_DIET_IMAGE_REQUEST, MY_DIET_REGISTER_REQUEST, FOOD_LIST_REQUEST, setFoodName } from \"../../store/modules/myDiet\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport dayjs from \"dayjs\";\nimport TextField from \"@mui/material/TextField\";\nimport { FormControlLabel, Checkbox } from \"@mui/material\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport Box from \"@mui/material/Box\";\nimport { MenuTitle, TotalStyle, RegisterReq, MealTypeButton, RegisterButton, BackButton, Titles, Description, ImageThumbnail, FoodCheckButton, foodcheckBox, StyledFormGroup, ButtonGroup } from \"./MyDietRegister.style\";\nimport { ButtonWrapper, ConfirmButton, CancelButton } from \"./MyDiet.style\";\nimport { FcCancel } from \"react-icons/fc\";\nimport { TailSpin } from \"react-loader-spinner\";\nimport { Camera } from \"react-camera-pro\";\nexport default function MyDietRegister() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n\n  var _useParams = useParams(),\n      date = _useParams.date;\n\n  var _useState = useState(\"\".concat(IMAGE_URL, \"default-image.png\")),\n      _useState2 = _slicedToArray(_useState, 2),\n      dietThumbnail = _useState2[0],\n      setDietThumbnail = _useState2[1];\n\n  var _useState3 = useState(date + \" 00:00:00\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      diaryDate = _useState4[0],\n      setDiaryDate = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      imagePath = _useState6[0],\n      setImagePath = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      mealTime = _useState8[0],\n      setMealTime = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      description = _useState10[0],\n      setDescription = _useState10[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.myDiet;\n  }),\n      foodName = _useSelector.foodName,\n      foods = _useSelector.foods,\n      imageDetectionLoading = _useSelector.imageDetectionLoading,\n      imageDetectionListEmpty = _useSelector.imageDetectionListEmpty;\n\n  var mealType = [\"아침\", \"점심\", \"저녁\", \"간식\"];\n  var myDietRegister = {\n    imagePath: imagePath,\n    diaryDate: diaryDate,\n    mealTime: mealTime,\n    description: description,\n    dietRegisterReqList: foodName\n  };\n  useEffect(function () {\n    dispatch({\n      type: FOOD_LIST_REQUEST\n    });\n    dispatch(setFoodName([]));\n    dispatch(setImageDetectionListEmpty(false));\n  }, [dispatch]);\n\n  var onImageHandler = function onImageHandler(e) {\n    if (e.target.files && e.target.files.length > 0) {\n      var file = e.target.files[0];\n      setDietThumbnail(URL.createObjectURL(file));\n      setImagePath(file);\n      dispatch({\n        type: MY_DIET_IMAGE_REQUEST,\n        data: {\n          imagePath: file\n        }\n      });\n    }\n  };\n\n  var _useState11 = useState(4),\n      _useState12 = _slicedToArray(_useState11, 2),\n      mealTimeIndex = _useState12[0],\n      setMealTimeIndex = _useState12[1];\n\n  var onMealTimeHandler = function onMealTimeHandler(e) {\n    setMealTimeIndex(e.target.getAttribute(\"data-index\"));\n    setMealTime(e.target.value);\n  };\n\n  var onDiaryDateHandler = function onDiaryDateHandler(e) {\n    setDiaryDate(date + dayjs(e).format(\" HH:mm:ss\"));\n  };\n\n  var onDescriptionHandler = function onDescriptionHandler(e) {\n    setDescription(e.target.value);\n  };\n\n  var registerMyDietButton = function registerMyDietButton() {\n    if (myDietRegister.imagePath === \"\") alert(\"이미지를 등록해주세요.\");else if (myDietRegister.diaryDate === \"\") alert(\"시간을 등록해주세요.\");else if (myDietRegister.mealTime === \"\") alert(\"시간대를 선택해주세요.\");else if (myDietRegister.description === \"\") alert(\"설명을 입력해주세요.\");else if (myDietRegister.dietRegisterReqList.length === 0) alert(\"이미지를 변경하거나 직접선택을 통해 음식을 선택해주세요.\");else {\n      dispatch({\n        type: MY_DIET_REGISTER_REQUEST,\n        data: myDietRegister\n      });\n    }\n  };\n\n  var goBack = function goBack() {\n    history.push(\"/dietdiary/\".concat(date));\n  };\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.myDiet;\n  }),\n      weights = _useSelector2.weights;\n\n  var WeightSelect = weights.map(function (weight, index) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: weight,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, weight, \"g\");\n  });\n\n  var onWeightHandler = function onWeightHandler(e) {\n    var pair = {\n      index: e.target.getAttribute(\"data-index\"),\n      weight: parseInt(e.target.value)\n    };\n    dispatch(setmyDietWeight(pair));\n  };\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      open = _useState14[0],\n      setOpen = _useState14[1];\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    return setOpen(false);\n  };\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      checkedInputs = _useState16[0],\n      setCheckedInputs = _useState16[1];\n\n  var changeHandler = function changeHandler(checked, id) {\n    if (checked) {\n      setCheckedInputs([].concat(_toConsumableArray(checkedInputs), [id]));\n    } else {\n      setCheckedInputs(checkedInputs.filter(function (el) {\n        return el !== id;\n      }));\n    }\n  };\n\n  var FoodCheckBox = foods.map(function (food, index) {\n    return /*#__PURE__*/React.createElement(FormControlLabel, {\n      key: index,\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        id: food,\n        onChange: function onChange(e) {\n          changeHandler(e.currentTarget.checked, food);\n        },\n        checked: checkedInputs.includes(food) ? true : false,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }),\n      label: /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          fontFamily: \"KOTRA_GOTHIC\",\n          paddingTop: \"15px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }\n      }, \" \", food),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }\n    });\n  });\n\n  var foodCheckDone = function foodCheckDone() {\n    dispatch(setFoodCheckBox(checkedInputs));\n    handleClose();\n  };\n\n  useEffect(function () {\n    setCheckedInputs([]);\n    var temp = [];\n    foodName.forEach(function (food) {\n      temp.push(food.foodName);\n    });\n    setCheckedInputs(temp);\n  }, [foodName]);\n  var camera = useRef(null);\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      cameraState = _useState18[0],\n      setCameraState = _useState18[1];\n\n  var _useState19 = useState(0),\n      _useState20 = _slicedToArray(_useState19, 2),\n      numberOfCameras = _useState20[0],\n      setNumberOfCameras = _useState20[1];\n\n  var cameraTakePhoto = function cameraTakePhoto(e) {\n    var dataurl = camera.current.takePhoto();\n    setCameraState(false);\n    setDietThumbnail(dataurl);\n    var arr = dataurl.split(\",\"),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n\n    var file = new File([u8arr], \"camera.jpg\", {\n      type: mime\n    });\n    setImagePath(file);\n    dispatch({\n      type: MY_DIET_IMAGE_REQUEST,\n      data: {\n        imagePath: file\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, \"MY\\uC2DD\\uB2E8 \\uB4F1\\uB85D\"), /*#__PURE__*/React.createElement(TotalStyle, {\n    style: {\n      marginTop: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    style: {\n      minWidth: \"340px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, cameraState ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Camera, {\n    ref: camera,\n    aspectRatio: 4 / 3,\n    numberOfCamerasCallback: setNumberOfCameras,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"imageSelect\",\n    onClick: cameraTakePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }, \"\\uCD2C\\uC601\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"imageSelect\",\n    hidden: numberOfCameras <= 1,\n    onClick: function onClick() {\n      camera.current.switchCamera();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 19\n    }\n  }, \"\\uC804\\uD658\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"imageSelect\",\n    onClick: function onClick() {\n      return setCameraState(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  }, \"\\uCDE8\\uC18C\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ImageThumbnail, {\n    src: dietThumbnail,\n    alt: \"\\uC774\\uBBF8\\uC9C0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"imageSelect\",\n    htmlFor: \"input-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 19\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC120\\uD0DD\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: onImageHandler,\n    type: \"file\",\n    id: \"input-file\",\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"imageSelect\",\n    onClick: function onClick() {\n      return setCameraState(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 19\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uCD2C\\uC601\"))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RegisterReq, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Titles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  }, \"Food\"), /*#__PURE__*/React.createElement(FoodCheckButton, {\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  }, \"\\uC9C1\\uC811\\uC120\\uD0DD\"), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"modal-modal-title\",\n    \"aria-describedby\": \"modal-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: foodcheckBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    id: \"modal-modal-title\",\n    variant: \"h4\",\n    component: \"h2\",\n    style: {\n      fontFamily: \"KOTRA_BOLD-Bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 21\n    }\n  }, \"\\uC74C\\uC2DD \\uC120\\uD0DD\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    id: \"modal-modal-description\",\n    sx: {\n      mt: 2\n    },\n    style: {\n      fontFamily: \"KOTRA_BOLD-Bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 21\n    }\n  }, \"\\uD574\\uB2F9\\uD558\\uB294 \\uC74C\\uC2DD \\uC885\\uB958\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"), /*#__PURE__*/React.createElement(StyledFormGroup, {\n    style: {\n      overflowX: \"hidden\",\n      overflowY: \"auto\",\n      flexWrap: \"nowrap\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 21\n    }\n  }, FoodCheckBox), /*#__PURE__*/React.createElement(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ConfirmButton, {\n    onClick: foodCheckDone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 23\n    }\n  }, \"\\uC644\\uB8CC\"), /*#__PURE__*/React.createElement(CancelButton, {\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 23\n    }\n  }, \"\\uB2EB\\uAE30\")))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"15px\",\n      color: \"grey\",\n      fontFamily: \"KOTRA_GOTHIC\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 17\n    }\n  }, \"\\uC74C\\uC2DD\\uBCC4 \\uBB34\\uAC8C\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"), imageDetectionLoading && /*#__PURE__*/React.createElement(TailSpin, {\n    color: \"#2E7D32\",\n    height: 40,\n    width: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 19\n    }\n  }), imageDetectionListEmpty && foodName.length === 0 && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"13px\",\n      color: \"rgb(56 55 55)\",\n      fontFamily: \"KOTRA_GOTHIC\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FcCancel, {\n    size: \"17\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 21\n    }\n  }), \" \\uC778\\uC2DD\\uB41C \\uC74C\\uC2DD\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uC774\\uBBF8\\uC9C0\\uB97C \\uBCC0\\uACBD\\uD558\\uAC70\\uB098 \\uC9C1\\uC811\\uC120\\uD0DD\\uC744 \\uD1B5\\uD574 \\uC74C\\uC2DD\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  }, foodName.map(function (food, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 21\n      }\n    }, food.foodName, \" \", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-index\": index,\n      style: {\n        marginTop: \"1%\",\n        borderRadius: \"4px\",\n        outline: \"0 none\",\n        cursor: \"pointer\"\n      },\n      onChange: onWeightHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 23\n      }\n    }, WeightSelect));\n  })), /*#__PURE__*/React.createElement(Titles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 17\n    }\n  }, \"Meal Type\"), /*#__PURE__*/React.createElement(MealTypeButton, {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 17\n    }\n  }, mealType.map(function (meal, index) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: parseInt(mealTimeIndex) === index ? \"active\" : \"\",\n      key: index,\n      value: meal,\n      \"data-index\": index,\n      onClick: onMealTimeHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 21\n      }\n    }, meal);\n  })), /*#__PURE__*/React.createElement(Titles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 17\n    }\n  }, \"Meal Time\"), /*#__PURE__*/React.createElement(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TimePicker, {\n    label: \"\\uC2DC\\uAC04\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694\",\n    value: myDietRegister.diaryDate,\n    onChange: function onChange(newValue) {\n      onDiaryDateHandler(newValue);\n    },\n    renderInput: function renderInput(params) {\n      return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 46\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Titles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 17\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(Description, {\n    rows: \"8\",\n    onChange: onDescriptionHandler,\n    placeholder: \"\\uC124\\uBA85\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BackButton, {\n    onClick: goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 11\n    }\n  }, \"\\uB098\\uAC00\\uAE30\"), /*#__PURE__*/React.createElement(RegisterButton, {\n    onClick: registerMyDietButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 11\n    }\n  }, \"\\uB4F1\\uB85D\"))));\n}","map":{"version":3,"sources":["C:/Users/JUN-D/Desktop/HELF-master/front/src/components/MyDiet/MyDietRegister.jsx"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","useParams","useHistory","IMAGE_URL","setFoodCheckBox","setmyDietWeight","setImageDetectionListEmpty","MY_DIET_IMAGE_REQUEST","MY_DIET_REGISTER_REQUEST","FOOD_LIST_REQUEST","setFoodName","AdapterDateFns","LocalizationProvider","TimePicker","dayjs","TextField","FormControlLabel","Checkbox","Container","Row","Col","Typography","Modal","Box","MenuTitle","TotalStyle","RegisterReq","MealTypeButton","RegisterButton","BackButton","Titles","Description","ImageThumbnail","FoodCheckButton","foodcheckBox","StyledFormGroup","ButtonGroup","ButtonWrapper","ConfirmButton","CancelButton","FcCancel","TailSpin","Camera","MyDietRegister","dispatch","history","date","dietThumbnail","setDietThumbnail","diaryDate","setDiaryDate","imagePath","setImagePath","mealTime","setMealTime","description","setDescription","state","myDiet","foodName","foods","imageDetectionLoading","imageDetectionListEmpty","mealType","myDietRegister","dietRegisterReqList","type","onImageHandler","e","target","files","length","file","URL","createObjectURL","data","mealTimeIndex","setMealTimeIndex","onMealTimeHandler","getAttribute","value","onDiaryDateHandler","format","onDescriptionHandler","registerMyDietButton","alert","goBack","push","weights","WeightSelect","map","weight","index","onWeightHandler","pair","parseInt","open","setOpen","handleOpen","handleClose","checkedInputs","setCheckedInputs","changeHandler","checked","id","filter","el","FoodCheckBox","food","currentTarget","includes","fontFamily","paddingTop","foodCheckDone","temp","forEach","camera","cameraState","setCameraState","numberOfCameras","setNumberOfCameras","cameraTakePhoto","dataurl","current","takePhoto","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","marginTop","minWidth","switchCamera","display","mt","overflowX","overflowY","flexWrap","fontSize","color","borderRadius","outline","cursor","meal","newValue","params"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { IMAGE_URL } from \"../../utils/https\";\nimport {\n  setFoodCheckBox,\n  setmyDietWeight,\n  setImageDetectionListEmpty,\n  MY_DIET_IMAGE_REQUEST,\n  MY_DIET_REGISTER_REQUEST,\n  FOOD_LIST_REQUEST,\n  setFoodName,\n} from \"../../store/modules/myDiet\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport TimePicker from \"@mui/lab/TimePicker\";\nimport dayjs from \"dayjs\";\nimport TextField from \"@mui/material/TextField\";\nimport { FormControlLabel, Checkbox } from \"@mui/material\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport Box from \"@mui/material/Box\";\nimport {\n  MenuTitle,\n  TotalStyle,\n  RegisterReq,\n  MealTypeButton,\n  RegisterButton,\n  BackButton,\n  Titles,\n  Description,\n  ImageThumbnail,\n  FoodCheckButton,\n  foodcheckBox,\n  StyledFormGroup,\n  ButtonGroup,\n} from \"./MyDietRegister.style\";\nimport { ButtonWrapper, ConfirmButton, CancelButton } from \"./MyDiet.style\";\nimport { FcCancel } from \"react-icons/fc\";\nimport { TailSpin } from \"react-loader-spinner\";\nimport { Camera } from \"react-camera-pro\";\n\nexport default function MyDietRegister() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { date } = useParams();\n\n  const [dietThumbnail, setDietThumbnail] = useState(\n    `${IMAGE_URL}default-image.png`\n  );\n  const [diaryDate, setDiaryDate] = useState(date + \" 00:00:00\");\n  const [imagePath, setImagePath] = useState(null);\n  const [mealTime, setMealTime] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const {\n    foodName,\n    foods,\n    imageDetectionLoading,\n    imageDetectionListEmpty,\n  } = useSelector((state) => state.myDiet);\n  const mealType = [\"아침\", \"점심\", \"저녁\", \"간식\"];\n\n  const myDietRegister = {\n    imagePath: imagePath,\n    diaryDate: diaryDate,\n    mealTime: mealTime,\n    description: description,\n    dietRegisterReqList: foodName,\n  };\n\n  useEffect(() => {\n    dispatch({ type: FOOD_LIST_REQUEST });\n    dispatch(setFoodName([]));\n    dispatch(setImageDetectionListEmpty(false));\n  }, [dispatch]);\n\n  const onImageHandler = (e) => {\n    if (e.target.files && e.target.files.length > 0) {\n      const file = e.target.files[0];\n      setDietThumbnail(URL.createObjectURL(file));\n      setImagePath(file);\n      dispatch({\n        type: MY_DIET_IMAGE_REQUEST,\n        data: { imagePath: file },\n      });\n    }\n  };\n\n  const [mealTimeIndex, setMealTimeIndex] = useState(4);\n  const onMealTimeHandler = (e) => {\n    setMealTimeIndex(e.target.getAttribute(\"data-index\"));\n    setMealTime(e.target.value);\n  };\n\n  const onDiaryDateHandler = (e) => {\n    setDiaryDate(date + dayjs(e).format(\" HH:mm:ss\"));\n  };\n\n  const onDescriptionHandler = (e) => {\n    setDescription(e.target.value);\n  };\n\n  const registerMyDietButton = () => {\n    if (myDietRegister.imagePath === \"\") alert(\"이미지를 등록해주세요.\");\n    else if (myDietRegister.diaryDate === \"\") alert(\"시간을 등록해주세요.\");\n    else if (myDietRegister.mealTime === \"\") alert(\"시간대를 선택해주세요.\");\n    else if (myDietRegister.description === \"\") alert(\"설명을 입력해주세요.\");\n    else if (myDietRegister.dietRegisterReqList.length === 0)\n      alert(\"이미지를 변경하거나 직접선택을 통해 음식을 선택해주세요.\");\n    else {\n      dispatch({\n        type: MY_DIET_REGISTER_REQUEST,\n        data: myDietRegister,\n      });\n    }\n  };\n\n  const goBack = () => {\n    history.push(`/dietdiary/${date}`);\n  };\n\n  const { weights } = useSelector((state) => state.myDiet);\n  const WeightSelect = weights.map((weight, index) => {\n    return (\n      <option key={index} value={weight}>\n        {weight}g\n      </option>\n    );\n  });\n\n  const onWeightHandler = (e) => {\n    const pair = {\n      index: e.target.getAttribute(\"data-index\"),\n      weight: parseInt(e.target.value),\n    };\n    dispatch(setmyDietWeight(pair));\n  };\n\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => setOpen(false);\n\n  const [checkedInputs, setCheckedInputs] = useState([]);\n  const changeHandler = (checked, id) => {\n    if (checked) {\n      setCheckedInputs([...checkedInputs, id]);\n    } else {\n      setCheckedInputs(checkedInputs.filter((el) => el !== id));\n    }\n  };\n\n  const FoodCheckBox = foods.map((food, index) => {\n    return (\n      <FormControlLabel\n        key={index}\n        control={\n          <Checkbox\n            id={food}\n            onChange={(e) => {\n              changeHandler(e.currentTarget.checked, food);\n            }}\n            checked={checkedInputs.includes(food) ? true : false}\n          />\n        }\n        label={\n          <p style={{ fontFamily: \"KOTRA_GOTHIC\", paddingTop: \"15px\" }}>\n            {\" \"}\n            {food}\n          </p>\n        }\n      ></FormControlLabel>\n    );\n  });\n\n  const foodCheckDone = () => {\n    dispatch(setFoodCheckBox(checkedInputs));\n    handleClose();\n  };\n\n  useEffect(() => {\n    setCheckedInputs([]);\n    const temp = [];\n    foodName.forEach((food) => {\n      temp.push(food.foodName);\n    });\n    setCheckedInputs(temp);\n  }, [foodName]);\n\n  const camera = useRef(null);\n  const [cameraState, setCameraState] = useState(false);\n  const [numberOfCameras, setNumberOfCameras] = useState(0);\n\n  const cameraTakePhoto = (e) => {\n    const dataurl = camera.current.takePhoto();\n    setCameraState(false);\n    setDietThumbnail(dataurl);\n    var arr = dataurl.split(\",\"),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    const file = new File([u8arr], \"camera.jpg\", { type: mime });\n    setImagePath(file);\n    dispatch({\n      type: MY_DIET_IMAGE_REQUEST,\n      data: { imagePath: file },\n    });\n  };\n\n  return (\n    <div>\n      <Container>\n        <MenuTitle>MY식단 등록</MenuTitle>\n        <TotalStyle style={{ marginTop: \"2%\" }}>\n          <Row>\n            <Col style={{ minWidth: \"340px\" }}>\n              {cameraState ? (\n                <>\n                  <Camera\n                    ref={camera}\n                    aspectRatio={4 / 3}\n                    numberOfCamerasCallback={setNumberOfCameras}\n                  />\n                  <button className=\"imageSelect\" onClick={cameraTakePhoto}>\n                    촬영\n                  </button>\n                  <button\n                    className=\"imageSelect\"\n                    hidden={numberOfCameras <= 1}\n                    onClick={() => {\n                      camera.current.switchCamera();\n                    }}\n                  >\n                    전환\n                  </button>\n                  <button\n                    className=\"imageSelect\"\n                    onClick={() => setCameraState(false)}\n                  >\n                    취소\n                  </button>\n                </>\n              ) : (\n                <>\n                  <ImageThumbnail\n                    src={dietThumbnail}\n                    alt=\"이미지\"\n                  ></ImageThumbnail>\n                  <label className=\"imageSelect\" htmlFor=\"input-file\">\n                    이미지 선택\n                  </label>\n                  <input\n                    onChange={onImageHandler}\n                    type=\"file\"\n                    id=\"input-file\"\n                    style={{ display: \"none\" }}\n                  ></input>\n                  <button\n                    className=\"imageSelect\"\n                    onClick={() => setCameraState(true)}\n                  >\n                    이미지 촬영\n                  </button>\n                </>\n              )}\n            </Col>\n            <Col>\n              <RegisterReq>\n                <Titles>Food</Titles>\n                <FoodCheckButton onClick={handleOpen}>직접선택</FoodCheckButton>\n                <Modal\n                  open={open}\n                  onClose={handleClose}\n                  aria-labelledby=\"modal-modal-title\"\n                  aria-describedby=\"modal-modal-description\"\n                >\n                  <Box sx={foodcheckBox}>\n                    <Typography\n                      id=\"modal-modal-title\"\n                      variant=\"h4\"\n                      component=\"h2\"\n                      style={{ fontFamily: \"KOTRA_BOLD-Bold\" }}\n                    >\n                      음식 선택\n                    </Typography>\n                    <hr />\n                    <Typography\n                      id=\"modal-modal-description\"\n                      sx={{ mt: 2 }}\n                      style={{ fontFamily: \"KOTRA_BOLD-Bold\" }}\n                    >\n                      해당하는 음식 종류를 선택해주세요.\n                    </Typography>\n                    <StyledFormGroup\n                      style={{\n                        overflowX: \"hidden\",\n                        overflowY: \"auto\",\n                        flexWrap: \"nowrap\",\n                      }}\n                    >\n                      {FoodCheckBox}\n                    </StyledFormGroup>\n                    <ButtonWrapper>\n                      <ConfirmButton onClick={foodCheckDone}>\n                        완료\n                      </ConfirmButton>\n                      <CancelButton onClick={handleClose}>닫기</CancelButton>\n                    </ButtonWrapper>\n                  </Box>\n                </Modal>\n                <div\n                  style={{\n                    fontSize: \"15px\",\n                    color: \"grey\",\n                    fontFamily: \"KOTRA_GOTHIC\",\n                  }}\n                >\n                  음식별 무게를 선택해주세요.\n                </div>\n                {imageDetectionLoading && (\n                  <TailSpin color=\"#2E7D32\" height={40} width={40}></TailSpin>\n                )}\n                {imageDetectionListEmpty && foodName.length === 0 && (\n                  <div\n                    style={{\n                      fontSize: \"13px\",\n                      color: \"rgb(56 55 55)\",\n                      fontFamily: \"KOTRA_GOTHIC\",\n                    }}\n                  >\n                    <FcCancel size=\"17\"></FcCancel> 인식된 음식이 없습니다.\n                    이미지를 변경하거나 직접선택을 통해 음식을 선택해주세요.\n                  </div>\n                )}\n                <div>\n                  {foodName.map((food, index) => (\n                    <div key={index}>\n                      {food.foodName}{\" \"}\n                      <select\n                        data-index={index}\n                        style={{\n                          marginTop: \"1%\",\n                          borderRadius: \"4px\",\n                          outline: \"0 none\",\n                          cursor: \"pointer\",\n                        }}\n                        onChange={onWeightHandler}\n                      >\n                        {WeightSelect}\n                      </select>\n                    </div>\n                  ))}\n                </div>\n                <Titles>Meal Type</Titles>\n                <MealTypeButton style={{ display: \"flex\" }}>\n                  {mealType.map((meal, index) => (\n                    <button\n                      className={\n                        parseInt(mealTimeIndex) === index ? \"active\" : \"\"\n                      }\n                      key={index}\n                      value={meal}\n                      data-index={index}\n                      onClick={onMealTimeHandler}\n                    >\n                      {meal}\n                    </button>\n                  ))}\n                </MealTypeButton>\n                <Titles>Meal Time</Titles>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <TimePicker\n                    label=\"시간을 선택해주세요\"\n                    value={myDietRegister.diaryDate}\n                    onChange={(newValue) => {\n                      onDiaryDateHandler(newValue);\n                    }}\n                    renderInput={(params) => <TextField {...params} />}\n                  />\n                </LocalizationProvider>\n                <Titles>Description</Titles>\n                <Description\n                  rows=\"8\"\n                  onChange={onDescriptionHandler}\n                  placeholder=\"설명을 입력해주세요.\"\n                ></Description>\n              </RegisterReq>\n            </Col>\n          </Row>\n        </TotalStyle>\n        <ButtonGroup>\n          <BackButton onClick={goBack}>나가기</BackButton>\n          <RegisterButton onClick={registerMyDietButton}>등록</RegisterButton>\n        </ButtonGroup>\n      </Container>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}