{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/viz/core/m_base_widget.js)\r\n * Version: 23.1.6\r\n * Build date: Fri Oct 13 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport devices from \"../../../core/devices\";\nimport domAdapter from \"../../../core/dom_adapter\";\nimport DOMComponent from \"../../../core/dom_component\";\nimport $ from \"../../../core/renderer\";\nimport { noop } from \"../../../core/utils/common\";\nimport { when } from \"../../../core/utils/deferred\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { each } from \"../../../core/utils/iterator\";\nimport { getHeight, getWidth } from \"../../../core/utils/size\";\nimport { isDefined, isFunction, isNumeric, isObject as _isObject, type } from \"../../../core/utils/type\";\nimport { getWindow, hasWindow } from \"../../../core/utils/window\";\nimport eventsEngine from \"../../../events/core/events_engine\";\nimport { BaseThemeManager } from \"../../../viz/core/base_theme_manager\";\nimport { createEventTrigger, createIncidentOccurred, createResizeHandler } from \"../../../viz/core/base_widget.utils\";\nimport warnings from \"../../../viz/core/errors_warnings\";\nimport { changes, replaceInherit } from \"../../../viz/core/helpers\";\nimport _Layout from \"../../../viz/core/layout\";\nimport { Renderer } from \"../../../viz/core/renderers/renderer\";\nimport { parseScalar as _parseScalar } from \"../../../viz/core/utils\";\nimport graphicObject from \"../../common/m_charts\";\nvar floor = Math.floor;\nvar log = warnings.log;\nvar SIZE_CHANGING_THRESHOLD = 1;\nvar OPTION_RTL_ENABLED = \"rtlEnabled\";\nvar SIZED_ELEMENT_CLASS = \"dx-sized-element\";\nvar baseOptionMethod = DOMComponent.prototype.option;\n\nfunction getTrue() {\n  return true;\n}\n\nfunction getFalse() {\n  return false;\n}\n\nfunction areCanvasesDifferent(canvas1, canvas2) {\n  var sizeLessThreshold = [\"width\", \"height\"].every(function (key) {\n    return Math.abs(canvas1[key] - canvas2[key]) < SIZE_CHANGING_THRESHOLD;\n  });\n  var canvasCoordsIsEqual = [\"left\", \"right\", \"top\", \"bottom\"].every(function (key) {\n    return canvas1[key] === canvas2[key];\n  });\n  return !(sizeLessThreshold && canvasCoordsIsEqual);\n}\n\nfunction defaultOnIncidentOccurred(e) {\n  if (!e.component._eventsStrategy.hasEvent(\"incidentOccurred\")) {\n    log.apply(null, [e.target.id].concat(e.target.args || []));\n  }\n}\n\nfunction pickPositiveValue(values) {\n  return values.reduce(function (result, value) {\n    return value > 0 && !result ? value : result;\n  }, 0);\n}\n\nvar getEmptyComponent = function getEmptyComponent() {\n  var emptyComponentConfig = {\n    _initTemplates: function _initTemplates() {},\n    ctor: function ctor(element, options) {\n      this.callBase(element, options);\n      var sizedElement = domAdapter.createElement(\"div\");\n      var width = options && isNumeric(options.width) ? \"\".concat(options.width, \"px\") : \"100%\";\n      var height = options && isNumeric(options.height) ? \"\".concat(options.height, \"px\") : \"\".concat(this._getDefaultSize().height, \"px\");\n      domAdapter.setStyle(sizedElement, \"width\", width);\n      domAdapter.setStyle(sizedElement, \"height\", height);\n      domAdapter.setClass(sizedElement, SIZED_ELEMENT_CLASS, false);\n      domAdapter.insertElement(element, sizedElement);\n    }\n  };\n  var EmptyComponent = DOMComponent.inherit(emptyComponentConfig);\n  var originalInherit = EmptyComponent.inherit;\n\n  EmptyComponent.inherit = function (config) {\n    Object.keys(config).forEach(function (field) {\n      if (isFunction(config[field]) && \"_\" !== field.substr(0, 1) && \"option\" !== field || \"_dispose\" === field || \"_optionChanged\" === field) {\n        config[field] = noop;\n      }\n    });\n    return originalInherit.call(this, config);\n  };\n\n  return EmptyComponent;\n};\n\nfunction callForEach(functions) {\n  functions.forEach(function (c) {\n    return c();\n  });\n}\n\nfunction floorCanvasDimensions(canvas) {\n  return _extends(_extends({}, canvas), {\n    height: floor(canvas.height),\n    width: floor(canvas.width)\n  });\n}\n\nvar isServerSide = !hasWindow();\n\nfunction sizeIsValid(value) {\n  return isDefined(value) && value > 0;\n}\n\nvar baseWidget = isServerSide ? getEmptyComponent() : DOMComponent.inherit({\n  _eventsMap: {\n    onIncidentOccurred: {\n      name: \"incidentOccurred\",\n      actionSettings: {\n        excludeValidators: [\"disabled\"]\n      }\n    },\n    onDrawn: {\n      name: \"drawn\",\n      actionSettings: {\n        excludeValidators: [\"disabled\"]\n      }\n    }\n  },\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      onIncidentOccurred: defaultOnIncidentOccurred\n    });\n  },\n  _useLinks: true,\n  _init: function _init() {\n    var _this = this;\n\n    this._$element.children(\".\".concat(SIZED_ELEMENT_CLASS)).remove();\n\n    this._graphicObjects = {};\n    this.callBase.apply(this, arguments);\n    this._changesLocker = 0;\n    this._optionChangedLocker = 0;\n    this._asyncFirstDrawing = true;\n    this._changes = changes();\n\n    this._suspendChanges();\n\n    this._themeManager = this._createThemeManager();\n\n    this._themeManager.setCallback(function () {\n      _this._requestChange(_this._themeDependentChanges);\n    });\n\n    this._renderElementAttributes();\n\n    this._initRenderer();\n\n    var useLinks = this._useLinks;\n\n    if (useLinks) {\n      this._renderer.root.enableLinks().virtualLink(\"core\").virtualLink(\"peripheral\");\n    }\n\n    this._renderVisibilityChange();\n\n    this._attachVisibilityChangeHandlers();\n\n    this._toggleParentsScrollSubscription(this._isVisible());\n\n    this._initEventTrigger();\n\n    this._incidentOccurred = createIncidentOccurred(this.NAME, this._eventTrigger);\n    this._layout = new _Layout();\n\n    if (useLinks) {\n      this._renderer.root.linkAfter(\"core\");\n    }\n\n    this._initPlugins();\n\n    this._initCore();\n\n    if (useLinks) {\n      this._renderer.root.linkAfter();\n    }\n\n    this._change(this._initialChanges);\n  },\n  _createThemeManager: function _createThemeManager() {\n    return new BaseThemeManager(this._getThemeManagerOptions());\n  },\n  _getThemeManagerOptions: function _getThemeManagerOptions() {\n    return {\n      themeSection: this._themeSection,\n      fontFields: this._fontFields\n    };\n  },\n  _initialChanges: [\"LAYOUT\", \"RESIZE_HANDLER\", \"THEME\", \"DISABLED\"],\n  _initPlugins: function _initPlugins() {\n    var _this2 = this;\n\n    each(this._plugins, function (_, plugin) {\n      plugin.init.call(_this2);\n    });\n  },\n  _disposePlugins: function _disposePlugins() {\n    var _this3 = this;\n\n    each(this._plugins.slice().reverse(), function (_, plugin) {\n      plugin.dispose.call(_this3);\n    });\n  },\n  _change: function _change(codes) {\n    this._changes.add(codes);\n  },\n  _suspendChanges: function _suspendChanges() {\n    this._changesLocker += 1;\n  },\n  _resumeChanges: function _resumeChanges() {\n    if (0 === --this._changesLocker && this._changes.count() > 0 && !this._applyingChanges) {\n      this._renderer.lock();\n\n      this._applyingChanges = true;\n\n      this._applyChanges();\n\n      this._changes.reset();\n\n      this._applyingChanges = false;\n\n      this._changesApplied();\n\n      this._renderer.unlock();\n\n      if (this._optionsQueue) {\n        this._applyQueuedOptions();\n      }\n\n      this.resolveItemsDeferred(this._legend ? [this._legend] : []);\n      this._optionChangedLocker += 1;\n\n      this._notify();\n\n      this._optionChangedLocker -= 1;\n    }\n  },\n  resolveItemsDeferred: function resolveItemsDeferred(items) {\n    this._resolveDeferred(this._getTemplatesItems(items));\n  },\n  _collectTemplatesFromItems: function _collectTemplatesFromItems(items) {\n    return items.reduce(function (prev, i) {\n      return {\n        items: prev.items.concat(i.getTemplatesDef()),\n        groups: prev.groups.concat(i.getTemplatesGroups())\n      };\n    }, {\n      items: [],\n      groups: []\n    });\n  },\n  _getTemplatesItems: function _getTemplatesItems(items) {\n    var elements = this._collectTemplatesFromItems(items);\n\n    var extraItems = this._getExtraTemplatesItems();\n\n    return {\n      items: extraItems.items.concat(elements.items),\n      groups: extraItems.groups.concat(elements.groups),\n      launchRequest: [extraItems.launchRequest],\n      doneRequest: [extraItems.doneRequest]\n    };\n  },\n  _getExtraTemplatesItems: function _getExtraTemplatesItems() {\n    return {\n      items: [],\n      groups: [],\n      launchRequest: function launchRequest() {},\n      doneRequest: function doneRequest() {}\n    };\n  },\n  _resolveDeferred: function _resolveDeferred(_ref) {\n    var _this4 = this;\n\n    var items = _ref.items,\n        launchRequest = _ref.launchRequest,\n        doneRequest = _ref.doneRequest,\n        groups = _ref.groups;\n\n    this._setGroupsVisibility(groups, \"hidden\");\n\n    if (this._changesApplying) {\n      this._changesApplying = false;\n      callForEach(doneRequest);\n      return;\n    }\n\n    var syncRendering = true;\n    when.apply(this, items).done(function () {\n      if (syncRendering) {\n        _this4._setGroupsVisibility(groups, \"visible\");\n\n        return;\n      }\n\n      callForEach(launchRequest);\n      _this4._changesApplying = true;\n      var changes = [\"LAYOUT\", \"FULL_RENDER\"];\n\n      if (_this4._asyncFirstDrawing) {\n        changes.push(\"FORCE_FIRST_DRAWING\");\n        _this4._asyncFirstDrawing = false;\n      } else {\n        changes.push(\"FORCE_DRAWING\");\n      }\n\n      _this4._requestChange(changes);\n\n      _this4._setGroupsVisibility(groups, \"visible\");\n    });\n    syncRendering = false;\n  },\n  _setGroupsVisibility: function _setGroupsVisibility(groups, visibility) {\n    groups.forEach(function (g) {\n      return g.attr({\n        visibility: visibility\n      });\n    });\n  },\n  _applyQueuedOptions: function _applyQueuedOptions() {\n    var queue = this._optionsQueue;\n    this._optionsQueue = null;\n    this.beginUpdate();\n    each(queue, function (_, action) {\n      action();\n    });\n    this.endUpdate();\n  },\n  _requestChange: function _requestChange(codes) {\n    this._suspendChanges();\n\n    this._change(codes);\n\n    this._resumeChanges();\n  },\n  _applyChanges: function _applyChanges() {\n    var changes = this._changes;\n    var order = this._totalChangesOrder;\n    var changesOrderLength = order.length;\n\n    for (var i = 0; i < changesOrderLength; i += 1) {\n      if (changes.has(order[i])) {\n        this[\"_change_\".concat(order[i])]();\n      }\n    }\n  },\n  _optionChangesOrder: [\"EVENTS\", \"THEME\", \"RENDERER\", \"RESIZE_HANDLER\"],\n  _layoutChangesOrder: [\"ELEMENT_ATTR\", \"CONTAINER_SIZE\", \"LAYOUT\"],\n  _customChangesOrder: [\"DISABLED\"],\n  _change_EVENTS: function _change_EVENTS() {\n    this._eventTrigger.applyChanges();\n  },\n  _change_THEME: function _change_THEME() {\n    this._setThemeAndRtl();\n  },\n  _change_RENDERER: function _change_RENDERER() {\n    this._setRendererOptions();\n  },\n  _change_RESIZE_HANDLER: function _change_RESIZE_HANDLER() {\n    this._setupResizeHandler();\n  },\n  _change_ELEMENT_ATTR: function _change_ELEMENT_ATTR() {\n    this._renderElementAttributes();\n\n    this._change([\"CONTAINER_SIZE\"]);\n  },\n  _change_CONTAINER_SIZE: function _change_CONTAINER_SIZE() {\n    this._updateSize();\n  },\n  _change_LAYOUT: function _change_LAYOUT() {\n    this._setContentSize();\n  },\n  _change_DISABLED: function _change_DISABLED() {\n    var renderer = this._renderer;\n    var root = renderer.root;\n\n    if (this.option(\"disabled\")) {\n      this._initDisabledState = root.attr(\"pointer-events\");\n      root.attr({\n        \"pointer-events\": \"none\",\n        filter: renderer.getGrayScaleFilter().id\n      });\n    } else if (\"none\" === root.attr(\"pointer-events\")) {\n      root.attr({\n        \"pointer-events\": isDefined(this._initDisabledState) ? this._initDisabledState : null,\n        filter: null\n      });\n    }\n  },\n  _themeDependentChanges: [\"RENDERER\"],\n  _initRenderer: function _initRenderer() {\n    var rawCanvas = this._calculateRawCanvas();\n\n    this._canvas = floorCanvasDimensions(rawCanvas);\n    this._renderer = new Renderer({\n      cssClass: \"\".concat(this._rootClassPrefix, \" \").concat(this._rootClass),\n      pathModified: this.option(\"pathModified\"),\n      container: this._$element[0]\n    });\n\n    this._renderer.resize(this._canvas.width, this._canvas.height);\n  },\n  _disposeRenderer: function _disposeRenderer() {\n    this._renderer.dispose();\n  },\n  _disposeGraphicObjects: function _disposeGraphicObjects() {\n    var _this5 = this;\n\n    Object.keys(this._graphicObjects).forEach(function (id) {\n      _this5._graphicObjects[id].dispose();\n    });\n    this._graphicObjects = null;\n  },\n  _getAnimationOptions: noop,\n  render: function render() {\n    this._requestChange([\"CONTAINER_SIZE\"]);\n\n    var visible = this._isVisible();\n\n    this._toggleParentsScrollSubscription(visible);\n\n    !visible && this._stopCurrentHandling();\n  },\n  _toggleParentsScrollSubscription: function _toggleParentsScrollSubscription(subscribe) {\n    var $parents = $(this._renderer.root.element).parents();\n\n    if (\"generic\" === devices.real().platform) {\n      $parents = $parents.add(getWindow());\n    }\n\n    this._proxiedTargetParentsScrollHandler = this._proxiedTargetParentsScrollHandler || function () {\n      this._stopCurrentHandling();\n    }.bind(this);\n\n    eventsEngine.off($(\"\").add(this._$prevRootParents), \"scroll.viz_widgets\", this._proxiedTargetParentsScrollHandler);\n\n    if (subscribe) {\n      eventsEngine.on($parents, \"scroll.viz_widgets\", this._proxiedTargetParentsScrollHandler);\n      this._$prevRootParents = $parents;\n    }\n  },\n  _stopCurrentHandling: noop,\n  _dispose: function _dispose() {\n    if (this._disposed) {\n      return;\n    }\n\n    this.callBase.apply(this, arguments);\n\n    this._toggleParentsScrollSubscription(false);\n\n    this._removeResizeHandler();\n\n    this._layout.dispose();\n\n    this._eventTrigger.dispose();\n\n    this._disposeCore();\n\n    this._disposePlugins();\n\n    this._disposeGraphicObjects();\n\n    this._disposeRenderer();\n\n    this._themeManager.dispose();\n\n    this._themeManager = null;\n    this._renderer = null;\n    this._eventTrigger = null;\n  },\n  _initEventTrigger: function _initEventTrigger() {\n    var _this6 = this;\n\n    this._eventTrigger = createEventTrigger(this._eventsMap, function (name, actionSettings) {\n      return _this6._createActionByOption(name, actionSettings);\n    });\n  },\n  _calculateRawCanvas: function _calculateRawCanvas() {\n    var _this7 = this;\n\n    var size = this.option(\"size\") || {};\n    var margin = this.option(\"margin\") || {};\n    var defaultCanvas = this._getDefaultSize() || {};\n\n    var getSizeOfSide = function getSizeOfSide(size, side, getter) {\n      if (sizeIsValid(size[side]) || !hasWindow()) {\n        return 0;\n      }\n\n      var elementSize = getter(_this7._$element);\n      return elementSize <= 1 ? 0 : elementSize;\n    };\n\n    var elementWidth = getSizeOfSide(size, \"width\", function (x) {\n      return getWidth(x);\n    });\n    var elementHeight = getSizeOfSide(size, \"height\", function (x) {\n      return getHeight(x);\n    });\n    var canvas = {\n      width: size.width <= 0 ? 0 : pickPositiveValue([size.width, elementWidth, defaultCanvas.width]),\n      height: size.height <= 0 ? 0 : pickPositiveValue([size.height, elementHeight, defaultCanvas.height]),\n      left: pickPositiveValue([margin.left, defaultCanvas.left]),\n      top: pickPositiveValue([margin.top, defaultCanvas.top]),\n      right: pickPositiveValue([margin.right, defaultCanvas.right]),\n      bottom: pickPositiveValue([margin.bottom, defaultCanvas.bottom])\n    };\n\n    if (canvas.width - canvas.left - canvas.right <= 0 || canvas.height - canvas.top - canvas.bottom <= 0) {\n      canvas = {\n        width: 0,\n        height: 0\n      };\n    }\n\n    return canvas;\n  },\n  _updateSize: function _updateSize() {\n    var rawCanvas = this._calculateRawCanvas();\n\n    if (areCanvasesDifferent(this._canvas, rawCanvas) || this.__forceRender) {\n      this._canvas = floorCanvasDimensions(rawCanvas);\n\n      this._recreateSizeDependentObjects(true);\n\n      this._renderer.resize(this._canvas.width, this._canvas.height);\n\n      this._change([\"LAYOUT\"]);\n    }\n  },\n  _recreateSizeDependentObjects: noop,\n  _getMinSize: function _getMinSize() {\n    return [0, 0];\n  },\n  _getAlignmentRect: noop,\n  _setContentSize: function _setContentSize() {\n    var canvas = this._canvas;\n    var layout = this._layout;\n    var rect = canvas.width > 0 && canvas.height > 0 ? [canvas.left, canvas.top, canvas.width - canvas.right, canvas.height - canvas.bottom] : [0, 0, 0, 0];\n    rect = layout.forward(rect, this._getMinSize());\n    var nextRect = this._applySize(rect) || rect;\n    layout.backward(nextRect, this._getAlignmentRect() || nextRect);\n  },\n  _getOption: function _getOption(name, isScalar) {\n    var theme = this._themeManager.theme(name);\n\n    var option = this.option(name);\n    return isScalar ? void 0 !== option ? option : theme : extend(true, {}, theme, option);\n  },\n  _setupResizeHandler: function _setupResizeHandler() {\n    var _this8 = this;\n\n    var redrawOnResize = _parseScalar(this._getOption(\"redrawOnResize\", true), true);\n\n    if (this._disposeResizeHandler) {\n      this._removeResizeHandler();\n    }\n\n    this._disposeResizeHandler = createResizeHandler(this._$element[0], redrawOnResize, function () {\n      return _this8._requestChange([\"CONTAINER_SIZE\"]);\n    });\n  },\n  _removeResizeHandler: function _removeResizeHandler() {\n    if (this._disposeResizeHandler) {\n      this._disposeResizeHandler();\n\n      this._disposeResizeHandler = null;\n    }\n  },\n  _onBeginUpdate: noop,\n  beginUpdate: function beginUpdate() {\n    if (this._initialized && this._isUpdateAllowed()) {\n      this._onBeginUpdate();\n\n      this._suspendChanges();\n    }\n\n    this.callBase.apply(this, arguments);\n    return this;\n  },\n  endUpdate: function endUpdate() {\n    this.callBase();\n    this._isUpdateAllowed() && this._resumeChanges();\n    return this;\n  },\n  option: function option(name) {\n    if (this._initialized && this._applyingChanges && (arguments.length > 1 || _isObject(name))) {\n      this._optionsQueue = this._optionsQueue || [];\n\n      this._optionsQueue.push(this._getActionForUpdating(arguments));\n    } else {\n      return baseOptionMethod.apply(this, arguments);\n    }\n  },\n  _getActionForUpdating: function _getActionForUpdating(args) {\n    var _this9 = this;\n\n    return function () {\n      baseOptionMethod.apply(_this9, args);\n    };\n  },\n  _clean: noop,\n  _render: noop,\n  _optionChanged: function _optionChanged(arg) {\n    var _this10 = this;\n\n    if (this._optionChangedLocker) {\n      return;\n    }\n\n    var partialChanges = this.getPartialChangeOptionsName(arg);\n    var changes = [];\n\n    if (partialChanges.length > 0) {\n      partialChanges.forEach(function (pc) {\n        return changes.push(_this10._partialOptionChangesMap[pc]);\n      });\n    } else {\n      changes.push(this._optionChangesMap[arg.name]);\n    }\n\n    changes = changes.filter(function (c) {\n      return !!c;\n    });\n\n    if (this._eventTrigger.change(arg.name)) {\n      this._change([\"EVENTS\"]);\n    } else if (changes.length > 0) {\n      this._change(changes);\n    } else {\n      this.callBase.apply(this, arguments);\n    }\n  },\n  _notify: noop,\n  _changesApplied: noop,\n  _optionChangesMap: {\n    size: \"CONTAINER_SIZE\",\n    margin: \"CONTAINER_SIZE\",\n    redrawOnResize: \"RESIZE_HANDLER\",\n    theme: \"THEME\",\n    rtlEnabled: \"THEME\",\n    encodeHtml: \"THEME\",\n    elementAttr: \"ELEMENT_ATTR\",\n    disabled: \"DISABLED\"\n  },\n  _partialOptionChangesMap: {},\n  _partialOptionChangesPath: {},\n  getPartialChangeOptionsName: function getPartialChangeOptionsName(changedOption) {\n    var _this11 = this;\n\n    var fullName = changedOption.fullName;\n    var sections = fullName.split(/[.]/);\n    var name = changedOption.name;\n    var value = changedOption.value;\n    var options = this._partialOptionChangesPath[name];\n    var partialChangeOptionsName = [];\n\n    if (options) {\n      if (true === options) {\n        partialChangeOptionsName.push(name);\n      } else {\n        options.forEach(function (op) {\n          fullName.indexOf(op) >= 0 && partialChangeOptionsName.push(op);\n        });\n\n        if (1 === sections.length) {\n          if (\"object\" === type(value)) {\n            this._addOptionsNameForPartialUpdate(value, options, partialChangeOptionsName);\n          } else if (\"array\" === type(value)) {\n            if (value.length > 0 && value.every(function (item) {\n              return _this11._checkOptionsForPartialUpdate(item, options);\n            })) {\n              value.forEach(function (item) {\n                _this11._addOptionsNameForPartialUpdate(item, options, partialChangeOptionsName);\n              });\n            }\n          }\n        }\n      }\n    }\n\n    return partialChangeOptionsName.filter(function (value, index, self) {\n      return self.indexOf(value) === index;\n    });\n  },\n  _checkOptionsForPartialUpdate: function _checkOptionsForPartialUpdate(optionObject, options) {\n    return !Object.keys(optionObject).some(function (key) {\n      return -1 === options.indexOf(key);\n    });\n  },\n  _addOptionsNameForPartialUpdate: function _addOptionsNameForPartialUpdate(optionObject, options, partialChangeOptionsName) {\n    var optionKeys = Object.keys(optionObject);\n\n    if (this._checkOptionsForPartialUpdate(optionObject, options)) {\n      optionKeys.forEach(function (key) {\n        return options.indexOf(key) > -1 && partialChangeOptionsName.push(key);\n      });\n    }\n  },\n  _visibilityChanged: function _visibilityChanged() {\n    this.render();\n  },\n  _setThemeAndRtl: function _setThemeAndRtl() {\n    this._themeManager.setTheme(this.option(\"theme\"), this.option(OPTION_RTL_ENABLED));\n  },\n  _getRendererOptions: function _getRendererOptions() {\n    return {\n      rtl: this.option(OPTION_RTL_ENABLED),\n      encodeHtml: this.option(\"encodeHtml\"),\n      animation: this._getAnimationOptions()\n    };\n  },\n  _setRendererOptions: function _setRendererOptions() {\n    this._renderer.setOptions(this._getRendererOptions());\n  },\n  svg: function svg() {\n    return this._renderer.svg();\n  },\n  getSize: function getSize() {\n    var canvas = this._canvas || {};\n    return {\n      width: canvas.width,\n      height: canvas.height\n    };\n  },\n  isReady: getFalse,\n  _dataIsReady: getTrue,\n  _resetIsReady: function _resetIsReady() {\n    this.isReady = getFalse;\n  },\n  _renderGraphicObjects: function _renderGraphicObjects() {\n    var _this12 = this;\n\n    var renderer = this._renderer;\n    var graphics = graphicObject.getGraphicObjects();\n    Object.keys(graphics).forEach(function (id) {\n      if (!_this12._graphicObjects[id]) {\n        var _graphics$id = graphics[id],\n            _type = _graphics$id.type,\n            colors = _graphics$id.colors,\n            rotationAngle = _graphics$id.rotationAngle,\n            template = _graphics$id.template,\n            width = _graphics$id.width,\n            height = _graphics$id.height;\n\n        switch (_type) {\n          case \"linear\":\n            _this12._graphicObjects[id] = renderer.linearGradient(colors, id, rotationAngle);\n            break;\n\n          case \"radial\":\n            _this12._graphicObjects[id] = renderer.radialGradient(colors, id);\n            break;\n\n          case \"pattern\":\n            _this12._graphicObjects[id] = renderer.customPattern(id, _this12._getTemplate(template), width, height);\n        }\n      }\n    });\n  },\n  _drawn: function _drawn() {\n    var _this13 = this;\n\n    this.isReady = getFalse;\n\n    if (this._dataIsReady()) {\n      this._renderer.onEndAnimation(function () {\n        _this13.isReady = getTrue;\n      });\n    }\n\n    this._eventTrigger(\"drawn\", {});\n  }\n});\nexport default baseWidget;\nreplaceInherit(baseWidget);","map":null,"metadata":{},"sourceType":"module"}