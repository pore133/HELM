{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_6\\\\HELM\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadShareBoardRegister),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadShareBoardRegister),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadShareBoardTopLikeList),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadShareBoardTopLike),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(loadShareBoardIsLikeAndTotalLikeCount),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadShareBoardIsLikeAndTotalLikeCount),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(loadShareBoardLike),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadShareBoardLike),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(loadShareBoardUpdateDiscription),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadShareBoardUpdateDiscription),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(loadShareBoardDetailSelect),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadShareBoardDetailSelect),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(loadShareBoardDetailHitIncrease),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadShareBoardDetailHitIncrease),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(loadShareBoardDelete),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadShareBoardDelete),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(ShareBoardSaga);\n\nimport { all, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport { shareBoardRegisterAPI, ShareBoardTopLikeAPI, ShareBoardIsLikeAndTotalLikeCountAPI, ShareBoardLikeAPI, ShareBoardUpdateDiscriptionAPI, ShareBoardDetailSelectAPI, ShareBoardDetailHitIncreaseAPI, ShareBoardDeleteAPI } from '../apis/shareBoard';\nimport { SHARE_BOARD_REGISTER_REQUEST, SHARE_BOARD_REGISTER_SUCCESS, SHARE_BOARD_REGISTER_FAILURE, SHARE_BOARD_LIKE_REQUEST, SHARE_BOARD_LIKE_SUCCESS, SHARE_BOARD_LIKE_FAILURE, SHARE_BOARD_ISLIKECHECK_TOTALLIKECOUNT_REQUEST, SHARE_BOARD_ISLIKECHECK_TOTALLIKECOUNT_SUCCESS, SHARE_BOARD_ISLIKECHECK_TOTALLIKECOUNT_FAILURE, SHARE_BOARD_LIKE_REGISTER_REQUEST, SHARE_BOARD_LIKE_REGISTER_SUCCESS, SHARE_BOARD_LIKE_REGISTER_FAILURE, SHARE_BOARD_UPDATE_REQUEST, SHARE_BOARD_UPDATE_SUCCESS, SHARE_BOARD_UPDATE_FAILURE, SHARE_BOARD_DETAIL_SELECT_REQUEST, SHARE_BOARD_DETAIL_SELECT_SUCCESS, SHARE_BOARD_DETAIL_SELECT_FAILURE, SHARE_BOARD_DETAIL_HIT_INCREASE_REQUEST, SHARE_BOARD_DETAIL_HIT_INCREASE_SUCCESS, SHARE_BOARD_DETAIL_HIT_INCREASE_FAILURE, SHARE_BOARD_DELETE_REQUEST, // 게시글 삭제 (공유 해제)\nSHARE_BOARD_DELETE_SUCCESS, SHARE_BOARD_DELETE_FAILURE } from '../modules/shareBoard';\nimport swal from 'sweetalert'; // 예쁜 alert 창을 위해 사용\n\nfunction loadShareBoardRegister(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadShareBoardRegister$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(shareBoardRegisterAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: SHARE_BOARD_REGISTER_SUCCESS,\n            data: result\n          });\n\n        case 6:\n          swal('공유 완료', ' ', 'success', {\n            buttons: false,\n            timer: 1000\n          });\n          _context.next = 14;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          swal('공유 실패', '공유할 권한이 없습니다.', 'error', {\n            buttons: false,\n            timer: 1000\n          });\n          _context.next = 14;\n          return put({\n            type: SHARE_BOARD_REGISTER_FAILURE\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction watchLoadShareBoardRegister() {\n  return _regeneratorRuntime.wrap(function watchLoadShareBoardRegister$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(SHARE_BOARD_REGISTER_REQUEST, loadShareBoardRegister);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} // 상위 5개 좋아요 수 가진 리스트 조회\n\n\nfunction loadShareBoardTopLikeList() {\n  var result;\n  return _regeneratorRuntime.wrap(function loadShareBoardTopLikeList$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(ShareBoardTopLikeAPI);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: SHARE_BOARD_LIKE_SUCCESS,\n            data: result\n          });\n\n        case 6:\n          _context3.next = 12;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 12;\n          return put({\n            type: SHARE_BOARD_LIKE_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction watchLoadShareBoardTopLike() {\n  return _regeneratorRuntime.wrap(function watchLoadShareBoardTopLike$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(SHARE_BOARD_LIKE_REQUEST, loadShareBoardTopLikeList);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n} // 좋아요 수와, 해당 게시글 좋아요 여부 조회\n\n\nfunction loadShareBoardIsLikeAndTotalLikeCount(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadShareBoardIsLikeAndTotalLikeCount$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(ShareBoardIsLikeAndTotalLikeCountAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: SHARE_BOARD_ISLIKECHECK_TOTALLIKECOUNT_SUCCESS,\n            data: result\n          });\n\n        case 6:\n          _context5.next = 12;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 12;\n          return put({\n            type: SHARE_BOARD_ISLIKECHECK_TOTALLIKECOUNT_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction watchLoadShareBoardIsLikeAndTotalLikeCount() {\n  return _regeneratorRuntime.wrap(function watchLoadShareBoardIsLikeAndTotalLikeCount$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(SHARE_BOARD_ISLIKECHECK_TOTALLIKECOUNT_REQUEST, loadShareBoardIsLikeAndTotalLikeCount);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n} // 좋아요 등록\n\n\nfunction loadShareBoardLike(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadShareBoardLike$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(ShareBoardLikeAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: SHARE_BOARD_LIKE_REGISTER_SUCCESS,\n            data: result\n          });\n\n        case 6:\n          _context7.next = 8;\n          return put({\n            type: SHARE_BOARD_ISLIKECHECK_TOTALLIKECOUNT_REQUEST,\n            data: action.data\n          });\n\n        case 8:\n          _context7.next = 14;\n          break;\n\n        case 10:\n          _context7.prev = 10;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 14;\n          return put({\n            type: SHARE_BOARD_LIKE_REGISTER_FAILURE\n          });\n\n        case 14:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 10]]);\n}\n\nfunction watchLoadShareBoardLike() {\n  return _regeneratorRuntime.wrap(function watchLoadShareBoardLike$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(SHARE_BOARD_LIKE_REGISTER_REQUEST, loadShareBoardLike);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n} // 해당 공유 게시글 discription 수정\n\n\nfunction loadShareBoardUpdateDiscription(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadShareBoardUpdateDiscription$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(ShareBoardUpdateDiscriptionAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            type: SHARE_BOARD_UPDATE_SUCCESS,\n            data: result\n          });\n\n        case 6:\n          _context9.next = 8;\n          return put({\n            type: SHARE_BOARD_DETAIL_SELECT_REQUEST,\n            data: action.data.boardNo\n          });\n\n        case 8:\n          _context9.next = 14;\n          break;\n\n        case 10:\n          _context9.prev = 10;\n          _context9.t0 = _context9[\"catch\"](0);\n          _context9.next = 14;\n          return put({\n            type: SHARE_BOARD_UPDATE_FAILURE\n          });\n\n        case 14:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 10]]);\n}\n\nfunction watchLoadShareBoardUpdateDiscription() {\n  return _regeneratorRuntime.wrap(function watchLoadShareBoardUpdateDiscription$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(SHARE_BOARD_UPDATE_REQUEST, loadShareBoardUpdateDiscription);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n} // 해당 공유 게시글 상세 조회\n\n\nfunction loadShareBoardDetailSelect(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadShareBoardDetailSelect$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(ShareBoardDetailSelectAPI, action.data);\n\n        case 3:\n          result = _context11.sent;\n          _context11.next = 6;\n          return put({\n            type: SHARE_BOARD_DETAIL_SELECT_SUCCESS,\n            data: result\n          });\n\n        case 6:\n          _context11.next = 12;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](0);\n          _context11.next = 12;\n          return put({\n            type: SHARE_BOARD_DETAIL_SELECT_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 8]]);\n}\n\nfunction watchLoadShareBoardDetailSelect() {\n  return _regeneratorRuntime.wrap(function watchLoadShareBoardDetailSelect$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(SHARE_BOARD_DETAIL_SELECT_REQUEST, loadShareBoardDetailSelect);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n} // 해당 공유 게시글 조회수 증가\n\n\nfunction loadShareBoardDetailHitIncrease(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadShareBoardDetailHitIncrease$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return call(ShareBoardDetailHitIncreaseAPI, action.data);\n\n        case 3:\n          result = _context13.sent;\n          _context13.next = 6;\n          return put({\n            type: SHARE_BOARD_DETAIL_HIT_INCREASE_SUCCESS,\n            data: result\n          });\n\n        case 6:\n          _context13.next = 12;\n          break;\n\n        case 8:\n          _context13.prev = 8;\n          _context13.t0 = _context13[\"catch\"](0);\n          _context13.next = 12;\n          return put({\n            type: SHARE_BOARD_DETAIL_HIT_INCREASE_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[0, 8]]);\n}\n\nfunction watchLoadShareBoardDetailHitIncrease() {\n  return _regeneratorRuntime.wrap(function watchLoadShareBoardDetailHitIncrease$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(SHARE_BOARD_DETAIL_HIT_INCREASE_REQUEST, loadShareBoardDetailHitIncrease);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n} // 해당 공유 게시글 해제 (공유 해제)\n\n\nfunction loadShareBoardDelete(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadShareBoardDelete$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          _context15.next = 3;\n          return call(ShareBoardDeleteAPI, action.data);\n\n        case 3:\n          result = _context15.sent;\n          _context15.next = 6;\n          return put({\n            type: SHARE_BOARD_DELETE_SUCCESS,\n            data: result\n          });\n\n        case 6:\n          _context15.next = 12;\n          break;\n\n        case 8:\n          _context15.prev = 8;\n          _context15.t0 = _context15[\"catch\"](0);\n          _context15.next = 12;\n          return put({\n            type: SHARE_BOARD_DELETE_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15, null, [[0, 8]]);\n}\n\nfunction watchLoadShareBoardDelete() {\n  return _regeneratorRuntime.wrap(function watchLoadShareBoardDelete$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeLatest(SHARE_BOARD_DELETE_REQUEST, loadShareBoardDelete);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nexport default function ShareBoardSaga() {\n  return _regeneratorRuntime.wrap(function ShareBoardSaga$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return all([fork(watchLoadShareBoardDetailSelect), fork(watchLoadShareBoardUpdateDiscription), fork(watchLoadShareBoardLike), fork(watchLoadShareBoardIsLikeAndTotalLikeCount), fork(watchLoadShareBoardRegister), fork(watchLoadShareBoardTopLike), fork(watchLoadShareBoardDetailHitIncrease), fork(watchLoadShareBoardDelete)]);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}","map":{"version":3,"sources":["C:/Users/JUN-D/Desktop/헬스케어/11_6/HELM/front/src/store/sagas/shareBoard.js"],"names":["loadShareBoardRegister","watchLoadShareBoardRegister","loadShareBoardTopLikeList","watchLoadShareBoardTopLike","loadShareBoardIsLikeAndTotalLikeCount","watchLoadShareBoardIsLikeAndTotalLikeCount","loadShareBoardLike","watchLoadShareBoardLike","loadShareBoardUpdateDiscription","watchLoadShareBoardUpdateDiscription","loadShareBoardDetailSelect","watchLoadShareBoardDetailSelect","loadShareBoardDetailHitIncrease","watchLoadShareBoardDetailHitIncrease","loadShareBoardDelete","watchLoadShareBoardDelete","ShareBoardSaga","all","fork","put","takeLatest","call","shareBoardRegisterAPI","ShareBoardTopLikeAPI","ShareBoardIsLikeAndTotalLikeCountAPI","ShareBoardLikeAPI","ShareBoardUpdateDiscriptionAPI","ShareBoardDetailSelectAPI","ShareBoardDetailHitIncreaseAPI","ShareBoardDeleteAPI","SHARE_BOARD_REGISTER_REQUEST","SHARE_BOARD_REGISTER_SUCCESS","SHARE_BOARD_REGISTER_FAILURE","SHARE_BOARD_LIKE_REQUEST","SHARE_BOARD_LIKE_SUCCESS","SHARE_BOARD_LIKE_FAILURE","SHARE_BOARD_ISLIKECHECK_TOTALLIKECOUNT_REQUEST","SHARE_BOARD_ISLIKECHECK_TOTALLIKECOUNT_SUCCESS","SHARE_BOARD_ISLIKECHECK_TOTALLIKECOUNT_FAILURE","SHARE_BOARD_LIKE_REGISTER_REQUEST","SHARE_BOARD_LIKE_REGISTER_SUCCESS","SHARE_BOARD_LIKE_REGISTER_FAILURE","SHARE_BOARD_UPDATE_REQUEST","SHARE_BOARD_UPDATE_SUCCESS","SHARE_BOARD_UPDATE_FAILURE","SHARE_BOARD_DETAIL_SELECT_REQUEST","SHARE_BOARD_DETAIL_SELECT_SUCCESS","SHARE_BOARD_DETAIL_SELECT_FAILURE","SHARE_BOARD_DETAIL_HIT_INCREASE_REQUEST","SHARE_BOARD_DETAIL_HIT_INCREASE_SUCCESS","SHARE_BOARD_DETAIL_HIT_INCREASE_FAILURE","SHARE_BOARD_DELETE_REQUEST","SHARE_BOARD_DELETE_SUCCESS","SHARE_BOARD_DELETE_FAILURE","swal","action","data","result","type","buttons","timer","boardNo"],"mappings":"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","sourcesContent":["import {\n  all,\n  fork,\n  put,\n  takeLatest,\n  call,\n} from 'redux-saga/effects';    \nimport {\n  shareBoardRegisterAPI,\n  ShareBoardTopLikeAPI,\n  ShareBoardIsLikeAndTotalLikeCountAPI,\n  ShareBoardLikeAPI,\n  ShareBoardUpdateDiscriptionAPI,\n  ShareBoardDetailSelectAPI,\n  ShareBoardDetailHitIncreaseAPI,\n  ShareBoardDeleteAPI,\n} from '../apis/shareBoard'\nimport {\n  SHARE_BOARD_REGISTER_REQUEST,\n  SHARE_BOARD_REGISTER_SUCCESS,\n  SHARE_BOARD_REGISTER_FAILURE,\n  SHARE_BOARD_LIKE_REQUEST,\n  SHARE_BOARD_LIKE_SUCCESS,\n  SHARE_BOARD_LIKE_FAILURE,\n  SHARE_BOARD_ISLIKECHECK_TOTALLIKECOUNT_REQUEST,\n  SHARE_BOARD_ISLIKECHECK_TOTALLIKECOUNT_SUCCESS,\n  SHARE_BOARD_ISLIKECHECK_TOTALLIKECOUNT_FAILURE,\n  SHARE_BOARD_LIKE_REGISTER_REQUEST,\n  SHARE_BOARD_LIKE_REGISTER_SUCCESS,\n  SHARE_BOARD_LIKE_REGISTER_FAILURE,\n  SHARE_BOARD_UPDATE_REQUEST,\n  SHARE_BOARD_UPDATE_SUCCESS,\n  SHARE_BOARD_UPDATE_FAILURE,\n  SHARE_BOARD_DETAIL_SELECT_REQUEST,\n  SHARE_BOARD_DETAIL_SELECT_SUCCESS,\n  SHARE_BOARD_DETAIL_SELECT_FAILURE,\n  SHARE_BOARD_DETAIL_HIT_INCREASE_REQUEST,\n  SHARE_BOARD_DETAIL_HIT_INCREASE_SUCCESS,\n  SHARE_BOARD_DETAIL_HIT_INCREASE_FAILURE,\n  SHARE_BOARD_DELETE_REQUEST,   // 게시글 삭제 (공유 해제)\n  SHARE_BOARD_DELETE_SUCCESS,\n  SHARE_BOARD_DELETE_FAILURE,\n} from '../modules/shareBoard';\nimport swal from 'sweetalert'; // 예쁜 alert 창을 위해 사용\n\n\nfunction* loadShareBoardRegister(action) {\n  try {\n      const result = yield call(shareBoardRegisterAPI, action.data);\n      yield put({ type: SHARE_BOARD_REGISTER_SUCCESS, data: result });\n      swal('공유 완료', ' ', 'success', {\n          buttons: false,\n          timer: 1000,\n      });\n  } catch (err) {\n      swal('공유 실패', '공유할 권한이 없습니다.', 'error', {\n          buttons: false,\n          timer: 1000,\n      });\n      yield put({ type: SHARE_BOARD_REGISTER_FAILURE });\n  }\n}\n\nfunction* watchLoadShareBoardRegister() {\n  yield takeLatest(SHARE_BOARD_REGISTER_REQUEST, loadShareBoardRegister);\n}\n// 상위 5개 좋아요 수 가진 리스트 조회\nfunction* loadShareBoardTopLikeList() {\n  try {\n      const result = yield call(ShareBoardTopLikeAPI);\n      // console.log(\"요청들어옴?\");\n      // console.log(result);\n      yield put({\n        type: SHARE_BOARD_LIKE_SUCCESS ,\n        data: result,\n      });\n    } catch (error) {\n      yield put({\n        type: SHARE_BOARD_LIKE_FAILURE,\n      });\n    }\n}\n\nfunction* watchLoadShareBoardTopLike() {\n  yield takeLatest(SHARE_BOARD_LIKE_REQUEST , loadShareBoardTopLikeList);\n}\n// 좋아요 수와, 해당 게시글 좋아요 여부 조회\nfunction* loadShareBoardIsLikeAndTotalLikeCount(action) {\n  try {   \n      const result = yield call(ShareBoardIsLikeAndTotalLikeCountAPI, action.data);\n      yield put({\n        type: SHARE_BOARD_ISLIKECHECK_TOTALLIKECOUNT_SUCCESS ,\n        data: result,\n      });\n    } catch (error) {\n      yield put({\n        type: SHARE_BOARD_ISLIKECHECK_TOTALLIKECOUNT_FAILURE,\n      });\n    }\n}\n\nfunction* watchLoadShareBoardIsLikeAndTotalLikeCount() {\n  yield takeLatest(SHARE_BOARD_ISLIKECHECK_TOTALLIKECOUNT_REQUEST , loadShareBoardIsLikeAndTotalLikeCount);\n}\n\n// 좋아요 등록\nfunction* loadShareBoardLike(action) {\n  try {   \n      // console.log(action.data);\n      const result = yield call(ShareBoardLikeAPI, action.data); \n      yield put({\n        type: SHARE_BOARD_LIKE_REGISTER_SUCCESS  ,\n        data: result,\n      });\n      yield put({ type: SHARE_BOARD_ISLIKECHECK_TOTALLIKECOUNT_REQUEST, data: action.data }); \n    } catch (error) {\n      yield put({\n        type: SHARE_BOARD_LIKE_REGISTER_FAILURE ,\n      });\n    }\n}\n\nfunction* watchLoadShareBoardLike() {\n  yield takeLatest(SHARE_BOARD_LIKE_REGISTER_REQUEST, loadShareBoardLike);\n}\n\n// 해당 공유 게시글 discription 수정\nfunction* loadShareBoardUpdateDiscription(action) {\ntry {   \n    // console.log(action.data);\n    const result = yield call(ShareBoardUpdateDiscriptionAPI, action.data); \n    yield put({\n      type: SHARE_BOARD_UPDATE_SUCCESS,\n      data: result,\n    });\n    yield put({ type: SHARE_BOARD_DETAIL_SELECT_REQUEST, data: action.data.boardNo });\n  } catch (error) {\n    yield put({\n      type: SHARE_BOARD_UPDATE_FAILURE,\n    });\n  }\n}\n\nfunction* watchLoadShareBoardUpdateDiscription() {\n    yield takeLatest(SHARE_BOARD_UPDATE_REQUEST, loadShareBoardUpdateDiscription);\n}\n\n// 해당 공유 게시글 상세 조회\nfunction* loadShareBoardDetailSelect(action) {\n  try {   \n      const result = yield call(ShareBoardDetailSelectAPI, action.data); \n      yield put({\n        type: SHARE_BOARD_DETAIL_SELECT_SUCCESS ,\n        data: result,\n      });\n    } catch (error) {\n      yield put({\n        type: SHARE_BOARD_DETAIL_SELECT_FAILURE ,\n      });\n    }\n  }\n  \nfunction* watchLoadShareBoardDetailSelect() {\n    yield takeLatest(SHARE_BOARD_DETAIL_SELECT_REQUEST , loadShareBoardDetailSelect);\n}\n\n// 해당 공유 게시글 조회수 증가\nfunction* loadShareBoardDetailHitIncrease(action) {\n  try {\n    const result = yield call(ShareBoardDetailHitIncreaseAPI, action.data);\n    yield put({ type: SHARE_BOARD_DETAIL_HIT_INCREASE_SUCCESS, data: result });\n  } catch (error) {\n    yield put({ type: SHARE_BOARD_DETAIL_HIT_INCREASE_FAILURE });\n  }\n}\n\nfunction* watchLoadShareBoardDetailHitIncrease() {\n  yield takeLatest(SHARE_BOARD_DETAIL_HIT_INCREASE_REQUEST, loadShareBoardDetailHitIncrease);\n}\n\n// 해당 공유 게시글 해제 (공유 해제)\nfunction* loadShareBoardDelete(action) {\n  try {\n    const result = yield call(ShareBoardDeleteAPI, action.data);\n    yield put({ type: SHARE_BOARD_DELETE_SUCCESS, data: result });\n  } catch (error) {\n    yield put({ type: SHARE_BOARD_DELETE_FAILURE });\n  }\n}\n\nfunction* watchLoadShareBoardDelete(){\n  yield takeLatest(SHARE_BOARD_DELETE_REQUEST, loadShareBoardDelete);\n}\n\nexport default function* ShareBoardSaga() {\n  yield all([\n      fork(watchLoadShareBoardDetailSelect),\n      fork(watchLoadShareBoardUpdateDiscription),\n      fork(watchLoadShareBoardLike),\n      fork(watchLoadShareBoardIsLikeAndTotalLikeCount),\n      fork(watchLoadShareBoardRegister),\n      fork(watchLoadShareBoardTopLike),\n      fork(watchLoadShareBoardDetailHitIncrease),\n      fork(watchLoadShareBoardDelete),\n  ]);\n}"]},"metadata":{},"sourceType":"module"}