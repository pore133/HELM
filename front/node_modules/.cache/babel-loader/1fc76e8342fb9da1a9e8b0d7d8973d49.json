{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_6\\\\HELM\\\\front\\\\src\\\\pages\\\\MyDiet\\\\MyDiet.jsx\";\nimport React, { useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"./MyDiet.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MY_DIET_DIARY_LIST_REQUEST, MY_DIET_DIARY_DAILY_INFO_REQUEST } from \"../../store/modules/myDiet\";\nexport default function MyDiet() {\n  var dispatch = useDispatch();\n  var history = useHistory();\n\n  var _useSelector = useSelector(function (state) {\n    return state.myDiet;\n  }),\n      myDietDiaryList = _useSelector.myDietDiaryList;\n\n  var diaryList = []; // console.log(myDietDiaryList);\n\n  for (var i = 0; i < myDietDiaryList.length; i++) {\n    var eventColor = \"\";\n    if (myDietDiaryList[i].meal_time === \"아침\") eventColor = \"#FF7043\";else if (myDietDiaryList[i].meal_time === \"점심\") eventColor = \"#FFB74D\";else if (myDietDiaryList[i].meal_time === \"저녁\") eventColor = \"#FFAB91\";else eventColor = \"#D7CCC8\"; // if (myDietDiaryList[i].meal_time === \"아침\") eventColor = \"#c94c4c\";\n    // else if (myDietDiaryList[i].meal_time === \"점심\") eventColor = \"#2B67FF\";\n    // else if (myDietDiaryList[i].meal_time === \"저녁\") eventColor = \"#35C04D\";\n    // else eventColor = \"#F2E944\";\n\n    diaryList.push({\n      id: myDietDiaryList[i].diary_no,\n      title: myDietDiaryList[i].meal_time,\n      date: myDietDiaryList[i].diary_date.substring(0, 10),\n      extendedProps: {\n        time: myDietDiaryList[i].diary_date.substring(11, 16)\n      },\n      color: eventColor\n    });\n  }\n\n  var clickDate = function clickDate(info) {\n    dispatch({\n      type: MY_DIET_DIARY_DAILY_INFO_REQUEST,\n      data: {\n        date: info.dateStr\n      }\n    });\n    history.push(\"/dietdiary/\".concat(info.dateStr));\n  };\n\n  var selectedEvent = function selectedEvent(info) {\n    var date = info.event.startStr;\n    var diaryNo = info.event.id;\n    history.push(\"/mydietdetail/\".concat(date, \"/\").concat(diaryNo)); // console.log(info.event.id); // 이벤트 상세보기를 위해서 넘겨줄 diary_no\n  };\n\n  useEffect(function () {\n    dispatch({\n      type: MY_DIET_DIARY_LIST_REQUEST\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MyDiet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MenuTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"MenuTitleLight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"MY \\uC2DD\\uB2E8\")), /*#__PURE__*/React.createElement(FullCalendar // className=\"calendar\"\n  , {\n    headerToolbar: {\n      start: \"title\",\n      end: \"today,prev,next\"\n    },\n    height: \"100vh\",\n    plugins: [dayGridPlugin, interactionPlugin],\n    initialView: \"dayGridMonth\",\n    eventOrder: \"time\" // locale=\"ko\"\n    ,\n    events: diaryList,\n    selectable: true // editable\n    ,\n    dayMaxEvents: true,\n    dateClick: clickDate,\n    eventClick: selectedEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/JUN-D/Desktop/헬스케어/11_6/HELM/front/src/pages/MyDiet/MyDiet.jsx"],"names":["React","useEffect","FullCalendar","dayGridPlugin","interactionPlugin","useHistory","useDispatch","useSelector","MY_DIET_DIARY_LIST_REQUEST","MY_DIET_DIARY_DAILY_INFO_REQUEST","MyDiet","dispatch","history","state","myDiet","myDietDiaryList","diaryList","i","length","eventColor","meal_time","push","id","diary_no","title","date","diary_date","substring","extendedProps","time","color","clickDate","info","type","data","dateStr","selectedEvent","event","startStr","diaryNo","start","end"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport \"./MyDiet.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  MY_DIET_DIARY_LIST_REQUEST,\n  MY_DIET_DIARY_DAILY_INFO_REQUEST,\n} from \"../../store/modules/myDiet\";\n\nexport default function MyDiet() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { myDietDiaryList } = useSelector((state) => state.myDiet);\n\n  const diaryList = [];\n\n  // console.log(myDietDiaryList);\n  for (let i = 0; i < myDietDiaryList.length; i++) {\n    var eventColor = \"\";\n    if (myDietDiaryList[i].meal_time === \"아침\") eventColor = \"#FF7043\";\n    else if (myDietDiaryList[i].meal_time === \"점심\") eventColor = \"#FFB74D\";\n    else if (myDietDiaryList[i].meal_time === \"저녁\") eventColor = \"#FFAB91\";\n    else eventColor = \"#D7CCC8\";\n    // if (myDietDiaryList[i].meal_time === \"아침\") eventColor = \"#c94c4c\";\n    // else if (myDietDiaryList[i].meal_time === \"점심\") eventColor = \"#2B67FF\";\n    // else if (myDietDiaryList[i].meal_time === \"저녁\") eventColor = \"#35C04D\";\n    // else eventColor = \"#F2E944\";\n\n    diaryList.push({\n      id: myDietDiaryList[i].diary_no,\n      title: myDietDiaryList[i].meal_time,\n      date: myDietDiaryList[i].diary_date.substring(0, 10),\n      extendedProps: {\n        time: myDietDiaryList[i].diary_date.substring(11, 16),\n      },\n      color: eventColor,\n    });\n  }\n\n  const clickDate = (info) => {\n    dispatch({\n      type: MY_DIET_DIARY_DAILY_INFO_REQUEST,\n      data: { date: info.dateStr },\n    });\n\n    history.push(`/dietdiary/${info.dateStr}`);\n  };\n\n  const selectedEvent = (info) => {\n    const date = info.event.startStr;\n    const diaryNo = info.event.id;\n    history.push(`/mydietdetail/${date}/${diaryNo}`);\n    // console.log(info.event.id); // 이벤트 상세보기를 위해서 넘겨줄 diary_no\n  };\n\n  useEffect(() => {\n    dispatch({\n      type: MY_DIET_DIARY_LIST_REQUEST,\n    });\n  }, []);\n\n  return (\n    <div className=\"MyDiet\">\n      <div className=\"MenuTitle\">\n        <span className=\"MenuTitleLight\">MY 식단</span>\n      </div>\n      <FullCalendar\n        // className=\"calendar\"\n        headerToolbar={{\n          start: \"title\",\n          end: \"today,prev,next\",\n        }}\n        height=\"100vh\"\n        plugins={[dayGridPlugin, interactionPlugin]}\n        initialView=\"dayGridMonth\"\n        eventOrder=\"time\"\n        // locale=\"ko\"\n        events={diaryList}\n        selectable\n        // editable\n        dayMaxEvents\n        dateClick={clickDate}\n        eventClick={selectedEvent}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}