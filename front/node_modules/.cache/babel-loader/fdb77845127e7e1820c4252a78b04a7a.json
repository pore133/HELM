{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 21.2.6\n * Build date: Tue Mar 01 2022\n *\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TemplatesRenderer = void 0;\n\nvar frame_1 = require(\"devextreme/animation/frame\");\n\nvar common_1 = require(\"devextreme/core/utils/common\");\n\nvar React = require(\"react\");\n\nvar TemplatesRenderer =\n/** @class */\nfunction (_super) {\n  __extends(TemplatesRenderer, _super);\n\n  function TemplatesRenderer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.updateScheduled = false;\n    _this.mounted = false;\n    return _this;\n  }\n\n  TemplatesRenderer.prototype.componentDidMount = function () {\n    this.mounted = true;\n  };\n\n  TemplatesRenderer.prototype.componentWillUnmount = function () {\n    this.mounted = false;\n  };\n\n  TemplatesRenderer.prototype.scheduleUpdate = function (useDeferUpdate) {\n    var _this = this;\n\n    if (this.updateScheduled) {\n      return;\n    }\n\n    this.updateScheduled = true;\n    var updateFunc = useDeferUpdate ? common_1.deferUpdate : frame_1.requestAnimationFrame;\n    updateFunc(function () {\n      if (_this.mounted) {\n        _this.forceUpdate();\n      }\n\n      _this.updateScheduled = false;\n    });\n  };\n\n  TemplatesRenderer.prototype.render = function () {\n    var templatesStore = this.props.templatesStore;\n    return React.createElement(React.Fragment, {}, templatesStore.renderWrappers());\n  };\n\n  return TemplatesRenderer;\n}(React.PureComponent);\n\nexports.TemplatesRenderer = TemplatesRenderer;","map":null,"metadata":{},"sourceType":"script"}