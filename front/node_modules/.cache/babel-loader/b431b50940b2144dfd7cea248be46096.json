{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_2\\\\HELF-master\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_2\\\\HELF-master\\\\front\\\\src\\\\pages\\\\User\\\\SignUp\\\\SignUp.jsx\";\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport IconButton from '@mui/material/IconButton';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AuthButton, SignUpButton, Success, Error, SignInLink } from './SignUp.style';\nimport AppForm from '../../../components/User/SignUp/AppForm';\nimport Typography from '../../../components/Main/Typography';\nimport { SIGN_UP_REQUEST, ID_CHECK_REQUEST, EMAIL_CHECK_REQUEST, SIGN_UP_RESET } from '../../../store/modules/user';\nvar theme = createTheme();\nexport default function SignUp() {\n  var dispatch = useDispatch();\n  var history = useHistory(); // 아이디, 비밀번호, 비밀번호 확인, 이름, 이메일 정보\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      id = _useState2[0],\n      setId = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passwordCheck = _useState6[0],\n      setPasswordCheck = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      name = _useState8[0],\n      setName = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      email = _useState10[0],\n      setEmail = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      showPassword = _useState12[0],\n      setShowPassword = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showPasswordCheck = _useState14[0],\n      setShowPasswordCheck = _useState14[1]; // 오류메시지 상태 저장\n\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      idMessage = _useState16[0],\n      setIdMessage = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      passwordMessage = _useState18[0],\n      setPasswordMessage = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      emailMessage = _useState20[0],\n      setEmailMessage = _useState20[1]; // 유효성 검사\n\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      isId = _useState22[0],\n      setIsId = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      isPassword = _useState24[0],\n      setIsPassword = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      isPasswordCheck = _useState26[0],\n      setIsPasswordCheck = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      isEmail = _useState28[0],\n      setIsEmail = _useState28[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      signUpDone = _useSelector.signUpDone,\n      idCheckDone = _useSelector.idCheckDone,\n      emailCheckDone = _useSelector.emailCheckDone;\n\n  var handleClickShowPassword = function handleClickShowPassword() {\n    if (showPassword) {\n      setShowPassword(false);\n    } else {\n      setShowPassword(true);\n    }\n  };\n\n  var handleMouseDownPassword = function handleMouseDownPassword(event) {\n    event.preventDefault();\n  };\n\n  var handleClickShowPasswordCheck = function handleClickShowPasswordCheck() {\n    if (showPasswordCheck) {\n      setShowPasswordCheck(false);\n    } else {\n      setShowPasswordCheck(true);\n    }\n  };\n\n  var handleMouseDownPasswordCheck = function handleMouseDownPasswordCheck(event) {\n    event.preventDefault();\n  };\n\n  var onIdHandler = function onIdHandler(event) {\n    setId(event.target.value);\n\n    if (event.target.value.length < 4 || event.target.value.length > 12) {\n      setIdMessage('4글자 이상 12글자 이하로 입력해주세요.');\n      setIsId(false); // } else if() {\n    } else {\n      setIdMessage('');\n      setIsId(true);\n    }\n  };\n\n  var handleSignIn = function handleSignIn() {\n    history.push('/login');\n  };\n\n  var onPasswordHandler = function onPasswordHandler(event) {\n    setPassword(event.target.value);\n    var passwordRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,12}$/;\n\n    if (event.target.value.length < 8 || event.target.value.length > 12) {\n      setPasswordMessage('8글자 이상 12글자 이하로 입력해주세요.');\n      setIsPassword(false);\n    } else if (!passwordRegex.test(event.target.value)) {\n      setPasswordMessage('숫자, 영문자, 특수문자 조합으로 입력해주세요.');\n      setIsPassword(false);\n    } else {\n      setPasswordMessage('');\n      setIsPassword(true);\n    }\n  };\n\n  var onPasswordCheckHandler = function onPasswordCheckHandler(event) {\n    setPasswordCheck(event.target.value);\n    var passwordRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,12}$/;\n\n    if (!passwordRegex.test(event.target.value)) {\n      setPasswordMessage('숫자, 영문자, 특수문자 조합으로 입력해주세요.');\n      setIsPasswordCheck(false);\n    } else if (event.target.value !== password) {\n      setPasswordMessage('비밀번호가 일치하지 않습니다.');\n      setIsPasswordCheck(false);\n    } else {\n      setPasswordMessage('');\n      setIsPasswordCheck(true);\n    }\n  };\n\n  var onNameHandler = function onNameHandler(event) {\n    setName(event.target.value);\n  };\n\n  var onEmailHandler = function onEmailHandler(event) {\n    setEmail(event.target.value);\n    var emailRegex = /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n\n    if (!emailRegex.test(event.target.value)) {\n      setEmailMessage('유효하지 않는 이메일 형식입니다.');\n      setIsEmail(false);\n    } else {\n      setEmailMessage('');\n      setIsEmail(true);\n    }\n  }; // 아이디 중복 검사\n\n\n  var idCheck = function idCheck() {\n    dispatch({\n      type: ID_CHECK_REQUEST,\n      data: {\n        id: id\n      }\n    });\n  }; // 이메일 중복 검사\n\n\n  var emailCheck = function emailCheck() {\n    dispatch({\n      type: EMAIL_CHECK_REQUEST,\n      data: {\n        email: email\n      }\n    });\n  }; // 엔터키 회원가입 trigger\n\n\n  var handleKeyPress = function handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      handleSignUp(e);\n    }\n  }; // 회원가입 버튼\n\n\n  var handleSignUp = function handleSignUp(event) {\n    if (id === '' || password === '' || passwordCheck === '' || name === '' || email === '') {\n      alert('모든 정보를 입력해주세요.');\n      event.preventDefault();\n    } else if (!isId || !isPassword || !isPasswordCheck || !isEmail) {\n      console.log(\"🚬🚬🚬🚬🚬🚬🚬 \", isId, isPassword, isPasswordCheck, isEmail);\n      alert('유효성 규칙을 확인해주세요.');\n    } else if (password !== passwordCheck) {\n      alert('비밀번호가 일치하지 않습니다.');\n      event.preventDefault();\n    } else if (!idCheckDone) {\n      alert('아이디 인증이 필요합니다.');\n      event.preventDefault();\n    } else if (!emailCheckDone) {\n      alert('이메일 인증이 필요합니다.');\n      event.preventDefault();\n    } else {\n      dispatch({\n        type: SIGN_UP_REQUEST,\n        data: {\n          id: id,\n          password: password,\n          name: name,\n          email: email\n        }\n      });\n    } // if(signUpDone) history.push('/LogIn');\n\n\n    if (!signUpDone) event.preventDefault();\n  };\n\n  useEffect(function () {\n    if (signUpDone) {\n      dispatch({\n        type: SIGN_UP_RESET\n      });\n      history.push('/LogIn');\n    }\n  });\n  return /*#__PURE__*/React.createElement(AppForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    onKeyPress: handleKeyPress,\n    sx: {\n      marginTop: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    gutterBottom: true,\n    marked: \"center\",\n    align: \"center\",\n    style: {\n      fontFamily: 'KOTRA_BOLD-Bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, \"SIGN UP\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    component: \"form\",\n    noValidate: \"noValidate\",\n    onSubmit: function onSubmit(e) {\n      handleSignUp(e);\n    },\n    sx: {\n      mt: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    requried: \"true\",\n    fullWidth: true,\n    id: \"id\",\n    label: \"Id\",\n    name: \"id\",\n    autoComplete: \"id\",\n    style: {\n      backgroundColor: 'white'\n    },\n    onChange: onIdHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(AuthButton, {\n    type: \"button\",\n    onClick: idCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 33\n    }\n  }, \"\\uC778\\uC99D\")), id.length > 0 && idMessage.length > 0 && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 33\n    }\n  }, isId ? /*#__PURE__*/React.createElement(Success, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 46\n    }\n  }, idMessage, \" \") : /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 37\n    }\n  }, idMessage)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 37\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n    requried: \"true\",\n    id: \"password\",\n    name: \"password\",\n    type: showPassword ? 'password' : 'text',\n    style: {\n      backgroundColor: 'white'\n    },\n    onChange: onPasswordHandler,\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword,\n      onMouseDown: handleMouseDownPassword,\n      edge: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 41\n      }\n    }, showPassword ? /*#__PURE__*/React.createElement(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 62\n      }\n    }) : /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 82\n      }\n    }))),\n    label: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 37\n    }\n  }, \"Password Check\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n    requried: \"true\",\n    id: \"passwordCheck\",\n    name: \"passwordCheck\",\n    type: showPasswordCheck ? 'password' : 'text',\n    style: {\n      backgroundColor: 'white'\n    },\n    onChange: onPasswordCheckHandler,\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPasswordCheck,\n      onMouseDown: handleMouseDownPasswordCheck,\n      edge: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 41\n      }\n    }, showPasswordCheck ? /*#__PURE__*/React.createElement(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 67\n      }\n    }) : /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 87\n      }\n    }))),\n    label: \"Password Check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 37\n    }\n  }))), password.length > 0 && passwordMessage.length > 0 && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 33\n    }\n  }, isPassword ? /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 52\n    }\n  }, passwordMessage, \" \") : /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 37\n    }\n  }, passwordMessage)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    requried: \"true\",\n    fullWidth: true,\n    id: \"name\",\n    label: \"Name\",\n    name: \"name\",\n    style: {\n      backgroundColor: 'white'\n    },\n    onChange: onNameHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    requried: \"true\",\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    style: {\n      backgroundColor: 'white'\n    },\n    onChange: onEmailHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(AuthButton, {\n    type: \"button\",\n    onClick: function onClick() {\n      emailCheck();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 33\n    }\n  }, \"\\uC778\\uC99D\")), email.length > 0 && emailMessage.length > 0 && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 33\n    }\n  }, isEmail ? /*#__PURE__*/React.createElement(Success, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 49\n    }\n  }, emailMessage) : /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 41\n    }\n  }, emailMessage))), /*#__PURE__*/React.createElement(SignUpButton, {\n    type: \"submit\",\n    sx: {\n      mt: 3,\n      mb: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 25\n    }\n  }, \"SIGN UP\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(SignInLink, {\n    style: {\n      fontFamily: 'KOTRA_GOTHIC'\n    },\n    onClick: handleSignIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 33\n    }\n  }, \"Already have an account? Sign in\"))))))));\n}","map":{"version":3,"sources":["C:/Users/JUN-D/Desktop/헬스케어/11_2/HELF-master/front/src/pages/User/SignUp/SignUp.jsx"],"names":["React","useState","useEffect","useHistory","CssBaseline","TextField","Grid","Box","Container","IconButton","OutlinedInput","InputLabel","InputAdornment","FormControl","Visibility","VisibilityOff","createTheme","ThemeProvider","useDispatch","useSelector","AuthButton","SignUpButton","Success","Error","SignInLink","AppForm","Typography","SIGN_UP_REQUEST","ID_CHECK_REQUEST","EMAIL_CHECK_REQUEST","SIGN_UP_RESET","theme","SignUp","dispatch","history","id","setId","password","setPassword","passwordCheck","setPasswordCheck","name","setName","email","setEmail","showPassword","setShowPassword","showPasswordCheck","setShowPasswordCheck","idMessage","setIdMessage","passwordMessage","setPasswordMessage","emailMessage","setEmailMessage","isId","setIsId","isPassword","setIsPassword","isPasswordCheck","setIsPasswordCheck","isEmail","setIsEmail","state","user","signUpDone","idCheckDone","emailCheckDone","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","handleClickShowPasswordCheck","handleMouseDownPasswordCheck","onIdHandler","target","value","length","handleSignIn","push","onPasswordHandler","passwordRegex","test","onPasswordCheckHandler","onNameHandler","onEmailHandler","emailRegex","idCheck","type","data","emailCheck","handleKeyPress","e","key","handleSignUp","alert","console","log","marginTop","display","flexDirection","alignItems","fontFamily","mt","backgroundColor","mb"],"mappings":"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","sourcesContent":["import React, { useState }  from 'react';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport IconButton from '@mui/material/IconButton';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { \n    AuthButton, \n    SignUpButton,\n    Success,\n    Error,\n    SignInLink, } from './SignUp.style'\nimport AppForm from '../../../components/User/SignUp/AppForm';\nimport Typography from '../../../components/Main/Typography';\nimport { \n    SIGN_UP_REQUEST,\n    ID_CHECK_REQUEST, \n    EMAIL_CHECK_REQUEST,\n    SIGN_UP_RESET,\n} from '../../../store/modules/user';\n\n\n\nconst theme = createTheme();\n\nexport default function SignUp() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    // 아이디, 비밀번호, 비밀번호 확인, 이름, 이메일 정보\n    const [id, setId] = useState('')\n    const [password, setPassword] = useState('')\n    const [passwordCheck, setPasswordCheck] = useState('')\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [showPassword, setShowPassword] = useState(true);\n    const [showPasswordCheck, setShowPasswordCheck] = useState(true);\n\n    // 오류메시지 상태 저장\n    const [idMessage, setIdMessage] = useState('');\n    const [passwordMessage, setPasswordMessage] = useState('');\n    const [emailMessage, setEmailMessage] = useState('')\n\n    // 유효성 검사\n    const [isId, setIsId] = useState(false);\n    const [isPassword, setIsPassword] = useState(false);\n    const [isPasswordCheck, setIsPasswordCheck] = useState(false);\n    const [isEmail, setIsEmail] = useState(false);\n\n    const { signUpDone, idCheckDone, emailCheckDone } = useSelector(state => state.user);\n    \n    const handleClickShowPassword = () => {\n        if(showPassword) {\n            setShowPassword(false);\n        } else {\n            setShowPassword(true);\n        }\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const handleClickShowPasswordCheck = () => {\n        if(showPasswordCheck) {\n            setShowPasswordCheck(false);\n        } else {\n            setShowPasswordCheck(true);\n        }\n    };\n\n    const handleMouseDownPasswordCheck = (event) => {\n        event.preventDefault();\n    };\n\n    const onIdHandler = (event) => {\n        setId(event.target.value)\n        if(event.target.value.length < 4 || event.target.value.length > 12) {\n            setIdMessage('4글자 이상 12글자 이하로 입력해주세요.');\n            setIsId(false);\n        // } else if() {\n\n        } else { \n            setIdMessage('')\n            setIsId(true);\n        }\n    }\n\n    const handleSignIn = () => {\n        history.push('/login');\n    }\n\n    const onPasswordHandler = (event) => {\n        setPassword(event.target.value);\n        \n        const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,12}$/\n        if(event.target.value.length < 8 || event.target.value.length > 12) {\n            setPasswordMessage('8글자 이상 12글자 이하로 입력해주세요.');\n            setIsPassword(false);\n        } else if(!passwordRegex.test(event.target.value)) {\n            setPasswordMessage('숫자, 영문자, 특수문자 조합으로 입력해주세요.');\n            setIsPassword(false);\n        } else {\n            setPasswordMessage('');\n            setIsPassword(true);\n        }\n    }\n\n    const onPasswordCheckHandler = (event) => {\n        setPasswordCheck(event.target.value);\n\n        const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,12}$/\n        if(!passwordRegex.test(event.target.value)) {\n            setPasswordMessage('숫자, 영문자, 특수문자 조합으로 입력해주세요.');\n            setIsPasswordCheck(false);\n        } else if(event.target.value !== password) {\n            setPasswordMessage('비밀번호가 일치하지 않습니다.');\n            setIsPasswordCheck(false);\n        } else {\n            setPasswordMessage('');\n            setIsPasswordCheck(true);\n        }\n    }\n    const onNameHandler = (event) => {\n        setName(event.target.value)\n    }\n    const onEmailHandler = (event) => {\n        setEmail(event.target.value)\n\n        const emailRegex = /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/\n        if(!emailRegex.test(event.target.value)){\n            setEmailMessage('유효하지 않는 이메일 형식입니다.');\n            setIsEmail(false);\n        } else {\n            setEmailMessage('');\n            setIsEmail(true);\n        }\n    }\n\n    // 아이디 중복 검사\n    const idCheck = () => {\n        dispatch({\n            type: ID_CHECK_REQUEST,\n            data: { id: id },\n        })\n    }\n\n    // 이메일 중복 검사\n    const emailCheck = () => {\n        dispatch({\n            type: EMAIL_CHECK_REQUEST, \n            data: { email: email },\n        })\n    }\n\n    // 엔터키 회원가입 trigger\n    const handleKeyPress = (e) => {\n        if(e.key === 'Enter') {\n            handleSignUp(e);\n        }\n    };\n\n    // 회원가입 버튼\n    const handleSignUp = (event) => {        \n        if(id === '' || password === '' || passwordCheck === '' || name === '' || email === '') {\n            alert('모든 정보를 입력해주세요.');\n            event.preventDefault();\n        } else if(!isId || !isPassword || !isPasswordCheck || !isEmail) {\n            console.log(\"🚬🚬🚬🚬🚬🚬🚬 \", isId, isPassword, isPasswordCheck, isEmail)\n            alert('유효성 규칙을 확인해주세요.')\n        } else if(password !== passwordCheck) {\n            alert('비밀번호가 일치하지 않습니다.');\n            event.preventDefault();\n        } else if(!idCheckDone) {\n            alert('아이디 인증이 필요합니다.');\n            event.preventDefault();\n        } else if(!emailCheckDone) {\n            alert('이메일 인증이 필요합니다.');\n            event.preventDefault();\n        } else {\n            dispatch({\n                type: SIGN_UP_REQUEST,\n                data: {\n                    id: id, \n                    password: password, \n                    name: name,\n                    email: email,\n                },\n            });\n        }\n        // if(signUpDone) history.push('/LogIn');\n        if(!signUpDone) event.preventDefault();\n    };\n    \n    useEffect(() => {\n        if(signUpDone) {\n            dispatch({\n                type: SIGN_UP_RESET,\n            });\n            history.push('/LogIn');\n        }\n    });\n\n    return (\n        <AppForm>\n        <ThemeProvider theme={theme}>\n            <Container component='main' maxWidth='xs'>\n                <CssBaseline/>\n                <Box\n                    onKeyPress={ handleKeyPress }\n                    sx={{\n                        marginTop: 1,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center'\n                    }}>\n                    <Typography variant='h3' gutterBottom marked='center' align='center' style={{ fontFamily: 'KOTRA_BOLD-Bold' }}>\n                        SIGN UP\n                    </Typography>\n                    <Typography variant='body2' align='center'></Typography>\n                    <Box\n                        component='form'\n                        noValidate='noValidate'\n                        onSubmit={e => {\n                            handleSignUp(e);\n                        }}\n                        sx={{\n                            mt: 3\n                        }}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={9}>\n                                <TextField\n                                    requried='true'\n                                    fullWidth\n                                    id='id'\n                                    label='Id'\n                                    name='id'\n                                    autoComplete='id'\n                                    style={{ backgroundColor: 'white' }}\n                                    onChange={onIdHandler}/>\n                            </Grid>\n                            <Grid item xs={12} sm={3}>\n                                <AuthButton\n                                    type='button'\n                                    onClick={ idCheck }>\n                                    인증\n                                </AuthButton>\n                            </Grid>\n                            { (id.length > 0 && idMessage.length > 0 ) && \n                                <Grid item xs={12}>\n                                    { isId ? <Success>{ idMessage } </Success> : \n                                    <Error>{ idMessage }</Error>}\n                                </Grid>\n                            }\n                            <Grid item xs={12} sm={6}>\n                                <FormControl variant='outlined' fullWidth>\n                                    <InputLabel htmlFor='outlined-adornment-password'>Password</InputLabel>\n                                    <OutlinedInput\n                                    requried='true'\n                                    id='password'\n                                    name='password'\n                                    type={ showPassword ? 'password' : 'text'}\n                                    style={{ backgroundColor: 'white' }}\n                                    onChange={ onPasswordHandler }\n                                    endAdornment={\n                                        <InputAdornment position='end'>\n                                        <IconButton\n                                            aria-label='toggle password visibility'\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge='end'\n                                        >\n                                            { showPassword ? <VisibilityOff /> : <Visibility /> }\n                                        </IconButton>\n                                        </InputAdornment>\n                                    }\n                                    label='Password'\n                                    />\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <FormControl variant='outlined' fullWidth>\n                                    <InputLabel htmlFor='outlined-adornment-password'>Password Check</InputLabel>\n                                    <OutlinedInput\n                                    requried='true'\n                                    id='passwordCheck'\n                                    name='passwordCheck'\n                                    type={ showPasswordCheck ? 'password' : 'text'}\n                                    style={{ backgroundColor: 'white' }}\n                                    onChange={ onPasswordCheckHandler }\n                                    endAdornment={\n                                        <InputAdornment position='end'>\n                                        <IconButton\n                                            aria-label='toggle password visibility'\n                                            onClick={handleClickShowPasswordCheck}\n                                            onMouseDown={handleMouseDownPasswordCheck}\n                                            edge='end'\n                                        >\n                                            { showPasswordCheck ? <VisibilityOff /> : <Visibility /> }\n                                        </IconButton>\n                                        </InputAdornment>\n                                    }\n                                    label='Password Check'\n                                    />\n                                </FormControl>\n                            </Grid>\n\n                            { (password.length > 0 && passwordMessage.length > 0 ) && \n                                <Grid item xs={12}>\n                                    { isPassword ? <Error>{ passwordMessage } </Error> : \n                                    <Error>{ passwordMessage }</Error>}\n                                </Grid>\n                            }\n                            <Grid item xs={12}>\n                                <TextField\n                                    requried='true'\n                                    fullWidth\n                                    id='name'\n                                    label='Name'\n                                    name='name'\n                                    style={{ backgroundColor: 'white' }}\n                                    onChange={onNameHandler}/>\n                            </Grid>\n                            <Grid item xs={12} sm={9}>\n                                <TextField\n                                    requried='true'\n                                    fullWidth\n                                    id='email'\n                                    label='Email Address'\n                                    name='email'\n                                    autoComplete='email'\n                                    style={{ backgroundColor: 'white' }}\n                                    onChange={onEmailHandler}/>\n                            </Grid>\n                            <Grid item xs={12} sm={3}>\n                                <AuthButton\n                                    type='button'\n                                    onClick={() => {\n                                        emailCheck();\n                                    }}>\n                                    인증\n                                </AuthButton>\n                            </Grid>  \n                            { (email.length > 0 && emailMessage.length > 0 ) && \n                                <Grid item xs={12}>\n                                    { isEmail ? <Success>{ emailMessage }</Success> : \n                                        <Error>{ emailMessage }</Error>\n                                    }\n                                </Grid>\n                            }         \n                        </Grid>\n                        <SignUpButton\n                            type='submit'\n                            sx={{\n                                mt: 3,\n                                mb: 2\n                            }}>\n                            SIGN UP\n                        </SignUpButton>\n                        <Grid container justifyContent='flex-end'>\n                            <Grid item>\n                                <SignInLink \n                                    style={{ fontFamily: 'KOTRA_GOTHIC' }}\n                                    onClick={ handleSignIn }\n                                >Already have an account? Sign in</SignInLink>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n            </Container>\n        </ThemeProvider>\n        </AppForm>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}