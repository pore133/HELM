{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_6\\\\HELM\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\JUN-D\\\\Desktop\\\\\\uD5EC\\uC2A4\\uCF00\\uC5B4\\\\11_6\\\\HELM\\\\front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/collection/data_controller.js)\r\n * Version: 23.1.6\r\n * Build date: Fri Oct 13 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { noop } from \"../../core/utils/common\";\nimport { Deferred } from \"../../core/utils/deferred\";\nvar DataControllerMock = {\n  load: function load() {\n    return Deferred().reject();\n  },\n  loadSingle: function loadSingle() {\n    return Deferred().reject();\n  },\n  loadFromStore: function loadFromStore() {\n    return Deferred().reject();\n  },\n  loadNextPage: function loadNextPage() {\n    return Deferred().reject();\n  },\n  loadOptions: noop,\n  userData: noop,\n  cancel: noop,\n  cancelAll: noop,\n  filter: noop,\n  addSearchFilter: noop,\n  group: noop,\n  paginate: noop,\n  pageSize: noop,\n  pageIndex: noop,\n  resetDataSourcePageIndex: noop,\n  totalCount: noop,\n  isLastPage: noop,\n  isLoading: noop,\n  isLoaded: noop,\n  searchValue: noop,\n  searchOperation: noop,\n  searchExpr: noop,\n  select: noop,\n  key: noop,\n  keyOf: noop,\n  store: noop,\n  items: noop,\n  applyMapFunction: noop,\n  getDataSource: noop,\n  reload: noop,\n  on: noop,\n  off: noop\n};\n\nvar DataController = /*#__PURE__*/function () {\n  function DataController(dataSource) {\n    _classCallCheck(this, DataController);\n\n    if (!dataSource) {\n      return DataControllerMock;\n    }\n\n    this._dataSource = dataSource;\n  }\n\n  _createClass(DataController, [{\n    key: \"load\",\n    value: function load() {\n      return this._dataSource.load();\n    }\n  }, {\n    key: \"loadSingle\",\n    value: function loadSingle(propName, propValue) {\n      if (arguments.length < 2) {\n        propValue = propName;\n        propName = this.key();\n      }\n\n      return this._dataSource.loadSingle(propName, propValue);\n    }\n  }, {\n    key: \"loadFromStore\",\n    value: function loadFromStore(loadOptions) {\n      return this.store().load(loadOptions);\n    }\n  }, {\n    key: \"loadNextPage\",\n    value: function loadNextPage() {\n      this.pageIndex(1 + this.pageIndex());\n      return this.load();\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions() {\n      return this._dataSource.loadOptions();\n    }\n  }, {\n    key: \"userData\",\n    value: function userData() {\n      return this._dataSource._userData;\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel(operationId) {\n      this._dataSource.cancel(operationId);\n    }\n  }, {\n    key: \"cancelAll\",\n    value: function cancelAll() {\n      this._dataSource.cancelAll();\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(_filter) {\n      return this._dataSource.filter(_filter);\n    }\n  }, {\n    key: \"addSearchFilter\",\n    value: function addSearchFilter(storeLoadOptions) {\n      this._dataSource._addSearchFilter(storeLoadOptions);\n    }\n  }, {\n    key: \"group\",\n    value: function group(_group) {\n      return this._dataSource.group(_group);\n    }\n  }, {\n    key: \"paginate\",\n    value: function paginate() {\n      return this._dataSource.paginate();\n    }\n  }, {\n    key: \"pageSize\",\n    value: function pageSize() {\n      return this._dataSource._pageSize;\n    }\n  }, {\n    key: \"pageIndex\",\n    value: function pageIndex(_pageIndex) {\n      return this._dataSource.pageIndex(_pageIndex);\n    }\n  }, {\n    key: \"resetDataSourcePageIndex\",\n    value: function resetDataSourcePageIndex() {\n      if (this.pageIndex()) {\n        this.pageIndex(0);\n        this.load();\n      }\n    }\n  }, {\n    key: \"totalCount\",\n    value: function totalCount() {\n      return this._dataSource.totalCount();\n    }\n  }, {\n    key: \"isLastPage\",\n    value: function isLastPage() {\n      return this._dataSource.isLastPage() || !this._dataSource._pageSize;\n    }\n  }, {\n    key: \"isLoading\",\n    value: function isLoading() {\n      return this._dataSource.isLoading();\n    }\n  }, {\n    key: \"isLoaded\",\n    value: function isLoaded() {\n      return this._dataSource.isLoaded();\n    }\n  }, {\n    key: \"searchValue\",\n    value: function searchValue(value) {\n      if (!arguments.length) {\n        return this._dataSource.searchValue();\n      }\n\n      return this._dataSource.searchValue(value);\n    }\n  }, {\n    key: \"searchOperation\",\n    value: function searchOperation(operation) {\n      return this._dataSource.searchOperation(operation);\n    }\n  }, {\n    key: \"searchExpr\",\n    value: function searchExpr(expr) {\n      if (!arguments.length) {\n        return this._dataSource.searchExpr();\n      }\n\n      return this._dataSource.searchExpr(expr);\n    }\n  }, {\n    key: \"select\",\n    value: function select() {\n      var _this$_dataSource;\n\n      return (_this$_dataSource = this._dataSource).select.apply(_this$_dataSource, arguments);\n    }\n  }, {\n    key: \"key\",\n    value: function key() {\n      return this._dataSource.key();\n    }\n  }, {\n    key: \"keyOf\",\n    value: function keyOf(item) {\n      return this.store().keyOf(item);\n    }\n  }, {\n    key: \"store\",\n    value: function store() {\n      return this._dataSource.store();\n    }\n  }, {\n    key: \"items\",\n    value: function items() {\n      return this._dataSource.items();\n    }\n  }, {\n    key: \"applyMapFunction\",\n    value: function applyMapFunction(data) {\n      return this._dataSource._applyMapFunction(data);\n    }\n  }, {\n    key: \"getDataSource\",\n    value: function getDataSource() {\n      return this._dataSource || null;\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      return this._dataSource.reload();\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, handler) {\n      this._dataSource.on(event, handler);\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, handler) {\n      this._dataSource.off(event, handler);\n    }\n  }]);\n\n  return DataController;\n}();\n\nexport default DataController;","map":null,"metadata":{},"sourceType":"module"}